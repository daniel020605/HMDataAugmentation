{
    "entry\\src\\main\\ets\\pages\\Dynamic.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      DynamicItem({\n        controller: this.dynamicController,\n        showComment: () => this.controller.changeIndex(1)\n      }).width(\"100%\")\n\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        TabContent() {\n\n        }.tabBar(this.TabBuilder(0, '转发'))\n\n        TabContent() {\n          Comment({\n            aid: $oid,\n            type: $type,\n            episodes: $episodes,\n            isBangumi: $isBangumi\n          }).width('100%')\n            .height('100%')\n        }.tabBar(this.TabBuilder(1, '评论'))\n      }\n      .width('100%')\n      .barHeight(52)\n      .layoutWeight(1)\n      .vertical(false)\n      .barWidth('100%')\n      .barMode(BarMode.Fixed)\n      .animationDuration(400)\n      .padding({ left: 8, right: 8, bottom: 8 })\n      .onChange((index: number) => this.currentIndex = index)\n    }\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\Index.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Tabs({ barPosition: BarPosition.End, controller: this.controller }) {\n        TabContent() {\n          Home()\n            .width('100%')\n            .height('100%')\n        }.tabBar(this.TabBuilder(0, '首页', $r('app.media.ic_home_unselect'), $r('app.media.ic_home_select')))\n\n        TabContent() {\n          Channel({\n            goLive: () => this.controller.changeIndex(0)\n          }).width('100%')\n            .height('100%')\n        }.tabBar(this.TabBuilder(1, '频道', $r('app.media.ic_channel_unselect'), $r('app.media.ic_channel_select')))\n\n        TabContent() {\n          Bangumi({\n            loginVis: $loginVis\n          }).width('100%')\n            .height('100%')\n        }.tabBar(this.TabBuilder(2, '番剧', $r(\"app.media.ic_bangumi_unselect\"), $r(\"app.media.ic_bangumi_select\")))\n\n        TabContent() {\n          Column() {\n            Dynamic({\n              controller: this.dynamicController\n            }).width('100%')\n              .height('100%')\n              .visibility(current.instance.isLogin ? Visibility.Visible : Visibility.None)\n\n            Text(\"未登录~\")\n              .fontSize(20)\n              .width('100%')\n              .height('100%')\n              .textAlign(TextAlign.Center)\n              .visibility(current.instance.isLogin ? Visibility.None : Visibility.Visible)\n          }\n        }.tabBar(this.TabBuilder(3, '动态', $r('app.media.ic_dynamic_unselect'), $r('app.media.ic_dynamic_select')))\n\n        TabContent() {\n          Column() {\n            Column({ space: 2 }) {\n              Image((this.coverType == 1 ? this.coverUrl : this.cover))\n                .height(78)\n                .margin({ top: 12 })\n                .clipShape(new Circle({ width: 78, height: 78 }))\n                .sharedTransition(SHARE_TRANSITION_ID, {\n                  duration: TRANSITION_ANIMATION_DURATION,\n                  curve: Curve.Smooth,\n                  delay: SHARE_ITEM_ANIMATION_DELAY\n                })\n              Text(this.userName)\n                .fontSize(18)\n                .margin({ top: 12 })\n                .fontColor(Color.Black)\n            }.onClick(() => {\n              if (current.instance.mid == 0)\n                page.navigate('user/Login');\n              else\n                page.navigate('user/User')\n            })\n\n            Row({ space: 3 }) {\n              Column() {\n                Text(this.dynamicCount)\n                  .fontSize(16)\n                  .fontColor($r('app.color.colorText'))\n\n                Text('动态')\n                  .fontSize(16)\n                  .fontColor($r('app.color.colorGray'))\n              }.width('33%')\n              .onClick(() => page.navigateWith('user/User', { type: 1 }))\n\n              Column() {\n                Text(this.attentionCount)\n                  .fontSize(16)\n                  .fontColor($r('app.color.colorText'))\n\n                Text('关注')\n                  .fontSize(16)\n                  .fontColor($r('app.color.colorGray'))\n              }.width('33%')\n              .onClick(() => page.navigateWith('user/Follow', { mid: current.instance.mid, type: 1 }))\n\n              Column() {\n                Text(this.fansCount)\n                  .fontSize(16)\n                  .fontColor($r('app.color.colorText'))\n\n                Text('粉丝')\n                  .fontSize(16)\n                  .fontColor($r('app.color.colorGray'))\n              }.width('33%')\n              .onClick(() => page.navigateWith('user/Follow', { mid: current.instance.mid, type: 2 }))\n            }\n            .width('100%')\n            .margin({ top: 8 })\n            .visibility(this.loginVis)\n\n            Text('设置')\n              .fontSize(18)\n              .width('100%')\n              .margin({ top: 24 })\n              .fontColor(Color.Black)\n              .borderWidth({ bottom: 1 })\n              .padding({ left: 18, bottom: 6 })\n              .borderColor($r('app.color.colorGray'))\n              .onClick(() => page.navigate('Setting'))\n            Text('个人主页')\n              .fontSize(18)\n              .width('100%')\n              .margin({ top: 8 })\n              .fontColor(Color.Black)\n              .visibility(this.loginVis)\n              .borderWidth({ bottom: 1 })\n              .padding({ left: 18, bottom: 6 })\n              .borderColor($r('app.color.colorGray'))\n              .onClick(() => page.navigate('user/User'))\n            Text('退出登录')\n              .fontSize(18)\n              .width('100%')\n              .margin({ top: 8 })\n              .fontColor(Color.Black)\n              .visibility(this.loginVis)\n              .borderWidth({ bottom: 1 })\n              .padding({ left: 18, bottom: 6 })\n              .borderColor($r('app.color.colorGray'))\n              .onClick(() => {\n                AlertDialog.show({\n                  title: '注意',\n                  message: '是否退出登录？',\n                  autoCancel: true,\n                  alignment: DialogAlignment.Bottom,\n                  gridCount: 4,\n                  offset: { dx: 0, dy: -20 },\n                  primaryButton: {\n                    value: '取消',\n                    action: null\n                  },\n                  secondaryButton: {\n                    value: '确定',\n                    action: () => {\n                      current.instance.clear();\n                      current.instance.loadInfo().then(() => {\n                        this.loginVis = Visibility.None;\n                        this.setCover($r('app.media.noavatar'));\n                        this.userName = '请登录';\n                      });\n                    }\n                  }\n                });\n              });\n          }\n          .width('100%')\n          .height('100%')\n          .justifyContent(FlexAlign.Start)\n        }.tabBar(this.TabBuilder(4, '我的', $r('app.media.ic_user_unselect'), $r('app.media.ic_user_select')))\n      }\n      .width('100%')\n      .barHeight(52)\n      .vertical(false)\n      .barWidth('100%')\n      .barMode(BarMode.Fixed)\n      .animationDuration(400)\n      .onChange((index: number) => {\n        this.currentIndex = index;\n        switch (index) {\n          case 3:\n            this.dynamicController.loadData();\n            break;\n        }\n      });\n    }\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\Parts.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Text(this.tag.name)\n        .fontSize(18)\n        .width('100%')\n        .fontWeight(FontWeight.Bold)\n        .margin({ top: 8, bottom: 8, left: 24 })\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        ForEach(this.array, (item: pagingModel) => {\n          TabContent() {\n            Column() {\n              List({ initialIndex: 0, space: 10 }) {\n                ForEach(this.data.filter((i) => i.type == item.index), (row: regionVideoItem, index: number) => {\n                  ListItem() {\n                    this.RecommendItemChild(row, index, this.data.filter((i) => i.type == item.index).length)\n                  }\n                }, (row: regionVideoItem, index) => index + JSON.stringify(row))\n              }\n              .lanes(2)\n              .padding(6)\n              .width('100%')\n              .height(\"100%\")\n              .layoutWeight(1)\n              .edgeEffect(EdgeEffect.Fade)\n              .listDirection(Axis.Vertical)\n              .backgroundColor($r('app.color.colorDarkText'))\n              .onReachEnd(() => {\n                item.page++;\n                this.loadData(item.index);\n              })\n\n              if (this.showLoading) {\n                LoadingProgress()\n                  .width(42)\n                  .height(42)\n                  .color($r('app.color.colorPrimary'))\n              }\n            }\n          }.tabBar(this.TabBuilder(item.index, item.title ?? ''))\n        });\n      }\n      .barHeight(36)\n      .vertical(false)\n      .layoutWeight(1)\n      .animationDuration(400)\n      .barMode(BarMode.Scrollable)\n      .onChange((index: number) => {\n        this.currentIndex = index;\n        this.loadData(index);\n      })\n    }\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\Play.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      IjkPlayer({\n        danmakuPn: $danmakuPn,\n        fullScreen: $fullScreen,\n        playViewHeight: $playViewHeight,\n        controller: this.videoController,\n        mDanmakuModel: this.mDanmakuModel,\n        playerCallback: this.playerCallback,\n        currentPlayStatus: $currentPlayStatus,\n        danmuViewBuilder: () => {\n          this.DanmakuViewBuilder();\n        },\n      }).width('100%')\n        .height('520px')\n        .alignSelf(ItemAlign.Center)\n\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        TabContent() {\n          Scroll(this.scroller) {\n            Column() {\n              Row() {\n                if ((this.videoInfo?.staff?.length??0) > 0) {\n                  Scroll() {\n                    Row() {\n                      ForEach(this.videoInfo?.staff, (item: staffModel) => {\n                        Column() {\n                          Image(`${item.face}@400w.jpg`)\n                            .height(42)\n                            .margin({ left: 8 })\n                            .alignSelf(ItemAlign.Center)\n                            .clipShape(new Circle({ width: 36, height: 36 }))\n                            .onClick(() => page.navigateWith('user/User', { mid: item.mid }))\n                          Text(item.name ?? '')\n                            .width(60)\n                            .maxLines(1)\n                            .fontWeight(500)\n                            .fontSize('12vp')\n                            .fontColor($r('app.color.colorPrimary'))\n                            .textOverflow({ overflow: TextOverflow.Ellipsis })\n                            .onClick(() => page.navigateWith('user/User', { mid: item.mid }))\n                        }\n                      })\n                    }\n                    .width('100%')\n                  }\n                  .width('100%')\n                  .layoutWeight(1)\n                } else {\n                  Image(this.videoInfo?.owner?.face)\n                    .height(42)\n                    .margin({ left: 8 })\n                    .clipShape(new Circle({ width: 42, height: 42 }))\n                    .onClick(() => page.navigateWith('user/User', { mid: this.videoInfo?.owner?.mid }))\n                  Column() {\n                    Text(this.videoInfo?.owner?.name ?? '')\n                      .width('100%')\n                      .fontWeight(500)\n                      .fontSize('14vp')\n                      .fontColor($r('app.color.colorPrimary'))\n                      .onClick(() => page.navigateWith('user/User', { mid: this.videoInfo?.owner?.mid }))\n                    Text(`关注：${this.videoInfo?.owner_ext?.fans ? utils.formatNumber(this.videoInfo?.owner_ext?.fans) : '0'}`)\n                      .fontSize('12vp')\n                      .width('100%')\n                      .fontColor($r('app.color.colorGray'))\n                  }\n                  .height(42)\n                  .layoutWeight(1)\n                  .margin({ left: 12 })\n                  .alignItems(HorizontalAlign.Start)\n                  .justifyContent(FlexAlign.SpaceEvenly)\n                }\n\n                Button({ type: ButtonType.Normal }) {\n                  Row() {\n                    Image($r('app.media.plus')).width(18).height(18).margin({ left: 12 }).fillColor(Color.White)\n                    Text(this.userAttention != 1 ? \"关注\" : \"取关\")\n                      .fontSize(12)\n                      .fontColor(0xffffff)\n                      .fontWeight(400)\n                      .margin({ left: 5, right: 12 })\n                  }.alignItems(VerticalAlign.Center)\n                }\n                .width('70vp')\n                .height('26vp')\n                .fontSize('14vp')\n                .borderRadius(20)\n                .fontColor(Color.White)\n                .backgroundColor($r('app.color.colorPrimary'))\n                .onClick(() => this.focusUser())\n              }\n              .width('100%')\n              .margin({ top: 8 })\n              .justifyContent(FlexAlign.SpaceAround)\n\n              Row() {\n                Text(this.videoInfo?.title ?? '')\n                  .margin({ top: 8 })\n                  .alignSelf(ItemAlign.Start)\n                  .layoutWeight(8)\n                  .fontSize(14)\n                  .fontWeight(600)\n                  .maxLines(2)\n                  .textOverflow({ overflow: TextOverflow.Ellipsis })\n                Blank()\n                Image(this.descVisible ? $r('app.media.icon_arrow_up') : $r('app.media.icon_arrow_down'))\n                  .width(16)\n                  .margin({ left: 16 })\n                  .fillColor($r('app.color.colorDescription'))\n                  .onClick(() => this.descVisible = !this.descVisible)\n              }.width('100%').padding({ left: 8, right: 8 })\n\n              Row() {\n                Image($r('app.media.icon_play_count')).width(16).fillColor(Color.Gray).margin({ right: 2 })\n                Text(this.videoInfo?.stat?.view ? `${utils.formatNumber(this.videoInfo?.stat?.view)}` : '0')\n                  .fontSize(12)\n                  .fontColor($r('app.color.colorGray')).margin({ right: 10 })\n\n                Image($r('app.media.icon_danmu_count')).width(16).fillColor(Color.Gray).margin({ right: 2 })\n                Text(this.videoInfo?.stat?.danmaku ? `${utils.formatNumber(this.videoInfo?.stat?.danmaku)}` : '0')\n                  .fontSize(12)\n                  .fontColor($r('app.color.colorGray')).margin({ right: 10 })\n\n                Image($r('app.media.icon_play_timestamp')).width(16).fillColor(Color.Gray).margin({ right: 2 })\n                Text(this.videoInfo?.pubdate ? `${utils.formatDateAsYMDHmCN(this.videoInfo?.pubdate * 1000)}` : '0')\n                  .fontSize(12)\n                  .fontColor($r('app.color.colorGray')).margin({ right: 10 })\n              }\n              .width('100%')\n              .margin({ top: 10, bottom: 16 })\n              .justifyContent(FlexAlign.Start)\n              .alignItems(VerticalAlign.Center)\n\n              Row() {\n                Button() {\n                  Column() {\n                    Image(this.likeStat == 1 ? $r('app.media.icon_like_active') : $r('app.media.icon_like_default'))\n                      .width('24vp')\n                      .fillColor(Color.Gray)\n                    Text(this.videoInfo?.stat?.like ? `${utils.formatNumber(this.videoInfo?.stat?.like)}` : '0')\n                      .fontColor(this.likeStat == 1 ? $r('app.color.colorPrimary') : $r('app.color.colorText'))\n                      .fontSize('12vp').fontColor(Color.Gray)\n                  }\n                }\n                .width('30vp')\n                .backgroundColor(Color.Transparent)\n                .layoutWeight(1)\n                .onClick(() => this.commit('like'))\n\n                Button() {\n                  Column() {\n                    Image($r('app.media.icon_dislike_default'))\n                      .width('24vp')\n                      .fillColor(Color.Gray)\n                    Text(this.videoInfo?.stat?.dislike ? `${utils.formatNumber(this.videoInfo?.stat?.dislike)}` : '0')\n                      .fontSize('12vp').fontColor(Color.Gray)\n                  }\n                }\n                .width('30vp')\n                .backgroundColor(Color.Transparent)\n                .layoutWeight(1)\n                .onClick(() => this.commit('dislike'))\n\n                Button() {\n                  Column() {\n                    Image($r('app.media.icon_coin_default'))\n                      .width('24vp')\n                      .fillColor(Color.Gray)\n                    Text(this.videoInfo?.stat?.coin ? `${utils.formatNumber(this.videoInfo?.stat?.coin)}` : '0')\n                      .fontSize('12vp').fontColor(Color.Gray)\n                  }\n                }\n                .width('30vp')\n                .backgroundColor(Color.Transparent)\n                .layoutWeight(1)\n                .onClick(() => this.coinPopup = !this.coinPopup)\n                .bindPopup(this.coinPopup, {\n                  builder: this.coinPopupBuilder,\n                  popupColor: $r('app.color.colorDarkText')\n                })\n\n                Button() {\n                  Column() {\n                    Image(this.favorite ? $r('app.media.icon_collect_active') : $r('app.media.icon_collect_default'))\n                      .width('24vp')\n                      .fillColor(Color.Gray)\n                    Text(this.videoInfo?.stat?.favorite ? `${utils.formatNumber(this.videoInfo?.stat?.favorite)}` : '0')\n                      .fontSize('12vp')\n                      .fontColor(Color.Gray)\n                  }\n                }\n                .backgroundColor(Color.Transparent)\n                .width('30vp')\n                .layoutWeight(1)\n                .onClick(() => {\n                  if (this.commit)\n                    this.commit('collect');\n                })\n                .bindPopup(this.collectShow, {\n                  builder: this.collectBoxBuilder,\n                  popupColor: $r('app.color.colorDarkText')\n                })\n              }\n              .width('100%')\n              .margin({ top: 4, bottom: 4 })\n\n              Text(this.videoInfo?.desc ?? '')\n                .fontSize(12)\n                .width('100%')\n                .margin({ right: 6 })\n                .fontColor(Color.Gray)\n\n              if (this.descVisible) {\n                Row() {\n                  Image($r('app.media.icon_stop'))\n                    .width(12)\n                    .fillColor(Color.Red)\n                    .margin({ right: 2 })\n                  Text('未经作者授权，禁止转载')\n                    .fontSize(10)\n                    .fontColor(Color.Gray)\n                }\n                .width('100%')\n                .margin({ top: 10 })\n                .alignSelf(ItemAlign.Start)\n                .justifyContent(FlexAlign.Start)\n              }\n\n              Text('剧集')\n                .alignSelf(ItemAlign.Start)\n                .margin({ top: 8, left: 8 })\n\n              if (utils.isEmpty(this.info)) {\n                List({ space: 10, initialIndex: 0 }) {\n                  ForEach(this.videoInfo?.pages, (item: pagesModel) => {\n                    ListItem() {\n                      Text(`${item.page} ${item.part}`)\n                        .maxLines(1)\n                        .fontSize(14)\n                        .width('100%')\n                        .alignSelf(ItemAlign.Center)\n                        .padding({ left: 12, bottom: 4 })\n                        .textOverflow({ overflow: TextOverflow.Ellipsis })\n                    }\n                    .borderWidth({ bottom: 1 })\n                    .padding({ top: 4, bottom: 2 })\n                    .borderColor($r('app.color.colorGray'))\n                    .onClick(() => this.playItem(item))\n                    .sharedTransition(SHARE_TRANSITION_ID, {\n                      curve: Curve.Smooth,\n                      delay: SHARE_ITEM_ANIMATION_DELAY,\n                      duration: TRANSITION_ANIMATION_DURATION\n                    })\n                  }, (item: pagesModel, index) => index + JSON.stringify(item))\n                }\n                .width('100%')\n                .height('100px')\n                .margin({ top: 6 })\n                .edgeEffect(EdgeEffect.Fade)\n                .alignSelf(ItemAlign.Center)\n                .listDirection(Axis.Vertical)\n              } else {\n                List({ space: 10, initialIndex: 0 }) {\n                  ForEach(this.info?.story_list, (item: interactionEdgeInfoStoryList) => {\n                    ListItem() {\n                      Row() {\n                        Image(item.cover)\n                          .width(80)\n                          .objectFit(ImageFit.Cover)\n\n                        Text(`${item.title}`)\n                          .maxLines(1)\n                          .fontSize(14)\n                          .width('100%')\n                          .alignSelf(ItemAlign.Center)\n                          .padding({ left: 12, bottom: 4 })\n                          .textOverflow({ overflow: TextOverflow.Ellipsis })\n                      }\n                      .alignSelf(ItemAlign.Center)\n                      .padding({ left: 12, bottom: 4 })\n                    }\n                    .borderWidth({ bottom: 1 })\n                    .padding({ top: 4, bottom: 2 })\n                    .borderColor($r('app.color.colorGray'))\n                    .sharedTransition(SHARE_TRANSITION_ID, {\n                      curve: Curve.Smooth,\n                      delay: SHARE_ITEM_ANIMATION_DELAY,\n                      duration: TRANSITION_ANIMATION_DURATION\n                    })\n                  }, (item: interactionEdgeInfoStoryList, index) => index + JSON.stringify(item))\n                }\n                .width('100%')\n                .layoutWeight(1)\n                .margin({ top: 6 })\n                .edgeEffect(EdgeEffect.Fade)\n                .alignSelf(ItemAlign.Center)\n                .listDirection(Axis.Vertical)\n              }\n            }\n            .padding(8)\n            .height('100%')\n          }\n          .width('100%')\n          .height('100%')\n          .scrollBarWidth(1)\n          .scrollBar(BarState.Auto)\n          .scrollBarColor(Color.White)\n          .edgeEffect(EdgeEffect.Spring)\n          .scrollable(ScrollDirection.Vertical)\n        }.tabBar(this.TabBuilder(0, '简介'))\n\n        TabContent() {\n          List({ initialIndex: 0 }) {\n            ForEach(this.videoInfo?.relates?.filter(i => i.is_ad != true), (item: relatesModel) => {\n              ListItem() {\n                Row() {\n                  Image(item.pic + '@400w.jpg')\n                    .height(80)\n                    .layoutWeight(4)\n                    .objectFit(ImageFit.Cover)\n                  this.titleUpNameBuilder(item)\n                }\n                .height(100)\n                .padding(10)\n                .width('100%')\n                .border({ radius: 6, })\n                .backgroundColor(Color.White)\n                .margin({ top: 4, bottom: 4 })\n                .alignItems(VerticalAlign.Center)\n                .justifyContent(FlexAlign.SpaceBetween)\n              }\n              .sharedTransition(SHARE_TRANSITION_ID, {\n                curve: Curve.Smooth,\n                delay: SHARE_ITEM_ANIMATION_DELAY,\n                duration: TRANSITION_ANIMATION_DURATION\n              })\n              .onClick(() => page.navigateWith('Play', { aid: item.aid }))\n            }, (item: relatesModel, index) => index + JSON.stringify(item))\n          }\n          .lanes(1)\n          .width('100%')\n          .height('100%')\n          .edgeEffect(EdgeEffect.Fade)\n          .listDirection(Axis.Vertical)\n          .padding({ left: 10, right: 10 })\n          .backgroundColor($r('app.color.colorDarkText'))\n        }\n        .tabBar(this.TabBuilder(1, '推荐'))\n\n        TabContent() {\n          Comment({\n            aid: $aid,\n            type: $type,\n            episodes: $episodes,\n            isBangumi: $isBangumi\n          })\n            .width('100%')\n            .height('100%')\n        }.tabBar(this.TabBuilder(2, '评论'))\n      }\n      .barWidth(360)\n      .barHeight(36)\n      .vertical(false)\n      .layoutWeight(1)\n      .margin({ top: 8 })\n      .barMode(BarMode.Fixed)\n      .animationDuration(400)\n      .onChange((index: number) => this.currentIndex = index)\n    }\n  }"
        },
        {
            "function_name": "coinPopupBuilder",
            "content": "@Builder\n  coinPopupBuilder() {\n    Row({ space: 2 }) {\n      Button() {\n        Column() {\n          Image($r('app.media.ic_coin'))\n            .width(32)\n          Text('1个硬币')\n            .fontSize(12)\n            .fontColor($r('app.color.colorDarkText'))\n        }\n      }.onClick(() => this.commit('coin1'))\n      .width(80)\n      .height(52)\n\n      Button() {\n        Column() {\n          Image($r('app.media.ic_coin'))\n            .width(32)\n          Text('2个硬币')\n            .fontSize(12)\n            .fontColor($r('app.color.colorDarkText'))\n        }\n      }.onClick(() => this.commit('coin2'))\n      .width(80)\n      .height(52)\n      .margin({ left: 8 })\n    }\n    .padding(8)\n  }"
        },
        {
            "function_name": "collectBoxBuilder",
            "content": "@Builder\n  collectBoxBuilder() {\n    List() {\n      ForEach(this.collectBox, (item: favBoxModel, index: number) => {\n        ListItem() {\n          Text(`${item.title}(${item.media_count})`)\n            .fontSize(16)\n            .textAlign(TextAlign.Start)\n        }\n        .width('800px')\n        .borderWidth({ bottom: 1 })\n        .borderColor($r('app.color.colorGray'))\n        .padding({ top: 4, bottom: 4, left: 12, right: 12 })\n        .onClick(() => this.commit('collect2', index))\n      })\n    }\n    .width('808px')\n    .height('400px')\n    .margin({ left: 6, top: 8 })\n    .edgeEffect(EdgeEffect.Fade)\n    .alignSelf(ItemAlign.Center)\n    .listDirection(Axis.Vertical)\n  }"
        },
        {
            "function_name": "DanmakuViewBuilder",
            "content": "@Builder\n  DanmakuViewBuilder() {\n    DanmakuView({ model: $mDanmakuModel })\n      .width('100%')\n      .height('520px')\n      .alignSelf(ItemAlign.Center)\n      .onClick(() => this.videoController.showControlBar())\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\Ranks.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        ForEach(this.array, (item: areaModel, index: number) => {\n          TabContent() {\n            Rank({\n              rid: item.id,\n              type: item.type\n            }).width('100%')\n              .height(\"100%\")\n          }.tabBar(this.TabBuilder(index, item.title))\n        });\n      }\n      .barHeight(36)\n      .vertical(false)\n      .scrollable(true)\n      .animationDuration(400)\n      .barMode(BarMode.Scrollable)\n      .onChange((index) => this.currentIndex = index)\n    }\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\Repost.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Text(this.isRepost ? '转发动态' : '发布动态')\n        .fontSize(26)\n        .fontWeight(600)\n        .alignSelf(ItemAlign.Start)\n        .margin({ top: 8, bottom: 8 })\n\n      if (this.isRepost) {\n        DynamicItem({\n          controller: this.dynamicController,\n          showComment: undefined\n        }).width(\"100%\")\n      }\n\n      NineGrid({ imgs: $imgs })\n        .width('100%')\n        .visibility(this.imgs.length > 0 ? Visibility.Visible : Visibility.None)\n\n      TextArea({ text: this.msgContent })\n        .height(100)\n        .width('100%')\n        .margin({ top: 8 })\n        .textAlign(TextAlign.Start)\n        .onChange((val) => {\n          if (val.length <= 233)\n            this.msgContent = val;\n        })\n\n      Row({ space: 3 }) {\n        Button() {\n          Image($r('app.media.ic_at_light'))\n            .width(26)\n        }\n        .width(32)\n        .height(32)\n        .backgroundColor($r('app.color.colorPrimary'))\n        .onClick(() => {\n          this.atSomeone();\n          this.atPopup = !this.atPopup;\n        })\n        .bindPopup(this.atPopup, { builder: this.popupBuilder, placement: Placement.Bottom, popupColor: Color.Gray })\n\n        Button() {\n          Image($r('app.media.ic_emoji_light'))\n            .width(26)\n        }.width(32)\n        .height(32)\n        .backgroundColor($r('app.color.colorPrimary'))\n        .onClick(() => this.emojiController.open())\n\n        if (!this.isRepost) {\n          Button() {\n            Image($r('app.media.ic_picture'))\n              .width(26)\n          }.width(32)\n          .height(32)\n          .backgroundColor($r('app.color.colorPrimary'))\n          .onClick(() => this.selectImage())\n        }\n      }.width('100%')\n      .margin({ top: 12 })\n\n      Row({ space: 3 }) {\n        Blank()\n          .layoutWeight(1)\n\n        Button('发送')\n          .height(32)\n          .backgroundColor($r('app.color.colorPrimary'))\n          .onClick(() => this.postRepost())\n\n        Button('返回')\n          .height(32)\n          .backgroundColor($r('app.color.colorPrimary'))\n          .onClick(() => page.navigateBack())\n      }.width('100%')\n      .margin({ top: 12 })\n    }\n    .padding(16)\n  }"
        },
        {
            "function_name": "popupBuilder",
            "content": "@Builder popupBuilder() {\n    Column() {\n\n    }\n    .padding(6)\n    .width(300)\n    .height(380)\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\Searches.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Search({ placeholder: '输入关键字', value: this.keyword })\n        .width('100%')\n        .searchButton('搜索')\n        .onSubmit((value) => {\n          this.keyword = value;\n          this.array.forEach((i) => i.page = 1)\n          this.loadData()\n        })\n\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        TabContent() {\n          Column() {\n            Row({ space: 2 }) {\n              Select([{ value: '全部' }, { value: '番剧' }, { value: '动画' }, { value: '音乐' }, { value: '舞蹈' }, {\n                value: '游戏'\n              }, { value: '科技' }, { value: '娱乐' }, { value: '鬼畜' }, { value: '电影' }, { value: '电视剧' }, {\n                value: '时尚'\n              }, { value: '生活' }, { value: '广告' }])\n                .selected(0)\n                .value(this.videoArea)\n                .onSelect((index, value) => {\n                  this.videoArea = value;\n                  this.array[0].page = 1;\n                  this.loadData();\n                });\n              Select([{ value: '综合' }, { value: '相关度' }, { value: '发布日期' }, { value: '播放' }, {\n                value: '弹幕'\n              }, { value: '评论' }, { value: '收藏' }])\n                .selected(0)\n                .value(this.videoType)\n                .onSelect((index, value) => {\n                  this.videoType = value;\n                  this.array[0].page = 1;\n                  this.loadData();\n                });\n            }\n\n            this.RenderListLayout(0)\n          }\n        }.tabBar(this.TabBuilder(0, '视频'))\n\n        TabContent() {\n          Column() {\n            this.RenderListLayout(1)\n          }\n        }.tabBar(this.TabBuilder(1, '番剧'))\n\n        TabContent() {\n          Column() {\n            this.RenderListLayout(2)\n          }\n        }.tabBar(this.TabBuilder(2, '直播'))\n\n        TabContent() {\n          Column() {\n            this.RenderListLayout(3)\n          }\n        }.tabBar(this.TabBuilder(3, '用户'))\n\n        TabContent() {\n          Column() {\n            this.RenderListLayout(4)\n          }\n        }.tabBar(this.TabBuilder(4, '影视'))\n\n        TabContent() {\n          Column() {\n            this.RenderListLayout(5)\n          }\n        }.tabBar(this.TabBuilder(5, '专栏'))\n\n        TabContent() {\n          Column() {\n            this.RenderListLayout(6)\n          }\n        }.tabBar(this.TabBuilder(6, '话题'))\n      }\n      .barWidth(360)\n      .barHeight(36)\n      .vertical(false)\n      .layoutWeight(1)\n      .barMode(BarMode.Fixed)\n      .animationDuration(400)\n      .onChange((index: number) => {\n        this.currentIndex = index\n        this.loadData();\n      })\n    }.padding(12)\n    .backgroundColor($r('app.color.colorDarkText'))\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\Setting.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Text('设置')\n        .fontSize(26)\n        .fontWeight(600)\n        .alignSelf(ItemAlign.Start)\n\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        TabContent() {\n          Scroll() {\n            Column() {\n              Row({ space: 2 }) {\n                Text('开启弹幕')\n                  .fontSize(14)\n                  .layoutWeight(1)\n\n                Toggle({ type: ToggleType.Switch, isOn: settingHelper.openDanmaku })\n                  .width(60)\n                  .selectedColor($r('app.color.colorPrimary'))\n                  .switchPointColor($r('app.color.colorWhite'))\n                  .onChange((isOn: boolean) => settingHelper.openDanmaku = isOn)\n              }\n\n              Row({ space: 2 }) {\n                Text('允许通知')\n                  .fontSize(14)\n                  .layoutWeight(1)\n\n                Toggle({ type: ToggleType.Switch, isOn: settingHelper.notifyEnable })\n                  .width(60)\n                  .selectedColor($r('app.color.colorPrimary'))\n                  .switchPointColor($r('app.color.colorWhite'))\n                  .onChange(async (isOn: boolean) => {\n                    settingHelper.notifyEnable = isOn;\n                    await utils.setNotify(isOn);\n                  })\n              }.margin({ top: 8 })\n            }\n            .width('100%')\n            .height('100%')\n          }\n        }.tabBar(this.TabBuilder(0, '通用'))\n\n        TabContent() {\n          Column() {\n            Row({ space: 2 }) {\n              TextInput({ text: this.keywords })\n                .fontSize(14)\n                .layoutWeight(1)\n                .margin({ right: 8 })\n\n              Button('添加')\n                .backgroundColor($r('app.color.colorPrimary'))\n                .onClick(() => this.addFilter())\n            }\n\n            List({ space: 8, initialIndex: 0 }) {\n              ForEach(this.array, (item: danmakuFilterTab) => {\n                ListItem() {\n                  Text() {\n                    Span(item.keyword)\n                      .fontSize(16)\n                      .decoration({ type: TextDecorationType.Underline, color: $r('app.color.colorGray') })\n                  }\n                  .width('100%')\n                  .padding({ top: 8, bottom: 8 })\n                }\n                .sharedTransition(SHARE_TRANSITION_ID, {\n                  curve: Curve.Smooth,\n                  delay: SHARE_ITEM_ANIMATION_DELAY,\n                  duration: TRANSITION_ANIMATION_DURATION\n                })\n              }, (item: danmakuFilterTab, index) => index + JSON.stringify(item))\n            }\n            .lanes(1)\n            .width('100%')\n            .height('100%')\n            .margin({ top: 8 })\n            .edgeEffect(EdgeEffect.Fade)\n            .listDirection(Axis.Vertical)\n            .backgroundColor($r('app.color.colorDarkText'))\n          }\n        }.tabBar(this.TabBuilder(1, '弹幕屏蔽'))\n\n        TabContent() {\n          Log()\n            .width('100%')\n            .height('100%')\n            .margin({ top: 12 })\n        }.tabBar(this.TabBuilder(2, '日志'))\n      }\n      .barWidth(360)\n      .barHeight(36)\n      .vertical(false)\n      .layoutWeight(1)\n      .margin({ top: 8 })\n      .barMode(BarMode.Fixed)\n      .animationDuration(400)\n      .onChange((index: number) => this.currentIndex = index)\n    }\n    .padding(16)\n    .layoutWeight(1)\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\Webs.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Web({ src: this.url, controller: this.controller })\n        .width('100%')\n        .height('100%')\n        .mixedMode(MixedMode.All)\n        .onSslErrorEventReceive((event) => event.handler.handleConfirm())\n        .onPageBegin(() => {\n          try {\n            let value = current.instance.cookies;\n            if (!utils.isEmpty(value))\n              webview.WebCookieManager.configCookieSync('https://bilibili.com', value);\n          } catch (e) {\n            logger.error(e);\n          }\n        })\n    }\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\articles\\Article.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Row({ space: 5 }) {\n        Button({ type: ButtonType.Normal, stateEffect: true }) {\n          Column() {\n            Image($r('app.media.a_dh'))\n              .width(32)\n            Text('动画')\n              .fontSize(14)\n              .margin({ top: 6 })\n              .fontColor($r('app.color.colorDarkText'))\n          }.padding({ top: 4, bottom: 4 })\n        }.width(58)\n        .backgroundColor($r('app.color.colorPrimary'))\n        .onClick(() => page.navigateWith('articles/ArticlePart', { type: 2, title: '动画' }))\n\n        Button({ type: ButtonType.Normal, stateEffect: true }) {\n          Column() {\n            Image($r('app.media.a_qxs'))\n              .width(32)\n            Text('轻小说')\n              .fontSize(14)\n              .margin({ top: 6 })\n              .fontColor($r('app.color.colorDarkText'))\n          }.padding({ top: 4, bottom: 4 })\n        }.width(58)\n        .backgroundColor($r('app.color.colorPrimary'))\n        .onClick(() => page.navigateWith('articles/ArticlePart', { type: 16, title: '轻小说' }))\n\n        Button({ type: ButtonType.Normal, stateEffect: true }) {\n          Column() {\n            Image($r('app.media.a_yx'))\n              .width(32)\n            Text('游戏')\n              .fontSize(14)\n              .margin({ top: 6 })\n              .fontColor($r('app.color.colorDarkText'))\n          }.padding({ top: 4, bottom: 4 })\n        }.width(58)\n        .backgroundColor($r('app.color.colorPrimary'))\n        .onClick(() => page.navigateWith('articles/ArticlePart', { type: 1, title: '游戏' }))\n\n        Button({ type: ButtonType.Normal, stateEffect: true }) {\n          Column() {\n            Image($r('app.media.a_kj'))\n              .width(32)\n            Text('科技')\n              .fontSize(14)\n              .margin({ top: 6 })\n              .fontColor($r('app.color.colorDarkText'))\n          }.padding({ top: 4, bottom: 4 })\n        }.width(58)\n        .backgroundColor($r('app.color.colorPrimary'))\n        .onClick(() => page.navigateWith('articles/ArticlePart', { type: 17, title: '科技' }))\n\n        Button({ type: ButtonType.Normal, stateEffect: true }) {\n          Column() {\n            Image($r('app.media.a_qt'))\n              .width(32)\n            Text('其他')\n              .fontSize(14)\n              .margin({ top: 6 })\n              .fontColor($r('app.color.colorDarkText'))\n          }.padding({ top: 4, bottom: 4 })\n        }.width(58)\n        .backgroundColor($r('app.color.colorPrimary'))\n        .onClick(() => page.navigateWith('articles/ArticlePart', { type: 29, title: '其他' }))\n      }\n      .margin({ top: 8, bottom: 12 })\n      .alignItems(VerticalAlign.Center)\n\n      List({ initialIndex: 0, space: 10 }) {\n        ForEach(this.articles, (row: articleModel, index: number) => {\n          ListItem() {\n            this.RecommendItemChild(row, index, this.articles.length)\n          }\n        }, (row: articleModel, index) => index + JSON.stringify(row))\n      }\n      .lanes(2)\n      .padding(6)\n      .width('100%')\n      .height(\"100%\")\n      .layoutWeight(1)\n      .edgeEffect(EdgeEffect.Fade)\n      .listDirection(Axis.Vertical)\n      .backgroundColor($r('app.color.colorDarkText'))\n      .onReachEnd(() => {\n        this.pageIndex++;\n        this.loadData();\n      })\n\n      if (this.showLoading) {\n        LoadingProgress()\n          .width(42)\n          .height(42)\n          .color($r('app.color.colorPrimary'))\n      }\n    }\n    .width('100%')\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\articles\\ArticlePart.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Text(this.title)\n        .fontSize(18)\n        .width('100%')\n        .fontWeight(FontWeight.Bold)\n        .margin({ top: 8, bottom: 8, left: 16 })\n\n      List({ initialIndex: 0, space: 10 }) {\n        ForEach(this.articles, (row: articleModel, index: number) => {\n          ListItem() {\n            this.RecommendItemChild(row, index, this.articles.length)\n          }\n        }, (row: articleModel, index) => index + JSON.stringify(row))\n      }\n      .lanes(2)\n      .padding(6)\n      .width('100%')\n      .height(\"100%\")\n      .layoutWeight(1)\n      .edgeEffect(EdgeEffect.Fade)\n      .listDirection(Axis.Vertical)\n      .backgroundColor($r('app.color.colorDarkText'))\n      .onReachEnd(() => {\n        this.pageIndex++;\n        this.loadData();\n      })\n\n      if (this.showLoading) {\n        LoadingProgress()\n          .width(42)\n          .height(42)\n          .color($r('app.color.colorPrimary'))\n      }\n    }.padding(12)\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\articles\\ArticleView.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Web({ src: this.url, controller: this.controller })\n        .javaScriptAccess(true)\n        .mixedMode(MixedMode.All)\n        .onSslErrorEventReceive((event) => event.handler.handleConfirm())\n        .onPageBegin(() => {\n          let value = current.instance.cookies;\n          if (!utils.isEmpty(value))\n            webview.WebCookieManager.configCookieSync('https://bilibili.com', value);\n        })\n    }\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\bangumi\\BangumiInfo.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      IjkPlayer({\n        danmakuPn: $danmakuPn,\n        fullScreen: $fullScreen,\n        playViewHeight: $playViewHeight,\n        controller: this.videoController,\n        currentPlayStatus: $currentPlayStatus,\n        danmuViewBuilder: ()=> {\n          this.DanmakuViewBuilder();\n        }\n      }).width('100%')\n        .height('520px')\n        .alignSelf(ItemAlign.Center)\n\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        TabContent() {\n          Scroll() {\n            Column() {\n              Image(this.bangumiData?.cover)\n                .height(200)\n                .borderRadius(16)\n\n              Text(this.bangumiData.title)\n                .margin({ top: 4 })\n                .fontWeight(FontWeight.Bold)\n                .fontColor($r('app.color.colorText'))\n\n              Text(this.bangumiData.new_ep?.desc)\n                .fontSize(14)\n                .margin({ top: 4 })\n                .fontColor($r('app.color.colorDescription'))\n\n              Text(`地区:${this.bangumiData.detail_media?.areaStr ?? ''}`)\n                .fontSize(14)\n                .margin({ top: 4 })\n                .fontColor($r('app.color.colorDescription'))\n\n              Text(`评分:${this.bangumiData.rating?.score ?? ''}`)\n                .fontSize(14)\n                .margin({ top: 4 })\n                .fontColor($r('app.color.colorDescription'))\n\n              Text(`播放:${this.bangumiData.stat?.play ?? ''}`)\n                .fontSize(14)\n                .margin({ top: 4 })\n                .fontColor($r('app.color.colorDescription'))\n\n              Text(`追番：${this.bangumiData.stat?.followers ?? ''}`)\n                .fontSize(14)\n                .margin({ top: 4 })\n                .fontColor($r('app.color.colorDescription'))\n\n              Text('简介')\n                .width('100%')\n                .margin({ top: 4 })\n                .textAlign(TextAlign.Start)\n                .fontWeight(FontWeight.Bold)\n                .fontColor($r('app.color.colorText'))\n\n              Text(this.bangumiData.evaluate)\n                .fontSize(14)\n                .margin({ top: 4 })\n                .fontColor($r('app.color.colorDescription'))\n\n              Text('系列')\n                .width('100%')\n                .margin({ top: 4 })\n                .textAlign(TextAlign.Start)\n                .fontWeight(FontWeight.Bold)\n                .fontColor($r('app.color.colorText'))\n\n              Scroll() {\n                Row() {\n                  ForEach(this.bangumiData?.seasons, (item: bangumiSeasons) => {\n                    Text(item.season_title)\n                      .fontSize(14)\n                      .fontColor($r('app.color.colorLink'))\n                      .decoration({ type: TextDecorationType.Underline })\n                      .onClick(() => {\n                        if (item.season_id.toString() != this.sid)\n                          page.navigateWith('bangumi/BangumiInfo', { sid: item.season_id });\n                      });\n                  })\n                }.margin({ top: 4 })\n              }\n\n              Text('CV')\n                .width('100%')\n                .margin({ top: 4 })\n                .textAlign(TextAlign.Start)\n                .fontWeight(FontWeight.Bold)\n                .fontColor($r('app.color.colorText'))\n\n              Text(this.bangumiData.detail_media?.actor)\n                .fontSize(14)\n                .margin({ top: 4 })\n                .fontColor($r('app.color.colorDescription'))\n\n              Text('STAFF')\n                .width('100%')\n                .margin({ top: 4 })\n                .textAlign(TextAlign.Start)\n                .fontWeight(FontWeight.Bold)\n                .fontColor($r('app.color.colorText'))\n\n              Text(this.bangumiData.detail_media?.staff)\n                .fontSize(14)\n                .margin({ top: 4 })\n                .fontColor($r('app.color.colorDescription'))\n            }\n            .width('100%')\n            .height('100%')\n          }\n          .padding(8)\n        }.tabBar(this.TabBuilder(0, '简介'))\n\n        TabContent() {\n          List({ space: 10, initialIndex: 0 }) {\n            ForEach(this.episodes, (item: Episodes) => {\n              ListItem() {\n                Row() {\n                  Text(`${item.index}-${item.title}`)\n                    .fontSize(14)\n                }\n                .width(60)\n                .height(40)\n                .borderWidth(1)\n                .borderRadius(8)\n                .justifyContent(FlexAlign.Center)\n                .alignItems(VerticalAlign.Center)\n                .borderColor($r('app.color.colorGray'))\n                .backgroundColor($r('app.color.colorDarkText'))\n              }\n              .padding({ left: 16, top: 6, bottom: 6, right: 16 })\n              .onClick(() => this.play(item))\n              .sharedTransition(SHARE_TRANSITION_ID, {\n                curve: Curve.Smooth,\n                delay: SHARE_ITEM_ANIMATION_DELAY,\n                duration: TRANSITION_ANIMATION_DURATION\n              })\n            }, (item: Episodes, index) => index + JSON.stringify(item))\n          }\n          .lanes(4)\n          .padding(8)\n          .width('100%')\n          .height('100%')\n          .edgeEffect(EdgeEffect.Fade)\n          .alignSelf(ItemAlign.Center)\n          .listDirection(Axis.Vertical)\n        }.tabBar(this.TabBuilder(1, '剧集'))\n\n        TabContent() {\n          Comment({\n            aid: $sid,\n            type: $type,\n            episodes: $episodes,\n            isBangumi: $isBangumi,\n            controller: this.commentController\n          }).width('100%')\n            .height('100%')\n            .backgroundColor(Color.White)\n        }.tabBar(this.TabBuilder(2, '评论'))\n      }\n      .barWidth(360)\n      .barHeight(36)\n      .vertical(false)\n      .barMode(BarMode.Fixed)\n      .animationDuration(400)\n      .onChange((index: number) => this.currentIndex = index)\n    }\n  }"
        },
        {
            "function_name": "DanmakuViewBuilder",
            "content": "@Builder\n  DanmakuViewBuilder() {\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\bangumi\\BangumiTag.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Text('索引页')\n        .fontSize(18)\n        .width('100%')\n        .margin({ left: 30 })\n        .fontWeight(FontWeight.Bold)\n\n      Scroll() {\n        Row() {\n          ForEach(this.conditions, (item: seasonTag) => {\n            Column() {\n              Text(item.name)\n              Select(item.selectArr)\n                .selected(0)\n                .width(120)\n                .value(item.selectArr[item.index]?.value)\n                .onSelect((index) => item.index = index)\n            }\n          });\n        }\n      }\n      .scrollBarWidth(1)\n      .margin({ top: 8 })\n      .edgeEffect(EdgeEffect.None)\n      .scrollable(ScrollDirection.Horizontal)\n\n      List({ space: 20, initialIndex: 0 }) {\n        ForEach(this.bangumis, (item: myBangumi) => {\n          ListItem() {\n            Column() {\n              Image(item.cover + '@400w.jpg')\n                .height('260px')\n                .alignSelf(ItemAlign.Center)\n              Text(item.title)\n                .maxLines(2)\n                .margin({ top: 8 })\n                .alignSelf(ItemAlign.Center)\n                .textOverflow({ overflow: TextOverflow.Ellipsis })\n            }.width('100%')\n          }\n          .onClick(() => page.navigateWith('bangumi/BangumiInfo', { sid: item.season_id }))\n          .sharedTransition(SHARE_TRANSITION_ID, {\n            curve: Curve.Smooth,\n            delay: SHARE_ITEM_ANIMATION_DELAY,\n            duration: TRANSITION_ANIMATION_DURATION\n          })\n        }, (item: myBangumi, index) => index + JSON.stringify(item))\n      }\n      .lanes(2)\n      .width('100%')\n      .height('100%')\n      .layoutWeight(1)\n      .margin({ top: 8 })\n      .edgeEffect(EdgeEffect.Fade)\n      .alignSelf(ItemAlign.Center)\n      .listDirection(Axis.Vertical)\n      .onReachEnd(() => {\n        this.pageIndex++;\n        this.loadData();\n      })\n\n      if (this.showLoading) {\n        LoadingProgress()\n          .width(42)\n          .height(42)\n          .color($r('app.color.colorPrimary'))\n      }\n    }.padding(8)\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\bangumi\\BangumiTimeline.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Text('放送表')\n        .fontSize(20)\n        .width('100%')\n        .margin({ left: 24 })\n        .fontWeight(FontWeight.Bold)\n\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        ForEach(this.timelines, (item: timeLine) => {\n          TabContent() {\n            Column() {\n              Text('空空如也~')\n                .fontSize(18)\n                .width('100%')\n                .height('100%')\n                .textAlign(TextAlign.Center)\n                .visibility(item.seasons?.length > 0 ? Visibility.None : Visibility.Visible)\n\n              List({ space: 10, initialIndex: 0 }) {\n                ForEach(item.seasons, (row: timeLineItem) => {\n                  ListItem() {\n                    Column() {\n                      Image(row.cover + '@400w.jpg')\n                        .height(180)\n                        .alignSelf(ItemAlign.Center)\n                        .objectFit(ImageFit.Contain)\n\n                      Text(row.title)\n                        .maxLines(2)\n                        .fontSize(14)\n                        .margin({ top: 8 })\n                        .alignSelf(ItemAlign.Center)\n                        .textOverflow({ overflow: TextOverflow.Ellipsis })\n                    }\n                    .width('100%')\n                  }\n                  .sharedTransition(SHARE_TRANSITION_ID, {\n                    curve: Curve.Smooth,\n                    delay: SHARE_ITEM_ANIMATION_DELAY,\n                    duration: TRANSITION_ANIMATION_DURATION\n                  })\n                  .onClick(() => page.navigateWith('bangumi/BangumiInfo', { 'sid': row.season_id }))\n                }, (item: timeLineItem, index) => index + JSON.stringify(item))\n              }\n              .lanes(2)\n              .width('100%')\n              .height('100%')\n              .margin({ top: 8 })\n              .edgeEffect(EdgeEffect.Fade)\n              .alignSelf(ItemAlign.Center)\n              .listDirection(Axis.Vertical)\n            }\n          }.tabBar(this.TabBuilder(item.index, item.date))\n        }, (item: timeLine, index) => index + JSON.stringify(item))\n      }\n      .barHeight(36)\n      .vertical(false)\n      .scrollable(true)\n      .animationDuration(400)\n      .barMode(BarMode.Scrollable)\n      .onChange((index: number) => {\n        this.currentIndex = index;\n      })\n    }\n    .padding({ left: 8, right: 8 })\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\bangumi\\MyBangumi.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        TabContent() {\n          List({ space: 20, initialIndex: 0 }) {\n            ForEach(this.followList.filter((i) => i.status == 1), (item: followSeasonInfo) => {\n              ListItem() {\n                Column() {\n                  Image(item.cover + '@400w.jpg')\n                    .height('260px')\n                    .alignSelf(ItemAlign.Center)\n                  Text(item.title)\n                    .maxLines(2)\n                    .margin({ top: 8 })\n                    .alignSelf(ItemAlign.Center)\n                    .textOverflow({ overflow: TextOverflow.Ellipsis })\n                }.width('100%')\n              }\n              .onClick(() => page.navigateWith('bangumi/BangumiInfo', { sid: item.season_id }))\n              .sharedTransition(SHARE_TRANSITION_ID, {\n                curve: Curve.Smooth,\n                delay: SHARE_ITEM_ANIMATION_DELAY,\n                duration: TRANSITION_ANIMATION_DURATION\n              })\n            }, (item: followSeasonInfo, index) => index + JSON.stringify(item))\n          }\n          .lanes(2)\n          .width('100%')\n          .height('100%')\n          .margin({ top: 8 })\n          .edgeEffect(EdgeEffect.Fade)\n          .alignSelf(ItemAlign.Center)\n          .listDirection(Axis.Vertical)\n          .onReachEnd(() => {\n            this.array[this.currentIndex].page++;\n            this.loadData();\n          })\n        }.tabBar(this.TabBuilder(0, '想看'))\n\n        TabContent() {\n          List({ space: 20, initialIndex: 0 }) {\n            ForEach(this.followList.filter((i) => i.status == 2), (item: followSeasonInfo) => {\n              ListItem() {\n                Column() {\n                  Image(item.cover + '@400w.jpg')\n                    .height('260px')\n                    .alignSelf(ItemAlign.Center)\n                  Text(item.title)\n                    .maxLines(2)\n                    .margin({ top: 8 })\n                    .alignSelf(ItemAlign.Center)\n                    .textOverflow({ overflow: TextOverflow.Ellipsis })\n                }.width('100%')\n              }\n              .onClick(() => page.navigateWith('bangumi/BangumiInfo', { sid: item.season_id }))\n              .sharedTransition(SHARE_TRANSITION_ID, {\n                curve: Curve.Smooth,\n                delay: SHARE_ITEM_ANIMATION_DELAY,\n                duration: TRANSITION_ANIMATION_DURATION\n              })\n            }, (item: followSeasonInfo, index) => index + JSON.stringify(item))\n          }\n          .lanes(2)\n          .width('100%')\n          .height('100%')\n          .margin({ top: 8 })\n          .edgeEffect(EdgeEffect.Fade)\n          .alignSelf(ItemAlign.Center)\n          .listDirection(Axis.Vertical)\n          .onReachEnd(() => {\n            this.array[this.currentIndex].page++;\n            this.loadData();\n          })\n\n        }.tabBar(this.TabBuilder(1, '在看'))\n\n        TabContent() {\n          List({ space: 20, initialIndex: 0 }) {\n            ForEach(this.followList.filter((i) => i.status == 3), (item: followSeasonInfo) => {\n              ListItem() {\n                Column() {\n                  Image(item.cover + '@400w.jpg')\n                    .height('260px')\n                    .alignSelf(ItemAlign.Center)\n                  Text(item.title)\n                    .maxLines(2)\n                    .margin({ top: 8 })\n                    .alignSelf(ItemAlign.Center)\n                    .textOverflow({ overflow: TextOverflow.Ellipsis })\n                }.width('100%')\n              }\n              .onClick(() => page.navigateWith('bangumi/BangumiInfo', { sid: item.season_id }))\n              .sharedTransition(SHARE_TRANSITION_ID, {\n                curve: Curve.Smooth,\n                delay: SHARE_ITEM_ANIMATION_DELAY,\n                duration: TRANSITION_ANIMATION_DURATION\n              })\n            }, (item: followSeasonInfo, index) => index + JSON.stringify(item))\n          }\n          .lanes(2)\n          .width('100%')\n          .height('100%')\n          .margin({ top: 8 })\n          .edgeEffect(EdgeEffect.Fade)\n          .alignSelf(ItemAlign.Center)\n          .listDirection(Axis.Vertical)\n          .onReachEnd(() => {\n            this.array[this.currentIndex].page++;\n            this.loadData();\n          })\n        }.tabBar(this.TabBuilder(2, '看过'))\n      }\n      .vertical(false)\n      .barMode(BarMode.Fixed)\n      .barWidth(360)\n      .barHeight(36)\n      .animationDuration(400)\n      .onChange((index: number) => {\n        this.currentIndex = index;\n        if (this.array[index].page == 0)\n          this.loadData();\n      })\n    }\n    .padding(8)\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\lives\\AllArea.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        ForEach(this.areas, (item: areaList) => {\n          TabContent() {\n            Column() {\n              List({ space: 20, initialIndex: 0 }) {\n                ForEach(item.list, (row: areaListItem) => {\n                  ListItem() {\n                    Column() {\n                      Image(row.pic)\n                        .height('78px')\n                        .alignSelf(ItemAlign.Center)\n                      Text(row.name)\n                        .maxLines(1)\n                        .fontSize(14)\n                        .margin({ top: 8 })\n                        .alignSelf(ItemAlign.Center)\n                        .textOverflow({ overflow: TextOverflow.Ellipsis })\n                    }\n                    .width('100%')\n                  }\n                  .onClick(() => page.navigateWith('lives/AreaDetail', {\n                    name: row.name,\n                    id: row.id.toString(),\n                    pid: row.parent_id.toString()\n                  }))\n                  .sharedTransition(SHARE_TRANSITION_ID, {\n                    curve: Curve.Smooth,\n                    delay: SHARE_ITEM_ANIMATION_DELAY,\n                    duration: TRANSITION_ANIMATION_DURATION\n                  })\n                }, (item: areaListItem, index) => index + JSON.stringify(item))\n              }\n              .lanes(5)\n              .width('100%')\n              .height('100%')\n              .layoutWeight(1)\n              .margin({ top: 12 })\n              .edgeEffect(EdgeEffect.Fade)\n              .alignSelf(ItemAlign.Center)\n              .listDirection(Axis.Vertical)\n\n              if (this.showLoading) {\n                LoadingProgress()\n                  .width(42)\n                  .height(42)\n                  .color($r('app.color.colorPrimary'))\n              }\n            }\n          }.tabBar(this.TabBuilder(item.index, item.name))\n        })\n      }\n      .barHeight(36)\n      .vertical(false)\n      .scrollable(true)\n      .animationDuration(400)\n      .barMode(BarMode.Scrollable)\n      .onChange((index: number) => {\n        this.currentIndex = index;\n      })\n    }.padding(8)\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\lives\\AreaDetail.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Text(this.typeName??'')\n        .fontSize(18)\n        .width('100%')\n        .margin({ left: 24 })\n        .fontWeight(FontWeight.Bold)\n\n      Row({ space: 2 }) {\n        Text('排序')\n        Select(this.sorts)\n          .selected(0)\n          .value(this.sortType ?? '')\n          .onSelect((index) => {\n            this.sortIndex = index;\n            this.sortType = this.sorts[index].value.toString();\n            this.loadData();\n          })\n      }\n\n      List({  initialIndex: 0, space: 10 }) {\n        ForEach(this.rooms, (item: roomListItem,index: number) => {\n          ListItem() {\n            this.RecommendItemChild(item, index, this.rooms.length)\n          }\n        }, (item: roomListItem, index) => index + JSON.stringify(item))\n      }\n      .lanes(2)\n      .padding(6)\n      .width('100%')\n      .height(\"100%\")\n      .layoutWeight(1)\n      .edgeEffect(EdgeEffect.Fade)\n      .listDirection(Axis.Vertical)\n      .backgroundColor($r('app.color.colorDarkText'))\n      .onReachEnd(() => {\n        this.pageNum++;\n        this.loadData();\n      })\n\n      if (this.showLoading) {\n        LoadingProgress()\n          .width(42)\n          .height(42)\n          .color($r('app.color.colorPrimary'))\n      }\n    }\n    .padding(8)\n    .width('100%')\n    .height('100%')\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\lives\\Center.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Column() {\n        Row({ space: 2 }) {\n          Image(this.userFace)\n            .height(58)\n            .clipShape(new Circle({ width: 58, height: 58 }))\n\n          Column() {\n            Text(`金瓜子:${this.userInfo.gold??''}`)\n              .fontSize(12)\n            Text(`银瓜子:${this.userInfo.silver??''}`)\n              .fontSize(12)\n          }\n          .margin({ left: 12 })\n        }\n        Text(this.userName??'')\n      }\n\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        TabContent() {\n          List({ space: 20, initialIndex: 0 }) {\n            ForEach(this.medalData, (row: liveMedalModel) => {\n              ListItem() {\n                Row() {\n                  Column() {\n                    Text(`${row.medal_name}  ${row.level}`)\n                      .fontSize(12)\n                      .alignSelf(ItemAlign.Center)\n                      .fontColor($r('app.color.colorDarkText'))\n                  }\n                  .width('260px')\n                  .borderRadius(8)\n                  .backgroundColor(row.color)\n                  .alignSelf(ItemAlign.Center)\n                  .padding({ left: 4, right: 4, top: 6, bottom: 6 })\n\n                  Text(`${row.intimacy}/${row.next_intimacy}`)\n                    .width('50%')\n                    .fontSize(12)\n                    .margin({ left: 8 })\n                    .fontColor($r('app.color.colorGray'))\n\n                  Button(row.status == 1 ? '卸下' : '佩戴')\n                    .height(30)\n                    .fontSize(14)\n                    .margin({ left: 6 })\n                    .onClick(() => this.updateMedal(row))\n                }\n              }\n              .margin({ left: 12 })\n              .sharedTransition(SHARE_TRANSITION_ID, {\n                curve: Curve.Smooth,\n                delay: SHARE_ITEM_ANIMATION_DELAY,\n                duration: TRANSITION_ANIMATION_DURATION\n              })\n            }, (item: liveMedalModel, index) => index + JSON.stringify(item))\n          }\n          .lanes(1)\n          .width('100%')\n          .height('100%')\n          .margin({ top: 8 })\n          .padding({ bottom: 24 })\n          .edgeEffect(EdgeEffect.Fade)\n          .alignSelf(ItemAlign.Center)\n          .listDirection(Axis.Vertical)\n        }.tabBar(this.TabBuilder(0, '我的勋章'))\n\n        TabContent() {\n          List({ space: 20, initialIndex: 0 }) {\n            ForEach(this.titleData, (row: liveTitleModel) => {\n              ListItem() {\n                Row({ space: 2 }) {\n                  Image(row.title_pic.img)\n                    .width(64)\n                  Text(`${row.activity}`)\n                    .maxLines(1)\n                    .fontSize(12)\n                    .margin({ left: 8 })\n                    .alignSelf(ItemAlign.Center)\n                    .textOverflow({ overflow: TextOverflow.Ellipsis })\n                }\n                .width('100%')\n                .margin({ left: 8 })\n                .alignSelf(ItemAlign.Center)\n              }\n              .sharedTransition(SHARE_TRANSITION_ID, {\n                curve: Curve.Smooth,\n                delay: SHARE_ITEM_ANIMATION_DELAY,\n                duration: TRANSITION_ANIMATION_DURATION\n              })\n            }, (item: liveTitleModel, index) => index + JSON.stringify(item))\n          }\n          .lanes(1)\n          .width('100%')\n          .height('100%')\n          .margin({ top: 8 })\n          .edgeEffect(EdgeEffect.Fade)\n          .alignSelf(ItemAlign.Center)\n          .listDirection(Axis.Vertical)\n        }.tabBar(this.TabBuilder(1, '我的头衔'))\n      }\n      .barHeight(36)\n      .width('100%')\n      .height('100%')\n      .layoutWeight(1)\n      .vertical(false)\n      .scrollable(true)\n      .animationDuration(400)\n      .barMode(BarMode.Scrollable)\n      .onChange((index: number) => this.currentIndex = index)\n    }\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\lives\\Focus.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        TabContent() {\n          Column() {\n            List({ space: 20, initialIndex: 0 }) {\n              ForEach(this.living, (row: livingModel) => {\n                ListItem() {\n                  Column() {\n                    Image(row.cover + '@400w.jpg')\n                      .height('200px')\n                      .alignSelf(ItemAlign.Center)\n                      .objectFit(ImageFit.Contain)\n\n                    Text(row.uname)\n                      .maxLines(1)\n                      .fontSize(12)\n                      .margin({ top: 8 })\n                      .alignSelf(ItemAlign.Center)\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n\n                    Text(row.title)\n                      .maxLines(1)\n                      .fontSize(14)\n                      .margin({ top: 8 })\n                      .alignSelf(ItemAlign.Center)\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n\n                    Text(`人气：${row.online}`)\n                      .maxLines(1)\n                      .fontSize(12)\n                      .margin({ top: 8 })\n                      .alignSelf(ItemAlign.Center)\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n                  }\n                  .width('100%')\n                  .alignSelf(ItemAlign.Center)\n                }\n                .onClick(() => page.navigateWith('lives/LiveRoom', { id: row.roomid }))\n                .sharedTransition(SHARE_TRANSITION_ID, {\n                  curve: Curve.Smooth,\n                  delay: SHARE_ITEM_ANIMATION_DELAY,\n                  duration: TRANSITION_ANIMATION_DURATION\n                })\n              }, (item: livingModel, index) => index + JSON.stringify(item))\n            }\n            .lanes(2)\n            .width('100%')\n            .height('100%')\n            .margin({ top: 8 })\n            .edgeEffect(EdgeEffect.Fade)\n            .alignSelf(ItemAlign.Center)\n            .listDirection(Axis.Vertical)\n\n            if (this.showLoading) {\n              LoadingProgress()\n                .width(42)\n                .height(42)\n                .color($r('app.color.colorPrimary'))\n            }\n          }\n        }.tabBar(this.TabBuilder(0, '关注直播中'))\n\n        TabContent() {\n          Column() {\n            List({ space: 20, initialIndex: 0 }) {\n              ForEach(this.notLiving, (row: notLivingModel) => {\n                ListItem() {\n                  Row({ space: 4 }) {\n                    Image(row.face + '@400w.jpg')\n                      .height('92px')\n                      .alignSelf(ItemAlign.Center)\n                      .objectFit(ImageFit.Contain)\n                      .clipShape(new Circle({ width: '92px', height: '92px' }))\n\n                    Text(row.uname)\n                      .maxLines(1)\n                      .fontSize(12)\n                      .margin({ top: 8 })\n                      .alignSelf(ItemAlign.Center)\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n\n                    Text(`粉丝:${row.attentions}`)\n                      .maxLines(1)\n                      .fontSize(12)\n                      .margin({ top: 8 })\n                      .alignSelf(ItemAlign.Center)\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n\n                    Text(`${row.live_desc}直播了${row.area_v2_name}`)\n                      .maxLines(1)\n                      .fontSize(12)\n                      .margin({ top: 8 })\n                      .alignSelf(ItemAlign.Center)\n                      .fontColor($r('app.color.colorDescription'))\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n                  }\n                  .width('100%')\n                  .margin({ left: 8 })\n                  .alignSelf(ItemAlign.Center)\n                }\n                .onClick(() => page.navigateWith('user/User', { mid: row.uid }))\n                .sharedTransition(SHARE_TRANSITION_ID, {\n                  curve: Curve.Smooth,\n                  delay: SHARE_ITEM_ANIMATION_DELAY,\n                  duration: TRANSITION_ANIMATION_DURATION\n                })\n              }, (item: notLivingModel, index) => index + JSON.stringify(item))\n            }\n            .lanes(1)\n            .width('100%')\n            .height('100%')\n            .layoutWeight(1)\n            .margin({ top: 8 })\n            .edgeEffect(EdgeEffect.Fade)\n            .alignSelf(ItemAlign.Center)\n            .listDirection(Axis.Vertical)\n\n            if (this.showLoading) {\n              LoadingProgress()\n                .width(42)\n                .height(42)\n                .color($r('app.color.colorPrimary'))\n            }\n          }\n        }.tabBar(this.TabBuilder(1, '关注未直播'))\n\n        TabContent() {\n          Column() {\n            List({ space: 20, initialIndex: 0 }) {\n              ForEach(this.history, (row: liveHistoryItemModel) => {\n                ListItem() {\n                  Column() {\n                    Image(row.cover + '@400w.jpg')\n                      .height('200px')\n                      .alignSelf(ItemAlign.Center)\n                      .objectFit(ImageFit.Contain)\n\n                    Text(row.title)\n                      .maxLines(1)\n                      .fontSize(12)\n                      .margin({ top: 8 })\n                      .alignSelf(ItemAlign.Center)\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n\n                    Text(row.name)\n                      .maxLines(1)\n                      .fontSize(14)\n                      .margin({ top: 8 })\n                      .alignSelf(ItemAlign.Center)\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n\n                    Text(row.view_at.toString())\n                      .maxLines(1)\n                      .fontSize(12)\n                      .margin({ top: 8 })\n                      .alignSelf(ItemAlign.Center)\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n                  }\n                  .width('100%')\n                  .alignSelf(ItemAlign.Center)\n                }\n                .onClick(() => page.navigateWith('lives/LiveRoom', { id: row.roomid }))\n                .sharedTransition(SHARE_TRANSITION_ID, {\n                  curve: Curve.Smooth,\n                  delay: SHARE_ITEM_ANIMATION_DELAY,\n                  duration: TRANSITION_ANIMATION_DURATION\n                })\n              }, (item: liveHistoryItemModel, index) => index + JSON.stringify(item))\n            }\n            .lanes(2)\n            .width('100%')\n            .height('100%')\n            .margin({ top: 8 })\n            .edgeEffect(EdgeEffect.Fade)\n            .alignSelf(ItemAlign.Center)\n            .listDirection(Axis.Vertical)\n\n            if (this.showLoading) {\n              LoadingProgress()\n                .width(42)\n                .height(42)\n                .color($r('app.color.colorPrimary'))\n            }\n          }\n        }.tabBar(this.TabBuilder(2, '观看历史'))\n      }\n      .barWidth(360)\n      .barHeight(36)\n      .vertical(false)\n      .barMode(BarMode.Fixed)\n      .animationDuration(400)\n      .onChange((index: number) => {\n        this.currentIndex = index;\n        this.loadData();\n      })\n    }.padding(8)\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\lives\\LiveRoom.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      IjkPlayer({\n        danmakuPn: $danmakuPn,\n        fullScreen: $fullScreen,\n        playViewHeight: $playViewHeight,\n        controller: this.videoController,\n        currentPlayStatus: $currentPlayStatus,\n        danmuViewBuilder: ()=> {\n          this.DanmakuViewBuilder();\n        }\n      })\n        .width('100%')\n        .height('520px')\n        .alignSelf(ItemAlign.Center)\n\n      Column() {\n        Row({ space: 3 }) {\n          Image(this.roomInfo?.anchor_info?.base_info?.face)\n            .height(42)\n            .margin({ left: 8 })\n            .clipShape(new Circle({ width: 42, height: 42 }))\n          Column() {\n            Text(this.roomInfo?.anchor_info?.base_info?.uname??'')\n              .width('100%')\n              .fontWeight(500)\n              .layoutWeight(1)\n              .fontSize('14vp')\n              .fontColor($r('app.color.colorPrimary'))\n\n            Text(`人气：${utils.formatNumber(this.roomInfo?.room_info?.online)??''}`)\n              .width('100%')\n              .layoutWeight(1)\n              .fontSize('12vp')\n              .fontColor($r('app.color.colorGray'))\n          }\n          .layoutWeight(1)\n          .margin({ left: 12 })\n          .alignSelf(ItemAlign.Start)\n\n          Button({ type: ButtonType.Normal }) {\n            Row() {\n              Image(this.userAttention !== 1 ? $r('app.media.plus') : $r('app.media.cancelAttention'))\n                .width(18)\n                .height(18)\n                .margin({ left: 12 })\n              Text(this.userAttention != 1 ? \"关注\" : \"取关\")\n                .fontSize(12)\n                .fontWeight(400)\n                .fontColor(0xffffff)\n                .margin({ left: 5, right: 12 })\n            }.alignItems(VerticalAlign.Center)\n          }\n          .width('70vp')\n          .height('26vp')\n          .fontSize('14vp')\n          .borderRadius(20)\n          .margin({ right: 12 })\n          .fontColor(this.userAttention != 1 ? Color.White : Color.Gray)\n          .backgroundColor(this.userAttention != 1 ? $r('app.color.colorPrimary') : $r('app.color.colorGray'))\n          .onClick(() => this.focusUser())\n        }\n        .height(46)\n        .width('100%')\n        .margin({ top: 8 })\n\n        Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n          TabContent() {\n            LiveChat({ rid: $rid })\n              .width('100%')\n              .height('100%')\n          }.tabBar(this.TabBuilder(0, '互动'))\n\n          TabContent() {\n            Column() {\n              Text('简介')\n                .width('100%')\n              RichText(this.roomInfo?.room_info?.description??'')\n                .width('100%')\n                .backgroundColor($r('app.color.start_window_background'))\n\n              Text('标签')\n                .width('100%')\n              Text(this.roomInfo?.room_info?.tags??'')\n                .fontSize(12)\n                .width('100%')\n                .fontColor($r('app.color.colorGray'))\n\n              Text('荣誉')\n                .width('100%')\n              List() {\n                ForEach(this.userInfo?.glory_info, (item: gloryInfo) => {\n                  ListItem() {\n                    Column() {\n                      Image(item.pic_url + '@400w.jpg')\n                        .width('178px')\n                        .alignSelf(ItemAlign.Center)\n                        .objectFit(ImageFit.Contain)\n                      Text(item.name)\n                        .maxLines(2)\n                        .fontSize(12)\n                        .margin({ top: 8 })\n                        .alignSelf(ItemAlign.Center)\n                        .textOverflow({ overflow: TextOverflow.Ellipsis })\n                    }\n                    .width('188px')\n                  }\n                  .sharedTransition(SHARE_TRANSITION_ID, {\n                    curve: Curve.Smooth,\n                    delay: SHARE_ITEM_ANIMATION_DELAY,\n                    duration: TRANSITION_ANIMATION_DURATION\n                  })\n                }, (item: gloryInfo, index) => index + JSON.stringify(item))\n              }\n              .width('100%')\n              .height('100%')\n              .margin({ top: 8 })\n              .edgeEffect(EdgeEffect.Fade)\n              .alignSelf(ItemAlign.Center)\n              .listDirection(Axis.Horizontal)\n            }\n            .padding(8)\n          }.tabBar(this.TabBuilder(1, '信息'))\n\n          TabContent() {\n            Column() {\n              Select([{ value: '金瓜子榜' }, { value: '今日礼物榜' }, { value: '七日礼物榜' }, { value: '粉丝榜' }])\n                .value('金瓜子榜')\n                .onSelect((i) => {\n                  this.rankIndex = i;\n                  this.loadData(2)\n                })\n\n              List() {\n                ForEach(this.ranksList, (item: liveRoomRankItemModel) => {\n                  ListItem() {\n                    Row() {\n                      Image(item.face + '@400w.jpg')\n                        .width('98px')\n                        .alignSelf(ItemAlign.Center)\n                        .objectFit(ImageFit.Contain)\n                        .clipShape(new Circle({ width: '98px', height: '98px' }))\n                      Text(item.uname)\n                        .fontSize(14)\n                        .layoutWeight(1)\n                        .alignSelf(ItemAlign.Start)\n                      Image($r('app.media.ic_rank_seeds'))\n                        .width('68px')\n                        .alignSelf(ItemAlign.Center)\n                        .objectFit(ImageFit.Contain)\n                      Text(`${utils.formatNumber(item.score)}`)\n                        .fontSize(12)\n                        .width('200px')\n                        .alignSelf(ItemAlign.Start)\n                    }\n                    .width('100%')\n                    .margin({ top: 8, left: 12 })\n                    .justifyContent(FlexAlign.Center)\n                  }\n                  .sharedTransition(SHARE_TRANSITION_ID, {\n                    curve: Curve.Smooth,\n                    delay: SHARE_ITEM_ANIMATION_DELAY,\n                    duration: TRANSITION_ANIMATION_DURATION\n                  })\n                }, (item: liveRoomRankItemModel, index) => index + JSON.stringify(item))\n              }\n              .width('100%')\n              .height('100%')\n              .layoutWeight(1)\n              .edgeEffect(EdgeEffect.Fade)\n              .alignSelf(ItemAlign.Center)\n              .listDirection(Axis.Vertical)\n              .margin({ top: 8, bottom: 8 })\n            }\n          }.tabBar(this.TabBuilder(2, '贡献榜'))\n\n          TabContent() {\n            List() {\n              ForEach(this.guardList, (item: guardRankListModel) => {\n                ListItem() {\n                  Row({ space: 2 }) {\n                    Image(item.guard_level == 1 ? $r('app.media.ic_live_guard_1') :\n                      (item.guard_level == 2 ? $r('app.media.ic_live_guard_2') : $r('app.media.ic_live_guard_3')))\n                      .width('98px')\n                      .alignSelf(ItemAlign.Center)\n                      .objectFit(ImageFit.Contain)\n                    Text(item.username)\n                      .fontSize(14)\n                      .layoutWeight(1)\n                      .alignSelf(ItemAlign.Center)\n                      .margin({ top: 8, left: 12 })\n                  }\n                  .width('100%')\n                  .margin({ left: 12 })\n                }\n                .sharedTransition(SHARE_TRANSITION_ID, {\n                  curve: Curve.Smooth,\n                  delay: SHARE_ITEM_ANIMATION_DELAY,\n                  duration: TRANSITION_ANIMATION_DURATION\n                })\n              }, (item: guardRankListModel, index) => index + JSON.stringify(item))\n            }\n            .width('100%')\n            .height('100%')\n            .edgeEffect(EdgeEffect.Fade)\n            .alignSelf(ItemAlign.Center)\n            .listDirection(Axis.Vertical)\n            .margin({ top: 8, bottom: 12 })\n          }.tabBar(this.TabBuilder(3, '舰队'))\n        }\n        .barWidth(360)\n        .barHeight(36)\n        .vertical(false)\n        .layoutWeight(1)\n        .barMode(BarMode.Fixed)\n        .animationDuration(400)\n        .onChange((index: number) => {\n          this.currentIndex = index;\n          this.loadData(index)\n        })\n      }\n      .layoutWeight(1)\n    }\n  }"
        },
        {
            "function_name": "DanmakuViewBuilder",
            "content": "@Builder DanmakuViewBuilder() {\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\user\\Follow.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        TabContent() {\n          Column() {\n            List({ space: 20, initialIndex: 0 }) {\n              ForEach(this.followings, (row: userFollowItemModel) => {\n                ListItem() {\n                  Row({ space: 2 }) {\n                    Image(row.face + '@400w.jpg')\n                      .height('92px')\n                      .alignSelf(ItemAlign.Center)\n                      .objectFit(ImageFit.Contain)\n                      .clipShape(new Circle({ width: '92px', height: '92px' }))\n\n                    Text(row.uname)\n                      .maxLines(1)\n                      .fontSize(12)\n                      .alignSelf(ItemAlign.Center)\n                      .margin({ top: 8, left: 16 })\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n                  }\n                  .width('100%')\n                  .margin({ left: 8 })\n                  .alignSelf(ItemAlign.Center)\n                }\n                .onClick(() => page.navigateWith('user/User', { mid: row.mid }))\n                .sharedTransition(SHARE_TRANSITION_ID, {\n                  curve: Curve.Smooth,\n                  delay: SHARE_ITEM_ANIMATION_DELAY,\n                  duration: TRANSITION_ANIMATION_DURATION\n                })\n              }, (item: userFollowItemModel, index) => index + JSON.stringify(item))\n            }\n            .lanes(1)\n            .width('100%')\n            .height('100%')\n            .layoutWeight(1)\n            .edgeEffect(EdgeEffect.Fade)\n            .alignSelf(ItemAlign.Center)\n            .listDirection(Axis.Vertical)\n            .margin({ top: 8, left: 16 })\n            .onReachEnd(() => {\n              this.followIndex++;\n              this.loadData();\n            })\n\n            if (this.showLoading) {\n              LoadingProgress()\n                .width(42)\n                .height(42)\n                .color($r('app.color.colorPrimary'))\n            }\n          }\n        }.tabBar(this.TabBuilder(0, '关注'))\n\n        TabContent() {\n          Column() {\n            List({ space: 20, initialIndex: 0 }) {\n              ForEach(this.followers, (row: userFollowItemModel) => {\n                ListItem() {\n                  Row({ space: 2 }) {\n                    Image(row.face + '@400w.jpg')\n                      .height('92px')\n                      .alignSelf(ItemAlign.Center)\n                      .objectFit(ImageFit.Contain)\n                      .clipShape(new Circle({ width: '92px', height: '92px' }))\n\n                    Text(row.uname)\n                      .maxLines(1)\n                      .fontSize(12)\n                      .alignSelf(ItemAlign.Center)\n                      .margin({ top: 8, left: 16 })\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n                  }\n                  .width('100%')\n                  .margin({ left: 16 })\n                  .alignSelf(ItemAlign.Center)\n                }\n                .onClick(() => page.navigateWith('user/User', { mid: row.mid }))\n                .sharedTransition(SHARE_TRANSITION_ID, {\n                  curve: Curve.Smooth,\n                  delay: SHARE_ITEM_ANIMATION_DELAY,\n                  duration: TRANSITION_ANIMATION_DURATION\n                })\n              }, (item: userFollowItemModel, index) => index + JSON.stringify(item))\n            }\n            .lanes(1)\n            .width('100%')\n            .height('100%')\n            .layoutWeight(1)\n            .edgeEffect(EdgeEffect.Fade)\n            .alignSelf(ItemAlign.Center)\n            .listDirection(Axis.Vertical)\n            .margin({ top: 8, left: 16 })\n            .onReachEnd(() => {\n              this.followerIndex++;\n              this.loadData();\n            })\n\n            if (this.showLoading) {\n              LoadingProgress()\n                .width(42)\n                .height(42)\n                .color($r('app.color.colorPrimary'))\n            }\n          }\n        }.tabBar(this.TabBuilder(1, '粉丝'))\n      }\n      .barWidth(360)\n      .barHeight(36)\n      .vertical(false)\n      .barMode(BarMode.Fixed)\n      .animationDuration(400)\n      .onChange((index: number) => {\n        this.currentIndex = index;\n        this.loadData();\n      })\n    }\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\user\\Login.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Column() {\n        Row({ space: 3 }) {\n          Image(this.icon_fir)\n            .height(80)\n          Image($r('app.media.ic_bili_logo'))\n            .height(40)\n          Image(this.icon_sec)\n            .height(80)\n        }\n        .height(80)\n        .width('100%')\n        .justifyContent(FlexAlign.Center)\n\n        Text('地区')\n          .margin({ top: 24 })\n        Select(this.areaArray)\n          .width(280)\n          .selected(2)\n          .borderWidth(1)\n          .borderRadius(10)\n          .margin({ top: 24 })\n          .value(this.areaDesc)\n          .borderStyle(BorderStyle.Dashed)\n          .borderColor($r('app.color.colorGray'))\n          .onSelect((index: number) => {\n            this.cid = this.countryData[index].country_code;\n            this.areaDesc = this.areaArray[index].value.toString();\n          })\n\n        Text('账号')\n          .margin({ top: 24 })\n        TextInput({ text: this.phone, placeholder: '请输入手机号' })\n          .width(300)\n          .margin({ top: 24 })\n          .type(InputType.Number)\n          .onChange((value: string) => this.phone = value)\n        Text('验证码')\n          .margin({ top: 24 })\n        Row({ space: 2 }) {\n          TextInput({ text: this.code, placeholder: '请输入验证码' })\n            .width(228)\n            .type(InputType.Number)\n            .onChange((value: string) => this.code = value)\n            .onFocus(() => {\n              this.icon_fir = $r('app.media.ic_22_hide');\n              this.icon_sec = $r('app.media.ic_33_hide');\n            })\n            .onBlur(() => {\n              this.icon_fir = $r('app.media.ic_22');\n              this.icon_sec = $r('app.media.ic_33');\n            })\n          Text(this.codeDesc).fontColor($r('app.color.colorPrimary'))\n            .margin({ left: 12 })\n            .decoration({ type: TextDecorationType.Underline, color: $r('app.color.colorPrimary') })\n            .onClick(() => this.sendSms(this.cleanTemp))\n        }\n        .width('100%')\n        .margin({ top: 24 })\n        .justifyContent(FlexAlign.Center)\n\n        Button('登录')\n          .margin({ top: 24 })\n          .backgroundColor($r('app.color.colorPrimary'))\n          .onClick(() => this.login())\n      }\n      .height('100%')\n      .justifyContent(FlexAlign.Center)\n    }\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\user\\User.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Column({ space: 2 }) {\n        Image(this.coverUrl)\n          .height(64)\n          .margin({ top: 8 })\n          .clipShape(new Circle({ width: 64, height: 64 }))\n          .sharedTransition(SHARE_TRANSITION_ID, {\n            duration: TRANSITION_ANIMATION_DURATION,\n            curve: Curve.Smooth,\n            delay: SHARE_ITEM_ANIMATION_DELAY\n          })\n        Text(this.userName)\n          .fontSize(16)\n          .margin({ top: 8 })\n          .fontColor(Color.Black)\n      }\n      .width('100%')\n      .justifyContent(FlexAlign.Start)\n\n      Tabs({ barPosition: BarPosition.Start, controller: this.controller }) {\n        TabContent() {\n          Column() {\n            List({ space: 20, initialIndex: 0 }) {\n              ForEach(this.vlist, (item: videoList) => {\n                ListItem() {\n                  Column() {\n                    Image(item.pic + '@400w.jpg')\n                      .height('200px')\n                      .objectFit(ImageFit.Contain)\n                    Text(item.title)\n                      .maxLines(2)\n                      .alignSelf(ItemAlign.Center)\n                      .margin({ top: 8, bottom: 8 })\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n                  }\n                  .width('100%')\n                }\n                .sharedTransition(SHARE_TRANSITION_ID, {\n                  curve: Curve.Smooth,\n                  delay: SHARE_ITEM_ANIMATION_DELAY,\n                  duration: TRANSITION_ANIMATION_DURATION\n                })\n                .onClick(() => page.navigateWith('Play', { aid: item.aid }))\n              }, (item: videoList, index) => index + JSON.stringify(item))\n            }\n            .lanes(2)\n            .width('100%')\n            .layoutWeight(1)\n            .edgeEffect(EdgeEffect.Fade)\n            .listDirection(Axis.Vertical)\n            .onReachEnd(() => {\n              this.subIndex++;\n              this.loadData(0);\n            })\n\n            if (this.showLoading) {\n              LoadingProgress()\n                .width(42)\n                .height(42)\n                .color($r('app.color.colorPrimary'))\n            }\n          }\n        }.tabBar(this.TabBuilder(0, '投稿'))\n\n        TabContent() {\n          List({ space: 8, initialIndex: 0 }) {\n            ForEach(this.dynamics, (item: dynamicCards) => {\n              ListItem() {\n                DynamicItem({\n                  item: item,\n                  showComment: () => {\n                    page.navigateWith('Dynamic', { item: item, type: 1 });\n                  }\n                }).width(\"100%\")\n              }\n              .sharedTransition(SHARE_TRANSITION_ID, {\n                curve: Curve.Smooth,\n                delay: SHARE_ITEM_ANIMATION_DELAY,\n                duration: TRANSITION_ANIMATION_DURATION\n              })\n            }, (item: dynamicCards, index) => index + JSON.stringify(item))\n          }\n          .lanes(1)\n          .width('100%')\n          .height(\"100%\")\n          .edgeEffect(EdgeEffect.Fade)\n          .listDirection(Axis.Vertical)\n          .onReachEnd(() => this.loadData(1))\n        }.tabBar(this.TabBuilder(1, '动态'))\n\n        if (this.mid == current.instance.mid) {\n          TabContent() {\n            List({ space: 20, initialIndex: 0 }) {\n              ForEach(this.seasons, (item: childItem) => {\n                ListItem() {\n                  Column() {\n                    Image(item.cover + '@400w.jpg')\n                      .height('200px')\n                      .objectFit(ImageFit.Contain)\n                    Text(item.title)\n                      .maxLines(2)\n                      .alignSelf(ItemAlign.Center)\n                      .margin({ top: 8, bottom: 8 })\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n                  }\n                  .width('100%')\n                }\n                .sharedTransition(SHARE_TRANSITION_ID, {\n                  curve: Curve.Smooth,\n                  delay: SHARE_ITEM_ANIMATION_DELAY,\n                  duration: TRANSITION_ANIMATION_DURATION\n                })\n                .onClick(() => page.navigateWith('bangumi/FullPlay', { aid: item.param }))\n              }, (item: childItem, index) => index + JSON.stringify(item))\n            }\n            .lanes(2)\n            .width('100%')\n            .height('100%')\n            .edgeEffect(EdgeEffect.Fade)\n            .listDirection(Axis.Vertical)\n          }.tabBar(this.TabBuilder(2, '追番'))\n\n          TabContent() {\n            List({ space: 20, initialIndex: 0 }) {\n              ForEach(this.archives, (item: childItem) => {\n                ListItem() {\n                  Column() {\n                    Image(item.cover + '@400w.jpg')\n                      .height('200px')\n                      .objectFit(ImageFit.Contain)\n                    Text(item.title)\n                      .maxLines(2)\n                      .alignSelf(ItemAlign.Center)\n                      .margin({ top: 8, bottom: 8 })\n                      .textOverflow({ overflow: TextOverflow.Ellipsis })\n                  }\n                  .width('100%')\n                }\n                .sharedTransition(SHARE_TRANSITION_ID, {\n                  curve: Curve.Smooth,\n                  delay: SHARE_ITEM_ANIMATION_DELAY,\n                  duration: TRANSITION_ANIMATION_DURATION\n                })\n                .onClick(() => page.navigateWith('Play', { aid: item.param }))\n              }, (item: childItem, index) => index + JSON.stringify(item))\n            }\n            .lanes(2)\n            .width('100%')\n            .height('100%')\n            .edgeEffect(EdgeEffect.Fade)\n            .listDirection(Axis.Vertical)\n          }.tabBar(this.TabBuilder(3, '最近投币'))\n\n          TabContent() {\n            Column() {\n              Row({ space: 2 }) {\n                Text('排序')\n                Select(this.favTypes)\n                  .selected(0)\n                  .value(this.favSelect ?? '')\n                  .onSelect((index) => {\n                    let item = this.favTypes[index];\n                    this.favSelect = item.value.toString();\n                    this.favType = this.favTypeArr[index].id;\n                    this.loadData(4);\n                  })\n              }\n\n              List({ space: 20, initialIndex: 0 }) {\n                ForEach(this.favs, (item: favouriteBoxsVideoItem) => {\n                  ListItem() {\n                    Column() {\n                      Image(item.pic + '@400w.jpg')\n                        .height('200px')\n                        .objectFit(ImageFit.Contain)\n                      Text(item.title)\n                        .maxLines(2)\n                        .alignSelf(ItemAlign.Center)\n                        .margin({ top: 8, bottom: 8 })\n                        .textOverflow({ overflow: TextOverflow.Ellipsis })\n                    }\n                    .width('100%')\n                  }\n                  .sharedTransition(SHARE_TRANSITION_ID, {\n                    curve: Curve.Smooth,\n                    delay: SHARE_ITEM_ANIMATION_DELAY,\n                    duration: TRANSITION_ANIMATION_DURATION\n                  })\n                  .onClick(() => page.navigateWith('Play', { aid: item.aid }))\n                }, (item: favouriteBoxsVideoItem, index) => index + JSON.stringify(item))\n              }\n              .lanes(2)\n              .width('100%')\n              .height('100%')\n              .layoutWeight(1)\n              .edgeEffect(EdgeEffect.Fade)\n              .listDirection(Axis.Vertical)\n              .onReachEnd(() => {\n                this.favIndex++;\n                this.loadData(4);\n              })\n\n              if (this.showLoading) {\n                LoadingProgress()\n                  .width(42)\n                  .height(42)\n                  .color($r('app.color.colorPrimary'))\n              }\n            }\n          }.tabBar(this.TabBuilder(4, '收藏'))\n        }\n      }\n      .padding(8)\n      .width('100%')\n      .barHeight(52)\n      .layoutWeight(1)\n      .vertical(false)\n      .barWidth('100%')\n      .barMode(BarMode.Fixed)\n      .animationDuration(400)\n      .onChange((index: number) => {\n        this.currentIndex = index;\n        this.loadData(index);\n      })\n    }\n  }"
        }
    ]
}