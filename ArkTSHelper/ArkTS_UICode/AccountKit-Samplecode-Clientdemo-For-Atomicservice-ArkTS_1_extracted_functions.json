{
    "entry\\src\\main\\ets\\components\\Address.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Flex({\n      direction: FlexDirection.RowReverse,\n      alignItems: ItemAlign.Center\n    }) {\n      if (this.address) {\n        Image($r('app.media.ic_public_arrow_right'))\n          .fillColor($r('sys.color.ohos_id_color_foreground'))\n          .opacity(0.2)\n          .width(12)\n          .height(24)\n          .margin({ left: 4 })\n      }\n\n      Row() {\n        Text($r('app.string.shippingAddress'))\n          .fontSize($r('sys.float.ohos_id_text_size_sub_title2'))\n          .fontWeight(FontWeight.Medium)\n          .width(80)\n\n        Row() {\n          if (this.address !== undefined) {\n            Column() {\n              Text(`${this.address.userName} ${this.address.mobileNumber}`)\n                .fontSize($r('sys.float.ohos_id_text_size_sub_title3'))\n                .fontColor($r('sys.color.ohos_id_color_text_secondary'))\n                .maxLines(1)\n                .textOverflow({ overflow: TextOverflow.Ellipsis })\n                .wordBreak(WordBreak.BREAK_ALL)\n              Text(`${this.address.provinceName} ${this.address.cityName} ${this.address.districtName} ${this.address.streetName} ${this.address.detailedAddress}`)\n                .fontSize($r('sys.float.ohos_id_text_size_sub_title3'))\n                .fontColor($r('sys.color.ohos_id_color_text_secondary'))\n                .maxLines(1)\n                .textOverflow({ overflow: TextOverflow.Ellipsis })\n                .wordBreak(WordBreak.BREAK_ALL)\n            }\n            .alignItems(HorizontalAlign.End)\n          } else {\n            FunctionalButton({\n              params: {\n                openType: functionalButtonComponentManager.OpenType.CHOOSE_ADDRESS,\n                label: $r('app.string.get'),\n                // Adjust the button style.\n                styleOption: {\n                  styleConfig: new functionalButtonComponentManager\n                    .ButtonConfig()\n                    .width(72)\n                    .height(28)\n                    .fontSize(14)\n                    .padding({ left: 12, right: 12 })\n                    .backgroundColor($r('sys.color.ohos_id_color_button_normal'))\n                    .fontColor($r('sys.color.ohos_id_color_focused_content_primary'))\n                    .fontWeight(FontWeight.Medium)\n                }\n              },\n              controller: new functionalButtonComponentManager.FunctionalButtonController()\n                .onChooseAddress((err, data) => {\n                  if (err) {\n                    // Processing upon an error.\n                    showErrorMessage(err);\n                    return;\n                  }\n                  // Processing upon a success.\n                  hilog.info(domainId, logTag, 'Succeeded in getting address.');\n                  this.onChange(data);\n                })\n            }).id('addressFunctionalButtonId')\n          }\n        }\n        .padding({ top: 8, bottom: 8 })\n        .justifyContent(FlexAlign.End)\n        .layoutWeight(1)\n      }\n      .layoutWeight(1)\n    }\n    .width('100%')\n    .constraintSize({ minHeight: 56 })\n    .padding({\n      left: 12,\n      right: 12,\n      top: 4,\n      bottom: 4\n    })\n    .margin({ top: 12 })\n    .backgroundColor($r('sys.color.ohos_fa_list_card_bg'))\n    .borderRadius(20)\n  }"
        }
    ],
    "entry\\src\\main\\ets\\components\\Avatar.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Row() {\n      Row() {\n        if (!this.avatar) {\n          FunctionalButton({\n            params: {\n              openType: functionalButtonComponentManager.OpenType.CHOOSE_AVATAR,\n              label: '',\n              styleOption: {\n                size: functionalButtonComponentManager.SizeType.DEFAULT,\n                bgColor: functionalButtonComponentManager.ColorType.DEFAULT,\n                plain: false,\n                disabled: false,\n                loading: false,\n                hoverClass: functionalButtonComponentManager.HoverClassType.HOVER_CLASS,\n                hoverStartTime: 0,\n                hoverStayTime: 0,\n                styleConfig: new functionalButtonComponentManager.ButtonConfig()\n                  .backgroundColor(Color.Transparent)\n                  .borderWidth(0)\n                  .borderRadius(20)\n                  .type(ButtonType.Circle)\n                  .backgroundImagePosition(Alignment.Center)\n                  .backgroundImageSize(ImageSize.Cover)\n                  .height(40)\n                  .width(40)\n                  .backgroundImage($r(\"app.media.avatar_icon\"))\n              }\n            },\n            controller: new functionalButtonComponentManager.FunctionalButtonController()\n              .onChooseAvatar(async (err: BusinessError,\n                data: functionalButtonComponentManager.ChooseAvatarResult) => {\n                if (err) {\n                  showErrorMessage(err);\n                  return;\n                }\n\n                // Preferentially use the cloud storage to store the avatar to ensure consistency between devices.\n                // ...\n\n                // In this example, the avatar is stored locally.\n                if (data.avatarUri) {\n                  this.onChange(copyFile(data.avatarUri));\n                }\n              })\n          }).id('avatarFunctionalButtonId')\n        } else {\n          Image(this.avatar)\n            .height(40)\n            .width(40)\n            .borderRadius(20)\n            .onError((err) => {\n              hilog.info(domainId, logTag, `Avatar image load fail, errMessage is ${err.message}`);\n              // When the avatar address becomes invalid, clear the invalid address.\n              this.onChange(undefined);\n            })\n        }\n\n        Text($r('app.string.hwUser'))\n          .fontWeight(FontWeight.Medium)\n          .fontSize(16)\n          .margin({ left: 12 })\n      }\n\n      Image($r('app.media.ic_public_arrow_right'))\n        .fillColor($r('sys.color.ohos_id_color_foreground'))\n        .opacity(0.2)\n        .width(12)\n        .height(24)\n    }\n    .width('100%')\n    .height(64)\n    .padding({ left: 12, right: 12 })\n    .margin({ top: 12 })\n    .backgroundColor($r('sys.color.ohos_fa_list_card_bg'))\n    .justifyContent(FlexAlign.SpaceBetween)\n    .borderRadius(20)\n  }"
        }
    ],
    "entry\\src\\main\\ets\\components\\InvoiceTitle.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Flex({ direction: FlexDirection.RowReverse, alignItems: ItemAlign.Center }) {\n      if (this.invoiceTitle) {\n        Image($r('app.media.ic_public_arrow_right'))\n          .fillColor($r('sys.color.ohos_id_color_foreground'))\n          .opacity(0.2)\n          .width(12)\n          .height(24)\n          .margin({ left: 4 })\n      }\n\n      Row() {\n        Text($r('app.string.invoiceTitle'))\n          .fontSize($r('sys.float.ohos_id_text_size_sub_title2'))\n          .fontWeight(FontWeight.Medium)\n\n        Row() {\n          if (this.invoiceTitle !== undefined) {\n            Column() {\n              Text(this.invoiceTitle.title)\n                .fontSize($r('sys.float.ohos_id_text_size_sub_title3'))\n                .fontColor($r('sys.color.ohos_id_color_text_secondary'))\n                .maxLines(1)\n              Text(this.invoiceTitle.taxNumber)\n                .fontSize($r('sys.float.ohos_id_text_size_sub_title3'))\n                .fontColor($r('sys.color.ohos_id_color_text_secondary'))\n                .maxLines(1)\n                .textOverflow({ overflow: TextOverflow.Ellipsis })\n                .wordBreak(WordBreak.BREAK_ALL)\n            }\n            .alignItems(HorizontalAlign.End)\n          } else {\n            FunctionalButton({\n              params: {\n                openType: functionalButtonComponentManager.OpenType.CHOOSE_INVOICE_TITLE,\n                label: $r('app.string.get'),\n                // Adjust the button style.\n                styleOption: {\n                  styleConfig: new functionalButtonComponentManager\n                    .ButtonConfig()\n                    .width(72)\n                    .height(28)\n                    .fontSize(14)\n                    .padding({ left: 12, right: 12 })\n                    .backgroundColor($r('sys.color.ohos_id_color_button_normal'))\n                    .fontColor($r('sys.color.ohos_id_color_focused_content_primary'))\n                    .fontWeight(FontWeight.Medium)\n                }\n              },\n              controller: new functionalButtonComponentManager.FunctionalButtonController()\n                .onChooseInvoiceTitle((err, data) => {\n                  if (err) {\n                    // Processing upon an error.\n                    showErrorMessage(err);\n                    return;\n                  }\n                  // Processing upon a success.\n                  hilog.info(domainId, logTag, 'Succeeded in obtaining data.');\n                  this.onChange(data);\n                })\n            }).id('invoiceTitleFunctionalButtonId')\n          }\n        }.padding({ top: 8, bottom: 8 })\n        .justifyContent(FlexAlign.End)\n        .constraintSize({ minHeight: 48, maxWidth: '60%' })\n        .width('100%')\n      }.justifyContent(FlexAlign.SpaceBetween)\n      .layoutWeight(1)\n    }\n    .width('100%')\n    .constraintSize({ minHeight: 56 })\n    .padding({\n      left: 12,\n      right: 12,\n      top: 4,\n      bottom: 4\n    })\n    .margin({ top: 12 })\n    .backgroundColor($r('sys.color.ohos_fa_list_card_bg'))\n    .borderRadius(20)\n    .id('InvoiceTitleBuildFlex')\n  }"
        }
    ],
    "entry\\src\\main\\ets\\components\\MinorsProtection.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    // Use the canIUse and supportMinorsMode APIs to check whether the device supports the youth mode. If not, the youth mode entry will not be displayed.\n    if (canIUse('SystemCapability.AuthenticationServices.HuaweiID.MinorsProtection')) {\n      if (minorsProtection.supportMinorsMode()) {\n        Row() {\n          Column() {\n            Row() {\n              Text($r('app.string.minorProtection'))\n                .fontSize($r('sys.float.ohos_id_text_size_sub_title2'))\n                .fontWeight(FontWeight.Medium)\n                .height('50%')\n\n              Button({ type: ButtonType.Normal }) {\n                Toggle({ type: ToggleType.Switch, isOn: this.minorsProtectionMode })\n                  .selectedColor($r('app.color.activity_color'))\n                  .hitTestBehavior(HitTestMode.None)\n              }\n              .height(50)\n              .width(50)\n              .borderRadius(8)\n              .id('minorsProtectionOnClickId')\n              .onClick(() => {\n                hilog.info(domainId, logTag, 'minorProtection onClick');\n                // If the youth mode is enabled, a dialog box needs to be displayed when the user taps the switch.\n                if (this.minorsProtectionMode) {\n                  AlertDialog.show({\n                    title: '',\n                    subtitle: '',\n                    message: $r('app.string.closeMinorsTitle'),\n                    autoCancel: true,\n                    alignment: DialogAlignment.Center,\n                    gridCount: 4,\n                    offset: { dx: 0, dy: -20 },\n                    primaryButton: {\n                      value: $r('app.string.cancel'),\n                      action: () => {\n                        hilog.info(domainId, logTag, 'Callback when the first button is clicked');\n                      }\n                    },\n                    secondaryButton: {\n                      value: $r('app.string.close'),\n                      action: () => {\n                        // The user taps the button to disable the youth mode. The API for disabling the youth mode is called.\n                        this.turnOffMinorsMode();\n                      }\n                    },\n                    cancel: () => {\n                      hilog.info(domainId, logTag, 'Closed callbacks');\n                    },\n                    textStyle: {\n                      wordBreak: WordBreak.BREAK_WORD\n                    }\n                  });\n                } else {\n                  // Call the API for enabling the youth mode.\n                  this.turnOnMinorsMode();\n                }\n              })\n              .backgroundColor(Color.Transparent)\n            }.width('100%')\n            .justifyContent(FlexAlign.SpaceBetween)\n\n            Row() {\n              Stack() {\n                if (this.minorsProtectionMode) {\n                  Row() {\n                    Divider().strokeWidth(0.5)\n                  }\n                }\n              }\n            }.width('100%')\n\n            Row() {\n              Stack() {\n                // This entry is available only when the youth mode is enabled.\n                if (this.minorsProtectionMode) {\n                  Row() {\n                    Text($r('app.string.availableTime'))\n                      .fontSize($r('sys.float.ohos_id_text_size_sub_title2'))\n                      .fontWeight(FontWeight.Medium)\n                      .height('50%')\n                    Button({ type: ButtonType.Normal }) {\n                      Toggle({ type: ToggleType.Switch, isOn: this.availableTimeMode })\n                        .selectedColor($r('app.color.activity_color'))\n                        .hitTestBehavior(HitTestMode.None)\n                    }\n                    .height(48)\n                    .width(48)\n                    .borderRadius(8)\n                    .id('verifyMinorsProtectionCredentialButton')\n                    .onClick(() => {\n                      // Password is required for adjusting youth mode–related settings.\n                      this.verifyMinorsProtectionCredential();\n                    })\n                    .backgroundColor(Color.Transparent)\n                  }.width('100%')\n                  .justifyContent(FlexAlign.SpaceBetween)\n                }\n              }\n            }.width('100%')\n          }\n        }\n        .width('100%')\n        .height(this.minorsProtectionMode ? 112 : 56)\n        .padding({\n          left: 12,\n          right: 12,\n          top: 4,\n          bottom: 4\n        })\n        .margin({ top: 12 })\n        .backgroundColor($r('sys.color.ohos_fa_list_card_bg'))\n        .justifyContent(FlexAlign.SpaceBetween)\n        .borderRadius(20)\n        .width('100%')\n        .constraintSize({\n          minHeight: 56\n        })\n      }\n    }\n  }"
        }
    ],
    "entry\\src\\main\\ets\\components\\Phone.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Flex({ direction: FlexDirection.RowReverse, alignItems: ItemAlign.Center }) {\n      if (this.phone) {\n        Image($r('app.media.ic_public_arrow_right'))\n          .fillColor($r('sys.color.ohos_id_color_foreground'))\n          .opacity(0.2)\n          .width(12)\n          .height(24)\n          .margin({ left: 4 })\n      }\n\n      Row() {\n        Text($r('app.string.phone'))\n          .fontSize($r('sys.float.ohos_id_text_size_sub_title2'))\n          .fontWeight(FontWeight.Medium)\n\n        Row() {\n          if (this.phone) {\n            Text(this.phone)\n              .fontSize($r('sys.float.ohos_id_text_size_sub_title3'))\n              .fontColor($r('sys.color.ohos_id_color_text_secondary'))\n              .textAlign(TextAlign.End)\n          } else {\n            FunctionalButton({\n              params: {\n                openType: functionalButtonComponentManager.OpenType.GET_PHONE_NUMBER,\n                label: $r('app.string.get'),\n                // Adjust the button style.\n                styleOption: {\n                  styleConfig: new functionalButtonComponentManager\n                    .ButtonConfig()\n                    .width(72)\n                    .height(28)\n                    .fontSize(14)\n                    .padding({ left: 12, right: 12 })\n                    .backgroundColor($r('sys.color.ohos_id_color_button_normal'))\n                    .fontColor($r('sys.color.ohos_id_color_focused_content_primary'))\n                    .fontWeight(FontWeight.Medium)\n                }\n              },\n              controller: new functionalButtonComponentManager.FunctionalButtonController()\n                .onGetPhoneNumber((err, data) => {\n                  if (err) {\n                    // Processing upon an error.\n                    showErrorMessage(err);\n                    return;\n                  }\n                  // Processing upon a success.\n                  hilog.info(domainId, logTag, 'succeeded in getting phone number.');\n                  const code = data.code;\n\n                  // After obtaining the authorization code, send it to the atomic service server. The atomic service server calls the Account Kit server API to obtain an access token, and then use the access token to obtain the user's mobile number.\n                  // ...\n\n                  // In this example, the mobile number is not actually obtained. The mobile number is used for display purposes only.\n                  this.onChange('180******00');\n                  // The example demonstrates that a user will be prompted for authorization to access their mobile number on each use. Please note that this is a sample scenario.\n                  cancelAuthorization();\n                })\n            }).id('phoneFunctionalButtonId')\n          }\n        }\n        .padding({ top: 8, bottom: 8 })\n        .justifyContent(FlexAlign.End)\n        .constraintSize({ minHeight: 48, maxWidth: '60%' })\n        .width('100%')\n      }\n      .justifyContent(FlexAlign.SpaceBetween)\n      .layoutWeight(1)\n    }\n    .width('100%')\n    .constraintSize({ minHeight: 56 })\n    .padding({\n      left: 12,\n      right: 12,\n      top: 4,\n      bottom: 4\n    })\n    .margin({ top: 12 })\n    .backgroundColor($r('sys.color.ohos_fa_list_card_bg'))\n    .borderRadius(20)\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\Index.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Flex({\n      direction: this.isLandScape && this.isPad ? FlexDirection.RowReverse : FlexDirection.Column,\n      justifyContent: FlexAlign.SpaceAround\n    }) {\n      Column() {\n        Row() {\n          Text(pageMap.get(this.currentPage))\n            .fontSize(28)\n            .lineHeight(36)\n            .fontWeight(FontWeight.Bold)\n        }\n        .width('100%')\n        .justifyContent(FlexAlign.Start)\n        .height(36)\n        .margin({ top: 10, bottom: 10 })\n        .padding({ left: this.mainBoxPadding, right: this.mainBoxPadding })\n\n        Row() {\n          if (this.currentPage === 'PersonalInfoPage') {\n            PersonalInfoPage({ mainBoxPadding: this.mainBoxPadding });\n          } else {\n            ShoppingPage({ mainBoxPadding: this.mainBoxPadding });\n          }\n        }\n        .layoutWeight(1)\n        .padding({ bottom: this.isLandScape && this.isPad ? 34 : 0 })\n      }.layoutWeight(1)\n\n      Row() {\n        this.NavBar();\n      }\n    }\n    .padding({ top: this.isLandScape && this.isPhone ? 0 : this.statusBarHeight })\n    .onSizeChange(() => {\n      this.setDeviceDisplayData();\n      this.mainBoxPadding = this.getMainBoxPadding();\n    })\n    .backgroundColor($r('sys.color.ohos_id_color_panel_bg'))\n  }"
        },
        {
            "function_name": "NavBar",
            "content": "@Builder\n  NavBar() {\n    Flex({\n      direction: this.isLandScape && this.isPad ? FlexDirection.Column : FlexDirection.Row,\n      justifyContent: this.isLandScape && this.isPad ? FlexAlign.Center : FlexAlign.SpaceAround\n    }) {\n      this.Unit('ShoppingPage')\n      this.Unit('PersonalInfoPage')\n    }\n    .shadow({\n      type: ShadowType.COLOR,\n      color: '#ff807b7b',\n      offsetX: 0,\n      offsetY: 0,\n      fill: true\n    } as ShadowOptions)\n    .width(this.isLandScape && this.isPad ? 96 : '100%')\n    .height(this.isLandScape && this.isPad ? '100%' : 80)\n    .alignSelf(ItemAlign.Center)\n    .backgroundColor($r('sys.color.ohos_id_color_panel_bg'))\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\PersonalInfoPage.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Scroll() {\n        Column() {\n          // Avatar.\n          Avatar({\n            avatar: this.userInfo.avatar,\n            onChange: (avatar) => {\n              hilog.info(domainId, logTag, `Avatar has updated: ${avatar}`);\n              this.userInfo.avatar = avatar;\n            }\n          })\n\n          // Mobile number.\n          Phone({\n            phone: this.userInfo.phone,\n            onChange: (phone) => {\n              hilog.info(domainId, logTag, `Phone number has updated: ${phone}`);\n              this.userInfo.phone = phone;\n            }\n          })\n\n          // Shipping address.\n          Address({\n            address: this.userInfo.address,\n            onChange: (address) => {\n              hilog.info(domainId, logTag, `Address has updated`);\n              this.userInfo.address = address;\n            }\n          })\n\n          // Invoice title.\n          InvoiceTitle({\n            invoiceTitle: this.userInfo.invoiceTitle,\n            onChange: (invoiceTitle) => {\n              hilog.info(domainId, logTag, `InvoiceTitle has updated`);\n              this.userInfo.invoiceTitle = invoiceTitle;\n            }\n          })\n\n          // Youth mode switch.\n          MinorsProtection({\n            minorsProtectionMode: this.minorsProtectionMode,\n            availableTimeMode: this.availableTimeMode\n          })\n\n          Row().layoutWeight(1)\n\n          // Remove the association.\n          Row() {\n            Button({ stateEffect: this.hasCache() }) {\n              Text($r('app.string.disassociate'))\n                .fontWeight(FontWeight.Medium)\n            }\n            .backgroundColor($r('sys.color.ohos_id_color_button_normal'))\n            .fontColor('#E84026')\n            .width('100%')\n            .height(40)\n            .opacity(this.hasCache() ? 1 : 0.4)\n            .constraintSize({\n              maxWidth: 448\n            })\n            .id('disassociateButton')\n            .onClick(() => {\n              this.disassociate();\n            })\n          }\n          .padding({\n            bottom: 8,\n            top: 24\n          })\n        }\n      }.padding({ left: this.mainBoxPadding, right: this.mainBoxPadding })\n    }\n    .alignItems(HorizontalAlign.Start)\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\ShoppingPage.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Scroll() {\n        Column() {\n          ForEach(this.cards, (item: number) => {\n            Card(item)\n          }, (item: number, index: number) => `${item}_${index}`)\n        }\n      }.padding({ left: this.mainBoxPadding, right: this.mainBoxPadding })\n    }\n  }"
        }
    ]
}