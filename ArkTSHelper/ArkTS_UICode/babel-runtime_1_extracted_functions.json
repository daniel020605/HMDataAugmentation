{
    "entry\\src\\main\\ets\\pages\\Index.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Row() {\n        Text(this.getResourceStr($r('app.string.Result')) + this.result)\n          .width('80%')\n          .fontSize(16)\n          .textAlign(TextAlign.Start)\n      }.backgroundColor(Color.Yellow).height(px2vp(300)).width(\"100%\").margin({ top: px2vp(20), bottom: px2vp(20) })\n\n      Stack({ alignContent: Alignment.TopStart }) {\n        Scroll(this.scroller) {\n          Column() {\n            Text(this.getResourceStr($r('app.string.View_results'))).fontColor(Color.Red).fontSize(16).height(20)\n            ForEach(this.modelList, (item: Model) => {\n              Column() {\n                Text(item.name + \"\" + \"\\n\" + this.getResourceStr($r('app.string.Function_ability')) + item.describe)\n                  .width('80%')\n                  .backgroundColor('#3366CC')\n                  .fontSize(16)\n                  .textAlign(TextAlign.Start)\n              }\n              .margin({ bottom: px2vp(30) })\n              .alignItems(HorizontalAlign.Start)\n              .onClick(() => {\n                this.result = item.fun();\n              })\n            })\n          }.width('100%')\n        }\n        .scrollable(ScrollDirection.Vertical) // 滚动方向纵向\n        .scrollBar(BarState.On) // 滚动条常驻显示\n        .scrollBarColor(Color.Gray) // 滚动条颜色\n        .scrollBarWidth(10) // 滚动条宽度\n        .friction(0.6)\n        .edgeEffect(EdgeEffect.None)\n        .onScroll((xOffset: number, yOffset: number) => {\n          console.info(xOffset + ' ' + yOffset)\n        })\n        .onScrollEdge((side: Edge) => {\n          console.info('To the edge')\n        })\n        .onScrollStop(() => {\n          console.info('Scroll Stop')\n        })\n      }\n    }.width('100%').height('100%').backgroundColor($r(\"app.color.index_background_color\"))\n  }"
        }
    ]
}