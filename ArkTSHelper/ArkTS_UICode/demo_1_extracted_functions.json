{
    "entry\\src\\main\\ets\\pages\\Index.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Navigation(this.pageInfos)\n      .hideNavBar(true)\n      .customNavContentTransition((from: NavContentInfo, to: NavContentInfo, operation: NavigationOperation) => {\n        if (this.useCustomTransition(from, to , operation)) {\n          return ezCustomTransition.customNavContentTransition(from, to, operation, {\n            // 自定义转场过程中禁用手势，避免体验问题\n            onTransitionStart: () => { this.isEnabled = false; },\n            onTransitionEnd: () => { this.isEnabled = true; },\n          });\n        } else {\n          return undefined;\n        }\n      })\n      .enabled(this.isEnabled)\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\CardLongTakeAnimationDemo\\CardComponent.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Column() {\n      Image($r('app.media.img_' + (parseInt(this.indexValue) % 6)))\n        .size({ width: '100%'})\n        .objectFit(ImageFit.Auto)\n        .draggable(false)\n\n      Column() {\n        Text('出现和消失的两个节点有位置大小内容的关联')\n          .size({ width: '100%', height: '100%' })\n      }\n      .size({ width: '100%', height: 40 })\n      .padding({ left: 6, right: 6 })\n      .margin({ top: 5 })\n    }\n    .visibility(this.cardAttr.isVisible)\n    .opacity(this.cardAttr.alphaValue)\n    .backgroundColor(Color.White)\n    .size({ width: '100%' })\n    .scale({ x: this.cardAttr.scaleValue, y: this.cardAttr.scaleValue })\n    .onClick((event: ClickEvent) => {\n      // onClick中做展开一镜到底逻辑\n      if (this.onColumnClicked) {\n        this.onColumnClicked(this.indexValue, event);\n      }\n    })\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\CardLongTakeAnimationDemo\\CardLongTakePageOne.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    NavDestination() {\n      Stack() {\n        WaterFlow() {\n          LazyForEach(this.dataSource, (item: CardAttr, index: number) => {\n            FlowItem() {\n              CardComponent({\n                indexValue: index.toString(),\n                cardAttr: item,\n                onColumnClicked: (indexValue: string, event: ClickEvent) => {\n                  this.onColumnClicked(indexValue, event, Constants.getFlowItemIdByIndex(index.toString()));\n                }\n              })\n                .width(this.columnWidth)\n            }\n            .borderRadius(RADIUS)\n            .clip(true)\n            .id(Constants.getFlowItemIdByIndex(index.toString()))\n          }, (item: string) => item)\n        }\n        .columnsTemplate(this.columnType)\n        .columnsGap(5)\n        .rowsGap(5)\n        .width('100%')\n        .height('100%')\n      }\n      .size({ width: '100%', height: '100%' })\n      .padding({ left: 10, right: 10 })\n    }\n    .title('卡片一镜到底首页')\n    .onReady((context: NavDestinationContext) => {\n      this.pageInfos = context.pathStack;\n    })\n  }"
        },
        {
            "function_name": "CardLongTakePageOneBuilder",
            "content": "@Builder\nexport function CardLongTakePageOneBuilder() {\n  CardLongTakePageOne();\n}"
        }
    ],
    "entry\\src\\main\\ets\\pages\\CardLongTakeAnimationDemo\\CardLongTakePageTwo.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    NavDestination() {\n      // 弹出页需要添加的代码2，将原本页面内容作为builder传给CustomTransitionPage\n      LongTakeTransitionDelegate({\n        longTakeSession: this.longTakeSession,\n        contentBuilder: (): void => {\n          this.ContentBuilder()\n        }\n      })\n    }\n    // 弹出页需要修改navdest的背景颜色为session中的值\n    .backgroundColor(this.longTakeSession.navDestinationBgColor)\n    .hideTitleBar(true)\n    .onReady((context: NavDestinationContext) => {\n      this.pageInfos = context.pathStack;\n      let param = context.pathInfo?.param as Record<string, Object>;\n      let longTakeTransitionParam = param['longTakeTransitionParam'] as LongTakeTransitionParam;\n      this.clickedCardId = param['snapShotId'] as string;\n      this.indexValue = param['indexValue'] as number;\n\n      // 弹出页需要添加的代码1\n      this.longTakeSession.init(context, longTakeTransitionParam, 'test');\n    })\n    .onBackPressed(() => {\n      return this.onBackPressed();\n    })\n    .ExitGestureStyle()\n  }"
        },
        {
            "function_name": "CardLongTakePageTwoBuilder",
            "content": "@Builder\nexport function CardLongTakePageTwoBuilder() {\n  CardLongTakePageTwo();\n}"
        },
        {
            "function_name": "ContentBuilder",
            "content": "@Builder\n  ContentBuilder() {\n    DetailPageContent({\n      indexValue: this.indexValue,\n      onBackPressed: () => {\n        this.onBackPressed();\n      },\n      sharedComponentId: Constants.getPostPageImageId(this.clickedCardId)\n    })\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\CardLongTakeAnimationDemo\\DetailPageContent.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    if (!this.isLargeSize) {\n      Column() {\n        this.MyTitleBuilder()\n\n        Column() {\n          Image($r('app.media.img_' + (this.indexValue % 6)))\n            .size({ width: '100%' })\n            .objectFit(ImageFit.Auto)\n            .visibility(this.isVisible)\n            .onClick((event?: ClickEvent) => {\n              if (!event) {\n                return;\n              }\n              let params: Record<string, Object> = {};\n              params['imageSource'] = $r('app.media.img_' + (this.indexValue % 6));\n              let transitionParam = new LongTakeTransitionParam(ezCustomTransition.getRectInfoByClickEvent(event), {\n                onEnterTransitionStart: () => { this.isVisible = Visibility.Hidden },\n                onBackTransitionEnd: () => { this.isVisible = Visibility.Visible }\n              });\n\n              ezCustomTransition.imageLongTakeTransition('test', transitionParam, (transitionParam: LongTakeTransitionParam) => {\n                params['transitionParam'] = transitionParam;\n                this.pageInfos.pushPath({ name: 'PageThree', param: params });\n              })\n            })\n        }\n        .width('80%')\n        .id('test')\n        .position({ y: 100 })\n\n        Text($r('app.string.DetailPage_text'))\n          .width(px2vp(WindowUtils.windowWidth_px))\n          .position({ y: 350 })\n      }\n      .size({ width: '100%', height: '100%' })\n      .backgroundColor(Constants.DEFAULT_BG_COLOR)\n      .expandSafeArea([SafeAreaType.SYSTEM], [SafeAreaEdge.TOP])\n    } else {\n      Row() {\n        Stack() {\n          Image($r('app.media.img_' + (this.indexValue % 6)))\n            .size({ width: '80%' })\n            .objectFit(ImageFit.Auto)\n            .id('test')\n            .visibility(this.isVisible)\n            .onClick((event?: ClickEvent) => {\n              if (!event) {\n                return;\n              }\n              let params: Record<string, Object> = {};\n              params['imageSource'] = $r('app.media.img_' + (this.indexValue % 6));\n              let transitionParam = new LongTakeTransitionParam(ezCustomTransition.getRectInfoByClickEvent(event), {\n                onEnterTransitionStart: () => { this.isVisible = Visibility.Hidden },\n                onBackTransitionEnd: () => { this.isVisible = Visibility.Visible }\n              });\n\n              ezCustomTransition.imageLongTakeTransition('test', transitionParam, (transitionParam: LongTakeTransitionParam) => {\n                params['transitionParam'] = transitionParam;\n                this.pageInfos.pushPath({ name: 'PageThree', param: params });\n              })\n            })\n        }\n        .width('50%')\n        .height('100%')\n\n        Column() {\n          this.MyTitleBuilder()\n\n          Text($r('app.string.DetailPage_text'))\n            .width('100%')\n            .height('100%')\n            .align(Alignment.TopStart)\n        }\n        .width('50%')\n        .height('100%')\n      }\n      .size({ width: '100%', height: '100%' })\n      .backgroundColor(Constants.DEFAULT_BG_COLOR)\n      .expandSafeArea([SafeAreaType.SYSTEM], [SafeAreaEdge.TOP])\n    }\n  }"
        },
        {
            "function_name": "MyTitleBuilder",
            "content": "@Builder\n  MyTitleBuilder() {\n    Row({ space: 10 }) {\n      Image($r('app.media.ic_public_back'))\n        .width(24)\n        .height(24)\n        .onClick(() => {\n          this.onBackPressed();\n        })\n        .margin({ left: 20 })\n\n      Text('详情页')\n        .height(40)\n        .fontSize(25)\n        .fontColor(Color.Black)\n        .width('100%')\n    }\n    .clip(true)\n    .width('100%')\n    .height(px2vp(TITLE_HEIGHT_PX))\n    .alignItems(VerticalAlign.Center)\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\CardLongTakeAnimationDemo\\PageFour.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    NavDestination() {\n      Stack() {\n\n      }\n      .size({ width: '100%', height: '100%' })\n      .backgroundColor(Color.Red)\n    }\n    .translate({ x: this.leftRightInteractiveSession.translateX })\n    .hideTitleBar(true)\n    .onReady((context: NavDestinationContext) => {\n      this.pathStack = context.pathStack;\n      this.leftRightInteractiveSession.init(context);\n    })\n    .ExitGestureStyle()\n  }"
        },
        {
            "function_name": "PageFourBuilder",
            "content": "@Builder\nexport function PageFourBuilder() {\n  PageFour();\n}"
        }
    ],
    "entry\\src\\main\\ets\\pages\\CardLongTakeAnimationDemo\\PageThree.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    NavDestination() {\n      LongTakeTransitionDelegate({\n        contentBuilder: () => { this.MyContent() },\n        longTakeSession: this.longTakeSession\n      })\n    }\n    .backgroundColor(this.longTakeSession.navDestinationBgColor)\n    .hideTitleBar(true)\n    .onReady((context: NavDestinationContext) => {\n      let param = context.pathInfo?.param as Record<string, Object>;\n      let longTakeTransitionParam = param['transitionParam'] as LongTakeTransitionParam;\n      this.pathStack = context.pathStack;\n      this.imageSource = param['imageSource'] as ResourceStr;\n\n      this.longTakeSession.init(context, longTakeTransitionParam, 'PageThree_Id');\n    })\n    .EnterNextPageGestureStyle()\n    .ExitGestureStyle()\n  }"
        },
        {
            "function_name": "PageThreeBuilder",
            "content": "@Builder\nexport function PageThreeBuilder() {\n  PageThree();\n}"
        },
        {
            "function_name": "MyContent",
            "content": "@Builder\n  MyContent() {\n    Stack({ alignContent: Alignment.Top }) {\n      Stack() {\n        Image(this.imageSource)\n          .size({ width:'100%' })\n          .objectFit(ImageFit.Auto)\n      }\n      .size({ width: '100%', height: 700 })\n      .id('PageThree_Id')\n    }\n    .size({ width: '100%', height: '100%' })\n    .backgroundColor(Color.Black)\n    .expandSafeArea([SafeAreaType.SYSTEM])\n  }"
        }
    ]
}