{
    "entry\\src\\main\\ets\\pages\\Index.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Row() {\n      Column() {\n        Text(this.title)\n          .fontSize(14)\n          .fontWeight(FontWeight.Bold)\n          .width('100%')\n          .textAlign(TextAlign.Center)\n          .padding(5)\n\n        Flex({ justifyContent: FlexAlign.Start, alignItems: ItemAlign.Center }) {\n          Text(\"url地址：\")\n            .fontSize(14)\n            .width(80)\n            .flexGrow(0)\n\n          TextInput({ text: this.downloadFileInfo.url })\n            .onChange((value) => {\n              this.downloadFileInfo.url = value\n            })\n            .width(110)\n            .fontSize(11)\n            .flexGrow(1)\n        }\n        .width('100%')\n        .padding(5)\n\n        Flex({ justifyContent: FlexAlign.SpaceBetween, alignItems: ItemAlign.Center }) {\n          Text(\"本地保存路径：\")\n            .fontSize(14)\n            .width(80)\n            .flexGrow(1)\n\n          Button(\"选择\")\n            .onClick(async () => {\n              this.downloadFileInfo.filePath = await getSaveFilePath(getContext(this))\n              if (fs.accessSync(this.downloadFileInfo.filePath)) {\n                fs.unlinkSync(this.downloadFileInfo.filePath)\n              }\n            })\n            .width(110)\n            .fontSize(14)\n\n          Button(this.isRunning ? \"停止\" : \"下载\")\n            .onClick(() => {\n              if (this.isRunning) {\n                this.isRunning = false\n                this.currentSession.cancel(this.currentReq)\n              } else {\n                this.downloadFile()\n              }\n\n            })\n            .enabled(this.downloadFileInfo.filePath != \"\" && this.downloadFileInfo.state != 2)\n            .width(110)\n            .fontSize(14)\n        }\n        .width('100%')\n        .padding(5)\n\n        Text(this.downloadFileInfo.filePath)\n          .fontSize(14)\n          .width('100%')\n          .padding(5)\n\n        Flex({ justifyContent: FlexAlign.Start, alignItems: ItemAlign.Center }) {\n          Column() {\n            Text(`${(this.downloadFileInfo.totalSize == 0 ? 0 :\n            ((this.downloadFileInfo.downloadedSize / this.downloadFileInfo.totalSize) * 100).toFixed(2))}%`)\n          }\n          .width(200)\n\n          Column() {\n            Progress({\n              value: this.downloadFileInfo.downloadedSize,\n              total: this.downloadFileInfo.totalSize,\n              type: ProgressType.Capsule\n            })\n          }\n          .width(150)\n          .flexGrow(1)\n        }\n        .visibility(this.downloadFileInfo.state != 0 ? Visibility.Visible : Visibility.None)\n        .width('100%')\n        .padding(10)\n\n\n        Scroll(this.scroller) {\n          Text(this.msgHistory)\n            .textAlign(TextAlign.Start)\n            .padding(10)\n            .width('100%')\n            .backgroundColor(0xeeeeee)\n        }\n        .align(Alignment.Top)\n        .backgroundColor(0xeeeeee)\n        .height(300)\n        .flexGrow(1)\n        .scrollable(ScrollDirection.Vertical)\n        .scrollBar(BarState.On)\n        .scrollBarWidth(20)\n      }\n      .width('100%')\n      .justifyContent(FlexAlign.Start)\n      .height('100%')\n    }\n    .height('100%')\n  }"
        }
    ]
}