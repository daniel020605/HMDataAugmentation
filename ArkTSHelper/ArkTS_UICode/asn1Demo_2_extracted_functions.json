{
    "entry\\src\\main\\ets\\pages\\berTest.ets": [
        {
            "function_name": "build",
            "content": "build() {\n\n    Column() {\n      Scroll(this.scroller) {\n        Row() {\n          Button(\"Boolean BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:Boolean click\");\n              const asn:ESObject = new asn1js.Boolean({\n                value: true,\n              });\n              this.berHandle(asn, \"Boolean\");\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"BmpString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:BmpString click\");\n              const testValue = \"test message текст\"\n              const asn:ESObject  = new asn1js.BmpString({\n                value: testValue,\n              });\n              this.berHandle(asn, \"BmpString\");\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"BitString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:BitString click\");\n              const asn:ESObject  = new asn1js.BitString({\n                value: [\n                  new asn1js.BitString({\n                    valueHex: new Uint8Array([0x01])\n                  }),\n                  new asn1js.BitString({\n                    valueHex: new Uint8Array([0x02])\n                  })\n                ]\n              });\n              this.berHandle(asn, \"BitString\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"Integer BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:Integer click\");\n              const asn:ESObject  = new asn1js.Integer({\n                value: 97196,\n                valueHex: new Uint8Array([0x01, 0x7b, 0xac]),\n              });\n              this.berHandle(asn, \"Integer\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"CharacterString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:CharacterString click\");\n              const testString = \"some string\";\n              const asn:ESObject  = new asn1js.CharacterString({\n                value: testString,\n              });\n              this.berHandle(asn, \"CharacterString\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"UniversalString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:UniversalString click\");\n              const testString = \"My test text\";\n              const asn:ESObject  = new asn1js.UniversalString({\n                value: testString,\n              });\n              this.berHandle(asn, \"UniversalString\");\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"Utf8String BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:Utf8String click\")\n              const testString = \"My test Utf8String\";\n              const asn:ESObject  = new asn1js.Utf8String({\n                value: testString,\n              });\n              this.berHandle(asn, \"Utf8String\");\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"DATE BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:DATE click\");\n              const testString = \"2000-01-02\";\n              const asn:ESObject  = new asn1js.DATE({\n                value: testString,\n              });\n              this.berHandle(asn, \"DATE\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"DateTime BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:DateTime click\");\n              const testString = \"2000-01-02 12:00\";\n              const asn:ESObject  = new asn1js.DateTime({\n                value: testString,\n              });\n              this.berHandle(asn, \"DateTime\");\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"Duration BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:Duration click\");\n              const testString = \"1000\";\n              const asn:ESObject  = new asn1js.Duration({\n                value: testString,\n              });\n              this.berHandle(asn, \"Duration\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"GeneralString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const testString = \"some text\";\n              const asn:ESObject  = new asn1js.GeneralString({\n                value: testString,\n              });\n              this.berHandle(asn, \"GeneralString\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"GraphicString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const testString = \"some text\";\n              const asn:ESObject  = new asn1js.GraphicString({\n                value: testString,\n              });\n              this.berHandle(asn, \"GraphicString\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n          Button(\"NumericString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const testString = \"1234567890\";\n              const asn:ESObject  = new asn1js.NumericString({\n                value: testString,\n              });\n              this.berHandle(asn, \"NumericString\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n          Button(\"ObjectIdentifier BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const testString = \"0.2.3.4.5\";\n              const asn:ESObject  = new asn1js.ObjectIdentifier({\n                value: testString,\n              });\n              this.berHandle(asn, \"ObjectIdentifier\");\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"OctetString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const asn:ESObject  = new asn1js.OctetString({\n                value: [\n                  new asn1js.OctetString({\n                    valueHex: new Uint8Array([0x01])\n                  }),\n                  new asn1js.OctetString({\n                    valueHex: new Uint8Array([0x02])\n                  }),\n                ]\n              });\n              this.berHandle(asn, \"OctetString\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n\n          Button(\"Null BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const asn:ESObject  = new asn1js.Null({\n                name: \"block2\",\n              });\n              this.berHandle(asn, \"Null\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"Sequence BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const asn:ESObject  = new asn1js.Sequence({\n                name: \"block1\",\n                value: [\n                  new asn1js.Null({\n                    name: \"block2\"\n                  }),\n                  new asn1js.Integer({\n                    name: \"block3\",\n                    optional: true\n                  }),\n                ]\n              });\n              this.berHandle(asn, \"Sequence\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n        }\n        .alignItems(VerticalAlign.Center)\n        .justifyContent(FlexAlign.Center)\n        .height(200)\n\n      }.scrollable(ScrollDirection.Horizontal)\n      .height(120)\n      Scroll(this.contentScroller) {\n        Column(){\n          Text(this.strPrototypeText)\n            .fontSize(16).margin({ top: \"20vp\" })\n          Text(this.strEncodingText)\n            .fontSize(16).margin({ top: \"20vp\" })\n          Text(this.strDecodingText)\n            .fontSize(16).margin({ top: \"20vp\" })\n        }\n      }.scrollable(ScrollDirection.Vertical)\n      .width('100%')\n      .height(620)\n\n    }\n    .height('100%')\n  }"
        }
    ],
    "entry\\src\\main\\ets\\pages\\Launcher.ets": [
        {
            "function_name": "build",
            "content": "build() {\n    Row() {\n      Scroll(this.scroller) {\n        Column() {\n          Text(this.message)\n            .fontSize(16)\n\n          Button($r('app.string.Asn1_serializes'))\n            .fontSize(16)\n            .margin({ top: \"20px\" })\n            .onClick((event) => {\n              let serialize:JSONSerializer= new JSONSerializer();\n              let startTime =new Date().getMilliseconds()\n              console.info(\"asn1Demo-- start get JSONSerializer :\"+startTime)\n              this.json = serialize(sequence);\n              let endTime=new Date().getMilliseconds()\n              console.info(\"asn1Demo-- end get JSONSerializer time:\"+(endTime))\n              console.info(\"asn1Demo-- JSONSerializer time consuming:\"+(endTime-startTime))\n              this.serializeJsonText = JSON.stringify(this.json);\n            })\n\n          Text(this.serializeJsonText)\n            .margin({ top: \"20px\" })\n            .fontSize(16)\n\n          Button($r('app.string.Asn1_deserializes'))\n            .fontSize(16)\n            .margin({ top: \"20px\" })\n            .onClick((event) => {\n              if(!this.json){\n                prompt.showToast({message:this.getResourceString($r('app.string.Serialize')),duration:2000})\n                return;\n              }\n              const deserialize:JSONDeserializer = new JSONDeserializer();\n              let startTime =new Date().getMilliseconds()\n              console.info(\"asn1Demo-- start get JSONDeserializer :\"+startTime)\n              const asn1ObjectModel:ESObject = deserialize(this.json);\n              let endTime=new Date().getMilliseconds()\n              console.info(\"asn1Demo-- end get JSONDeserializer time:\"+(endTime))\n              console.info(\"asn1Demo-- JSONDeserializer time consuming:\"+(endTime-startTime))\n              this.deserializeJsonText = JSON.stringify(asn1ObjectModel);\n            })\n\n          Text(this.deserializeJsonText)\n            .margin({ top: \"20px\" })\n            .fontSize(16)\n\n          Text(this.deserializeJsonTextBase64)\n            .margin({ top: \"20px\" })\n            .fontSize(16)\n\n\n          Button(this.btn64Text)\n            .fontSize(16)\n            .margin({ top: \"20px\" })\n            .onClick((event) => {\n              let startTime =new Date().getMilliseconds()\n              console.info(\"asn1Demo-- start get Base64 :\"+startTime)\n              if (!this.btnBase64Clicked) {\n                this.deserializeJsonTextBase64 = btoa(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcefghijklmnopqrstuvwxyz1234567890+/AA==!@#$%^&*()_-/][{}?:\");\n                this.btnBase64Clicked = true;\n              } else {\n                this.deserializeJsonTextBase64 = atob(this.deserializeJsonTextBase64);\n                this.btnBase64Clicked = false;\n              }\n              this.btn64Text = this.btnBase64Clicked ? this.getResourceString($r('app.string.Base64_decoding')) : this.getResourceString($r('app.string.Base64_encoding'));\n\n              let endTime=new Date().getMilliseconds()\n              console.info(\"asn1Demo-- end get Base64 time:\"+(endTime))\n              console.info(\"asn1Demo-- Base64 time consuming:\"+(endTime-startTime))\n            })\n\n          Text(this.deserializeJsonTextHex)\n            .margin({ top: \"20px\" })\n            .fontSize(16)\n\n          Button(this.btnHexText)\n            .fontSize(16)\n            .margin({ top: \"20px\" })\n            .onClick((event) => {\n              let startTime =new Date().getMilliseconds()\n              console.info(\"asn1Demo-- start hex Base64 :\"+startTime)\n              if (!this.btnHexClicked) {\n                this.deserializeJsonTextHex = encode(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcefghijklmnopqrstuvwxyz1234567890+/AA==!@#$%^&*()_-/][{}?:\");\n                this.btnHexClicked = true;\n              } else {\n                this.deserializeJsonTextHex = decode(this.deserializeJsonTextHex);\n                this.btnHexClicked = false;\n              }\n\n              this.btnHexText = this.btnHexClicked ? this.getResourceString($r('app.string.Hex_decoding')) : this.getResourceString($r('app.string.Hex_encoding'));\n              let endTime=new Date().getMilliseconds()\n              console.info(\"asn1Demo-- end get hex time:\"+(endTime))\n              console.info(\"asn1Demo-- hex time consuming:\"+(endTime-startTime))\n            })\n\n          Text(this.deserializeJsonTextDer)\n            .margin({ top: \"20px\" })\n            .fontSize(16)\n\n          Text(this.deserializeJsonTextDerS)\n            .margin({ top: \"20px\" })\n            .fontSize(16)\n\n          Text(this.deserializeJsonTextDerD)\n            .margin({ top: \"20px\" })\n            .fontSize(16)\n\n          Button(this.btnDerText)\n            .fontSize(16)\n            .margin({ top: \"20px\" })\n            .onClick((event) => {\n              let startTime =new Date().getMilliseconds()\n              console.info(\"asn1Demo-- der start get DERSerializer :\"+startTime)\n              const serialize:ESObject = new DERSerializer();\n              const asn1Sequence :ESObject= new Universal.Sequence([\n                new Universal.Integer(123),\n                new Universal.PrintableString('Hello World'),\n              ]);\n\n              this.deserializeJsonTextDer = this.getResourceString($r('app.string.DER_data')) + JSON.stringify(asn1Sequence);\n              const bufferContainingDEREncodedASN1:ESObject = serialize(asn1Sequence);\n              this.deserializeJsonTextDerS = this.getResourceString($r('app.string.DER_serialized')) + JSON.stringify(bufferContainingDEREncodedASN1);\n\n              let endTime=new Date().getMilliseconds()\n              console.info(\"asn1Demo-- end get DERSerializer time:\"+(endTime))\n              console.info(\"asn1Demo-- DERSerializer time consuming:\"+(endTime-startTime))\n\n\n              let startTime1 =new Date().getMilliseconds()\n              console.info(\"asn1Demo-- der start get DERDeserializer :\"+startTime1)\n              const deserialize:ESObject = new DERDeserializer();\n              const des:ESObject = deserialize(bufferContainingDEREncodedASN1);\n              let endTime1=new Date().getMilliseconds()\n              console.info(\"asn1Demo-- der end get DERDeserializer time:\"+(endTime1))\n              console.info(\"asn1Demo-- der DERDeserializer time consuming:\"+(endTime1-startTime1))\n              this.deserializeJsonTextDerD = this.getResourceString($r('app.string.DER_deserialization'))  + JSON.stringify(des);\n            })\n\n          Button($r('app.string.Test_BER'))\n            .fontSize(16)\n            .margin({ top: \"20px\" })\n            .onClick((event) => {\n              router.pushUrl({\n                url: \"pages/berTest\"\n              })\n            })\n        }\n        .width('100%')\n      }\n      .scrollable(ScrollDirection.Vertical)\n      .width('100%')\n\n    }\n    .height('100%')\n  }"
        }
    ]
}