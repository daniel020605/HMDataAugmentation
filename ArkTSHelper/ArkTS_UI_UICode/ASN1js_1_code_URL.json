{
    "https://box.nju.edu.cn/seafhttp/files/22e9e004-6a36-4108-8e8f-0eb26036a070/Index.png": [
        {
            "function_name": "build",
            "content": "build() {\n\n    Column() {\n      Scroll(this.scroller) {\n        Row() {\n          Button(\"Boolean BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:Boolean click\");\n              const asn:ESObject = new asn1js.Boolean({\n                value: true,\n              });\n              this.berHandle(asn, \"Boolean\");\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"BmpString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:BmpString click\");\n              const testValue = \"test message текст\"\n              const asn:ESObject  = new asn1js.BmpString({\n                value: testValue,\n              });\n              this.berHandle(asn, \"BmpString\");\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"BitString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:BitString click\");\n              const asn:ESObject  = new asn1js.BitString({\n                value: [\n                  new asn1js.BitString({\n                    valueHex: new Uint8Array([0x01])\n                  }),\n                  new asn1js.BitString({\n                    valueHex: new Uint8Array([0x02])\n                  })\n                ]\n              });\n              this.berHandle(asn, \"BitString\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"Integer BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:Integer click\");\n              const asn:ESObject  = new asn1js.Integer({\n                value: 97196,\n                valueHex: new Uint8Array([0x01, 0x7b, 0xac]),\n              });\n              this.berHandle(asn, \"Integer\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"CharacterString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:CharacterString click\");\n              const testString = \"some string\";\n              const asn:ESObject  = new asn1js.CharacterString({\n                value: testString,\n              });\n              this.berHandle(asn, \"CharacterString\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"UniversalString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:UniversalString click\");\n              const testString = \"My test text\";\n              const asn:ESObject  = new asn1js.UniversalString({\n                value: testString,\n              });\n              this.berHandle(asn, \"UniversalString\");\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"Utf8String BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:Utf8String click\")\n              const testString = \"My test Utf8String\";\n              const asn:ESObject  = new asn1js.Utf8String({\n                value: testString,\n              });\n              this.berHandle(asn, \"Utf8String\");\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"DATE BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:DATE click\");\n              const testString = \"2000-01-02\";\n              const asn:ESObject  = new asn1js.DATE({\n                value: testString,\n              });\n              this.berHandle(asn, \"DATE\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"DateTime BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:DateTime click\");\n              const testString = \"2000-01-02 12:00\";\n              const asn:ESObject  = new asn1js.DateTime({\n                value: testString,\n              });\n              this.berHandle(asn, \"DateTime\");\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"Duration BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              console.log(\"sasa:Duration click\");\n              const testString = \"1000\";\n              const asn:ESObject  = new asn1js.Duration({\n                value: testString,\n              });\n              this.berHandle(asn, \"Duration\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"GeneralString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const testString = \"some text\";\n              const asn:ESObject  = new asn1js.GeneralString({\n                value: testString,\n              });\n              this.berHandle(asn, \"GeneralString\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"GraphicString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const testString = \"some text\";\n              const asn:ESObject  = new asn1js.GraphicString({\n                value: testString,\n              });\n              this.berHandle(asn, \"GraphicString\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n          Button(\"NumericString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const testString = \"1234567890\";\n              const asn:ESObject  = new asn1js.NumericString({\n                value: testString,\n              });\n              this.berHandle(asn, \"NumericString\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n          Button(\"ObjectIdentifier BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const testString = \"0.2.3.4.5\";\n              const asn:ESObject  = new asn1js.ObjectIdentifier({\n                value: testString,\n              });\n              this.berHandle(asn, \"ObjectIdentifier\");\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"OctetString BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const asn:ESObject  = new asn1js.OctetString({\n                value: [\n                  new asn1js.OctetString({\n                    valueHex: new Uint8Array([0x01])\n                  }),\n                  new asn1js.OctetString({\n                    valueHex: new Uint8Array([0x02])\n                  }),\n                ]\n              });\n              this.berHandle(asn, \"OctetString\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n\n          Button(\"Null BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const asn:ESObject  = new asn1js.Null({\n                name: \"block2\",\n              });\n              this.berHandle(asn, \"Null\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n          Button(\"Sequence BER\")\n            .fontSize(18)\n            .height(\"45vp\")\n            .onClick((event) => {\n              const asn:ESObject  = new asn1js.Sequence({\n                name: \"block1\",\n                value: [\n                  new asn1js.Null({\n                    name: \"block2\"\n                  }),\n                  new asn1js.Integer({\n                    name: \"block3\",\n                    optional: true\n                  }),\n                ]\n              });\n              this.berHandle(asn, \"Sequence\");\n\n            }).margin({ bottom: \"20vp\", left: \"20vp\" })\n\n        }\n        .alignItems(VerticalAlign.Center)\n        .justifyContent(FlexAlign.Center)\n        .height(200)\n\n      }.scrollable(ScrollDirection.Horizontal)\n      .height(120)\n      Scroll(this.contentScroller) {\n        Column(){\n          Text(this.strPrototypeText)\n            .fontSize(16).margin({ top: \"20vp\" })\n          Text(this.strEncodingText)\n            .fontSize(16).margin({ top: \"20vp\" })\n          Text(this.strDecodingText)\n            .fontSize(16).margin({ top: \"20vp\" })\n        }\n      }.scrollable(ScrollDirection.Vertical)\n      .width('100%')\n      .height(620)\n\n    }\n    .height('100%')\n  }"
        }
    ]
}