{
    "https://box.nju.edu.cn/seafhttp/files/9e2f03b6-5620-4675-bc41-4badc2dbb3c9/Index.png": [
        {
            "function_name": "build",
            "content": "build() {\n    Stack() {\n      if (this.isShow) {\n        XComponent({\n          id: 'componentId',\n          type: 'surface',\n          controller: this.mXComponentController\n        })\n          .onLoad(async () => {\n            Logger.info(TAG, 'onLoad is called');\n            this.surfaceId = this.mXComponentController.getXComponentSurfaceId();\n            GlobalContext.get().setObject('cameraDeviceIndex', this.defaultCameraDeviceIndex);\n            GlobalContext.get().setObject('xComponentSurfaceId', this.surfaceId);\n            let surfaceRect: SurfaceRect = {\n              surfaceWidth: Constants.X_COMPONENT_SURFACE_HEIGHT,\n              surfaceHeight: Constants.X_COMPONENT_SURFACE_WIDTH\n            };\n            this.mXComponentController.setXComponentSurfaceRect(surfaceRect);\n            Logger.info(TAG, `onLoad surfaceId: ${this.surfaceId}`);\n            await CameraService.initCamera(this.surfaceId, this.defaultCameraDeviceIndex);\n          })// The width and height of the surface are opposite to those of the Xcomponent.\n          .width(px2vp(Constants.X_COMPONENT_SURFACE_HEIGHT))\n          .height(px2vp(Constants.X_COMPONENT_SURFACE_WIDTH))\n      }\n\n      // 拍照闪黑及前后置切换时显示，用来遮挡XComponent组件\n      if (this.isShowBlack) {\n        Column()\n          .key('black')\n          .width(px2vp(Constants.X_COMPONENT_SURFACE_HEIGHT))\n          .height(px2vp(Constants.X_COMPONENT_SURFACE_WIDTH))\n          .backgroundColor(Color.Black)\n          .opacity(this.flashBlackOpacity)\n      }\n\n\n      if (this.isShowBlur) {\n        Column() {\n          Image(this.screenshotPixelMap)\n            .blur(this.shotImgBlur)\n            .opacity(this.shotImgOpacity)\n            .rotate(this.shotImgRotation)// ArkUI提供的旋转，用于组件沿指定坐标系进行旋转\n            .scale(this.shotImgScale)\n            .width(px2vp(Constants.X_COMPONENT_SURFACE_HEIGHT))\n            .height(px2vp(Constants.X_COMPONENT_SURFACE_WIDTH))\n            .syncLoad(true)\n        }\n        .width(px2vp(Constants.X_COMPONENT_SURFACE_HEIGHT))\n        .height(px2vp(Constants.X_COMPONENT_SURFACE_WIDTH))\n      }\n\n      // 曝光框和对焦框\n      FocusComponent({\n        focusPointBol: $focusPointBol,\n        focusPointVal: $focusPointVal\n      })\n\n      // 曝光对焦手指点击区域\n      FocusAreaComponent({\n        focusPointBol: $focusPointBol,\n        focusPointVal: $focusPointVal,\n        xComponentWidth: px2vp(Constants.X_COMPONENT_SURFACE_HEIGHT),\n        xComponentHeight: px2vp(Constants.X_COMPONENT_SURFACE_WIDTH)\n      })\n\n      SlideComponent()\n\n      // 拍照\n      ModeComponent()\n\n      Row({ space: Constants.ROW_SPACE_24 }) {\n        // 闪光灯\n        FlashingLightComponent({\n          flashMode: $flashMode\n        })\n      }\n      .margin({ left: Constants.CAPTURE_BUTTON_COLUMN_MARGIN })\n      .alignItems(VerticalAlign.Top)\n      .justifyContent(FlexAlign.Start)\n      .position({\n        x: Constants.FLASH_POSITION_X,\n        y: Constants.FLASH_POSITION_Y\n      })\n    }\n    .size({\n      width: Constants.FULL_PERCENT,\n      height: Constants.FULL_PERCENT\n    })\n    .backgroundColor(Color.Black)\n  }"
        }
    ]
}