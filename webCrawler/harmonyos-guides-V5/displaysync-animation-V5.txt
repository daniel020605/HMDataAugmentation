请求动画绘制帧率
在应用开发中，属性动画和显式动画能够使用可选参数ExpectedFrameRateRange，为不同的动画配置不同的期望绘制帧率。
请求属性动画的绘制帧率
定义文本组件的属性动画，请求绘制帧率为60，范例如下：
 Text()\n  .animation({\n     duration: 1200,\n     iterations: 10,\n     expectedFrameRateRange: { // 设置属性动画的帧率范围\n       expected: 60, // 设置动画的期望帧率为60hz\n       min: 0, // 设置帧率范围\n       max: 120, // 设置帧率范围\n     },\n  })
请求显式动画的绘制帧率
定义按钮组件的显式动画，请求绘制帧率为30，范例如下：
Button()\n .onClick(() => {\n   animateTo({\n     duration: 1200,\n     iterations: 10,\n     expectedFrameRateRange: { // 设置显式动画的帧率范围\n       expected: 30, // 设置动画的期望帧率为30hz\n       min: 0, // 设置帧率范围\n       max: 120, // 设置帧率范围\n     },\n   }, () => {\n   })\n })
完整示例
@Entry\n@Component\nstruct AnimationToAnimationDemo {\n  @State isAnimation: boolean = false;\n  @State translateX1: number = -100;\n  @State translateX2: number = -100;\n  @State translateX3: number = -100;\n\n  build() {\n    Column() {\n      Row() {\n        Text('30')\n          .fontWeight(FontWeight.Bold)\n          .fontSize(16)\n          .fontColor(Color.White)\n          .textAlign(TextAlign.Center)\n          .borderRadius(10)\n          .backgroundColor(0xF56C6C)\n          .width(80)\n          .height(80)\n          .translate({ x: this.translateX1 })\n      }\n      .height('20%')\n\n      Row() {\n        Text('40')\n          .fontWeight(FontWeight.Bold)\n          .fontSize(16)\n          .fontColor(Color.White)\n          .textAlign(TextAlign.Center)\n          .borderRadius(10)\n          .backgroundColor(0x2E8B57)\n          .width(80)\n          .height(80)\n          .translate({ x: this.translateX2 })\n      }\n      .height('20%')\n\n      Row() {\n        Text('60')\n          .fontWeight(FontWeight.Bold)\n          .fontSize(16)\n          .fontColor(Color.White)\n          .textAlign(TextAlign.Center)\n          .borderRadius(10)\n          .backgroundColor(0x008B8B)\n          .width(80)\n          .height(80)\n          .translate({ x: this.translateX3 })\n          .animation({\n            duration: 1200,\n            iterations: 10,\n            playMode: PlayMode.AlternateReverse,\n            expectedFrameRateRange: { // 设置属性动画的帧率范围\n              expected: 60, // 设置动画的期望帧率为60hz\n              min: 0, // 设置帧率范围\n              max: 120, // 设置帧率范围\n            },\n          })\n      }\n      .height('20%')\n\n      Row() {\n        Button('Start')\n          .id('PropertyAnimationStart')\n          .fontSize(14)\n          .fontWeight(500)\n          .margin({ bottom: 10, left: 5 })\n          .fontColor(Color.White)\n          .onClick(() => {\n            this.isAnimation = !this.isAnimation;\n            this.translateX3 = this.isAnimation ? 100 : -100;\n\n            animateTo({\n              duration: 1200,\n              iterations: 10,\n              playMode: PlayMode.AlternateReverse,\n              expectedFrameRateRange: { // 设置显式动画的帧率范围\n                expected: 30, // 设置动画的期望帧率为30hz\n                min: 0, // 设置帧率范围\n                max: 120, // 设置帧率范围\n              },\n            }, () => {\n              this.translateX1 = this.isAnimation ? 100 : -100;\n            })\n\n            animateTo({\n              duration: 1200,\n              iterations: 10,\n              playMode: PlayMode.AlternateReverse,\n              expectedFrameRateRange: { // 设置显式动画的帧率范围\n                expected: 40, // 设置动画的期望帧率为40hz\n                min: 0, // 设置帧率范围\n                max: 120, // 设置帧率范围\n              },\n            }, () => {\n              this.translateX2 = this.isAnimation ? 100 : -100;\n            })\n          })\n          .width('40%')\n          .height(40)\n          .shadow(ShadowStyle.OUTER_DEFAULT_LG)\n      }\n      .width('100%')\n      .justifyContent(FlexAlign.Center)\n      .shadow(ShadowStyle.OUTER_DEFAULT_SM)\n      .alignItems(VerticalAlign.Bottom)\n      .layoutWeight(1)\n    }\n    .width('100%')\n    .justifyContent(FlexAlign.Center)\n    .shadow(ShadowStyle.OUTER_DEFAULT_SM)\n    .layoutWeight(1)\n  }\n}
