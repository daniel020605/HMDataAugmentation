地理编码转化与逆地理编码转化开发指导
场景概述
使用坐标描述一个位置，非常准确，但是并不直观，面向用户表达并不友好。系统向开发者提供了以下两种转化能力。
 地理编码转化：将地理描述转化为具体坐标。 逆地理编码转化能力：将坐标转化为地理描述。 
其中地理编码包含多个属性来描述位置，包括国家、行政区划、街道、门牌号、地址描述等等，这样的信息更便于用户理解。
接口说明
进行坐标和地理编码信息的相互转化，所使用的接口说明如下，详细信息参见：Location Kit。
表3 地理编码转化与逆地理编码转化接口介绍
开发步骤
地理编码与逆地理编码功能需要访问后端服务，请确保设备联网，以进行信息获取。
 导入geoLocationManager模块，所有与地理编码转化&逆地理编码转化能力相关的功能API，都是通过该模块提供的。 import { geoLocationManager } from '@kit.LocationKit'; 查询地理编码与逆地理编码服务是否可用。  调用isGeoServiceAvailable查询地理编码与逆地理编码服务是否可用，如果服务可用再继续进行步骤3。如果服务不可用，说明该设备不具备地理编码与逆地理编码能力，请勿使用相关接口。 import { geoLocationManager } from '@kit.LocationKit';\ntry {\n    let isAvailable = geoLocationManager.isGeocoderAvailable();\n} catch (err) {\n    console.error(\"errCode:\" + JSON.stringify(err));\n}  获取转化结果。  调用getAddressesFromLocation，把坐标转化为地理位置信息。应用可以获得与此坐标匹配的GeoAddress（地理编码地址信息）列表，应用可以根据实际使用需求，读取相应的参数数据。 let reverseGeocodeRequest:geoLocationManager.ReverseGeoCodeRequest = {\"latitude\": 31.12, \"longitude\": 121.11, \"maxItems\": 1};\ntry {\n    geoLocationManager.getAddressesFromLocation(reverseGeocodeRequest, (err, data) => {\n        if (err) {\n            console.log('getAddressesFromLocation err: ' + JSON.stringify(err));\n        } else {\n            console.log('getAddressesFromLocation data: ' + JSON.stringify(data));\n        }\n    });\n} catch (err) {\n    console.error(\"errCode:\" + JSON.stringify(err));\n} 调用getAddressesFromLocationName把位置描述转化为坐标。 let geocodeRequest:geoLocationManager.GeoCodeRequest = {\"description\": \"上海市浦东新区xx路xx号\", \"maxItems\": 1};\ntry {\n    geoLocationManager.getAddressesFromLocationName(geocodeRequest, (err, data) => {\n        if (err) {\n            console.log('getAddressesFromLocationName err: ' + JSON.stringify(err));\n        } else {\n            console.log('getAddressesFromLocationName data: ' + JSON.stringify(data));\n        }\n    });\n} catch (err) {\n    console.error(\"errCode:\" + JSON.stringify(err));\n} 应用可以获得与位置描述相匹配的GeoAddress（地理编码地址信息）列表，其中包含对应的坐标数据。 如果需要查询的位置描述可能出现多地重名的请求，可以设置GeoCodeRequest，通过设置一个经纬度范围，以高效地获取期望的准确结果。  
