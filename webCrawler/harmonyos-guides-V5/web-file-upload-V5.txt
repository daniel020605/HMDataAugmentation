上传文件
Web组件支持前端页面选择文件上传功能，应用开发者可以使用onShowFileSelector()接口来处理前端页面文件上传的请求，如果应用开发者不做任何处理，Web会提供默认行为来处理前端页面文件上传的请求。
下面的示例中，当用户在前端页面点击文件上传按钮，应用侧在onShowFileSelector()接口中收到文件上传请求，在此接口中开发者将上传的本地文件路径设置给前端页面。
 应用侧代码。 // xxx.ets\nimport { webview } from '@kit.ArkWeb';\nimport { BusinessError } from '@kit.BasicServicesKit';\nimport { picker } from '@kit.CoreFileKit';\n\n@Entry\n@Component\nstruct WebComponent {\n  controller: webview.WebviewController = new webview.WebviewController();\n\n  build() {\n    Column() {\n      Web({ src: $rawfile('local.html'), controller: this.controller })\n        .onShowFileSelector((event) => {\n          console.log('MyFileUploader onShowFileSelector invoked');\n          const documentSelectOptions = new picker.DocumentSelectOptions();\n          let uri: string | null = null;\n          const documentViewPicker = new picker.DocumentViewPicker();\n          documentViewPicker.select(documentSelectOptions).then((documentSelectResult) => {\n            uri = documentSelectResult[0];\n            console.info('documentViewPicker.select to file succeed and uri is:' + uri);\n            if (event) {\n              event.result.handleFileList([uri]);\n            }\n          }).catch((err: BusinessError) => {\n            console.error(`Invoke documentViewPicker.select failed, code is ${err.code}, message is ${err.message}`);\n          })\n          return true;\n        })\n    }\n  }\n} local.html页面代码。 <!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Document</title>\n</head>\n\n<body>\n<!-- 点击上传文件按钮 -->\n<input type=\"file\" value=\"file\"></br>\n<meta name=\"viewport\" content=\"width=device-width\" />\n</body>\n</html> 
