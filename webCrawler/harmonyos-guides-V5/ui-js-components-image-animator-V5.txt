image-animator开发指导
image-animator组件为图片帧动画播放器。具体用法请参考image-animator。
创建image-animator组件
在pages/index目录下的hml文件中创建一个image-animator组件，css文件中编写组件样式，js文件中引用图片。
<!-- xxx.hml -->\n<div class=\"container\">\n  <image-animator class=\"animator\" images=\"{{frames}}\" duration=\"3s\"/>\n</div>
/* xxx.css */\n.container {\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #F1F3F5;\n}\n.animator {\n  width: 500px;\n  height: 500px;\n}
// index.js\nexport default {\n  data: {\n    frames: [\n      {\n        src: \"/common/landscape1.jpg\",\n      },\n      {\n        src: \"/common/landscape2.jpg\",\n      }\n    ],\n  },\n};
设置image-animator组件属性
添加iteration（播放次数）、reverse（播放顺序）、fixedsize（图片大小是否固定为组件大小）、duration（播放时长）和fillmode（执行结束后的状态）属性，控制图片的播放效果。
<!-- xxx.hml -->\n<div class=\"container\">\n  <image-animator class=\"animator\" fixedsize=\"false\" iteration='2' reverse=\"false\" ref=\"animator\" fillmode=\"none\" images=\"{{frames}}\"   duration=\"5s\" />\n</div>
/* xxx.css */\n.container {\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  background-color: #F1F3F5;\n}\n.animator {\n  width: 500px;\n  height: 500px;\n}
// index.js\nexport default {\n  data: {\n    frames: [\n      {\n        src: 'common/landscape1.jpg',\n        width: '250px',\n        height: '250px',\n        left: '150px',\n        top: '50px',\n      },\n      {\n        src: 'common/landscape2.jpg',\n        width: '300px',\n        height: '300px',\n        left: '150px',\n        top: '100px',\n      },\n      {\n        src: 'common/landscape1.jpg',\n        width: '350px',\n        height: '350px',\n        left: '150px',\n        top: '150px',\n      },\n      {\n        src: 'common/landscape2.jpg',\n        width: '400px',\n        height: '400px',\n        left: '150px',\n        top: '200px',\n      },\n      {\n        src: 'common/landscape3.jpg',\n        width: '450px',\n        height: '450px',\n        left: '150px',\n        top: '250px',\n      },\n      {\n        src: 'common/landscape4.jpg',\n        width: '500px',\n        height: '500px',\n        left: '150px',\n        top: '300px',\n      },\n    ],\n  },\n};
 如果在images属性中设置了单独的duration属性，在image-animator组件中设置的duration属性无效。 如果fixedsize属性值设置为true，图片的width 、height 、top 和left属性无效。 如果reverse属性值设置为false，表示从第1张图片播放到最后1张图片。 如果reverse属性值设置为true，表示从最后1张图片播放到第1张图片。 
绑定事件
向image-animator组件添加start、pause、stop和resume事件。当图片播放器开始播放时触发start事件，当图片播放器被点击时触发pause事件，长按图片播放器触发resume事件，图片播放器停止播放时触发stop事件。
<!-- xxx.hml -->\n<div class=\"doc-page\">\n  <image-animator class=\"img\" id=\"img\" images=\"{{imginfo}}\" iteration=\"1\" duration=\"10s\" onstart=\"popstart\" onpause=\"poppause\"   onstop=\"popstop\" onresume=\"popresume\" onlongpress=\"setresume\" onclick=\"setpause\">\n  </image-animator>\n</div>
/* xxx.css */\n.doc-page {\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n   background-color: #F1F3F5;\n}\n.img {\n  width: 600px;\n  height: 600px;\n  border: 3px solid orange;\n}
// index.js\nimport promptAction from '@ohos.promptAction';\nexport default {\n  data: {\n    imginfo: [\n      {\n        src: 'common/landscape1.jpg',\n      },{\n        src: 'common/landscape2.jpg',\n      },{\n        src: 'common/landscape3.jpg',\n      },{\n        src: 'common/landscape4.jpg',\n      }\n    ],\n  },\n  onInit() {\n  },\n  setpause(e) {\n    this.$element('img').pause()\n  },\n  setresume(e) {\n    this.$element('img').resume()\n  },\n  popstart(e) {\n    promptAction.showToast({\n      message: '开始'\n    })\n  },\n  poppause(e) {\n    promptAction.showToast({\n      message: '暂停'\n    })\n  },\n  popstop(e) {\n    promptAction.showToast({\n      message: '停止'\n    })\n  },\n  popresume(e) {\n    promptAction.showToast({\n      message: '恢复'\n    })\n  }\n}
场景示例
在本场景中，开发者可通过开始播放、停止播放等按钮切换图片的播放状态。
image-animator组件通过调用start、pause、stop和resume方法控制图片的开始、暂停、停止和重新播放，通过getState方法查询图片的播放状态。
<!-- xxx.hml -->\n<div class=\"doc-page\">\n  <image-animator class=\"img\" id=\"img\" images=\"{{imginfo}}\" iteration=\"2\" reverse=\"{{rev}}\" duration=\"10s\">\n  </image-animator>\n  <div style=\"width: 700px;height:450px;margin-top: 40px;flex-direction:column;justify-content:space-around;\">\n    <div class=\"container\">\n      <button type=\"capsule\" value=\"开始播放\" onclick=\"startimg\"></button>\n      <button type=\"capsule\" value=\"暂停播放\" onclick=\"pauseimg\"></button>\n    </div>\n    <div class=\"container\">\n      <button type=\"capsule\" value=\"停止播放\" onclick=\"stopimg\"></button>\n      <button type=\"capsule\" value=\"重新播放\" onclick=\"resumeimg\"></button>\n    </div>\n    <div class=\"container\">\n      <button type=\"capsule\" value=\"获取播放状态\" onclick=\"getimgstate\"></button>\n      <button type=\"capsule\" value=\"{{revVal}}\" onclick=\"revimg\"></button>\n    </div>\n  </div>\n</div>
/* xxx.css */\n.doc-page {\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #F1F3F5;\n}\n.img {\n  width: 600px;\n  height: 600px;\n  border: 3px solid orange;\n}\nbutton{\n  width: 260px\n}\n.container {\n  width: 100%;\n  height: 120px;\n  align-items: center;\n  justify-content: space-around;\n}
// index.js\nimport promptAction from '@ohos.promptAction';\nexport default {\n  data: {\n    rev:false,\n    imginfo: [\n      {\n        src: 'common/landscape1.jpg',\n      },{\n        src: 'common/landscape2.jpg',\n      },{\n        src: 'common/landscape3.jpg',\n      },{\n        src: 'common/landscape4.jpg',\n      }\n    ],\n    revVal: '反向播放'\n  },\n  onInit() {\n  },\n  startimg(e) {\n    this.$element('img').start()\n  },\n  pauseimg(e) {\n    this.$element('img').pause()\n  },\n  stopimg(e) {\n    this.$element('img').stop()\n  },\n  resumeimg(e) {\n    this.$element('img').resume()\n  },\n  getimgstate(e) {\n    promptAction.showToast({\n      message: '当前状态：' + this.$element('img').getState()\n    })\n  },\n  revimg(e) {\n    this.rev = !this.rev\n    if (this.rev) {\n      this.revVal = '正向播放'\n    } else {\n      this.revVal = '反向播放'\n    }\n  }\n}
