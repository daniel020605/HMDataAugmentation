WebSocket连接
场景介绍
使用WebSocket建立服务器与客户端的双向连接，需要先通过createWebSocket()方法创建WebSocket对象，然后通过connect()方法连接到服务器。当连接成功后，客户端会收到open事件的回调，之后客户端就可以通过send()方法与服务器进行通信。当服务器发信息给客户端时，客户端会收到message事件的回调。当客户端不要此连接时，可以通过调用close()方法主动断开连接，之后客户端会收到close事件的回调。
若在上述任一过程中发生错误，客户端会收到error事件的回调。
websocket支持心跳检测机制，在客户端和服务端建立WebSocket连接之后，每间隔一段时间会客户端会发送Ping帧给服务器，服务器收到后应立即回复Pong帧。
接口说明
WebSocket连接功能主要由webSocket模块提供。使用该功能需要申请ohos.permission.INTERNET权限。具体接口说明如下表。
开发步骤
 导入需要的webSocket模块。 创建一个WebSocket连接，返回一个WebSocket对象。 （可选）订阅WebSocket的打开、消息接收、关闭、Error事件。 根据URL地址，发起WebSocket连接。 使用完WebSocket连接之后，主动断开连接。 
import { webSocket } from '@kit.NetworkKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\n\nlet defaultIpAddress = \"ws://\";\nlet ws = webSocket.createWebSocket();\nws.on('open', (err: BusinessError, value: Object) => {\n  console.log(\"on open, status:\" + JSON.stringify(value));\n  // 当收到on('open')事件时，可以通过send()方法与服务器进行通信\n  ws.send(\"Hello, server!\", (err: BusinessError, value: boolean) => {\n    if (!err) {\n      console.log(\"Message send successfully\");\n    } else {\n      console.log(\"Failed to send the message. Err:\" + JSON.stringify(err));\n    }\n  });\n});\nws.on('message', (err: BusinessError, value: string | ArrayBuffer) => {\n  console.log(\"on message, message:\" + value);\n  // 当收到服务器的`bye`消息时（此消息字段仅为示意，具体字段需要与服务器协商），主动断开连接\n  if (value === 'bye') {\n    ws.close((err: BusinessError, value: boolean) => {\n      if (!err) {\n        console.log(\"Connection closed successfully\");\n      } else {\n        console.log(\"Failed to close the connection. Err: \" + JSON.stringify(err));\n      }\n    });\n  }\n});\nws.on('close', (err: BusinessError, value: webSocket.CloseResult) => {\n  console.log(\"on close, code is \" + value.code + \", reason is \" + value.reason);\n});\nws.on('error', (err: BusinessError) => {\n  console.log(\"on error, error:\" + JSON.stringify(err));\n});\nws.connect(defaultIpAddress, (err: BusinessError, value: boolean) => {\n  if (!err) {\n    console.log(\"Connected successfully\");\n  } else {\n    console.log(\"Connection failed. Err:\" + JSON.stringify(err));\n  }\n});
