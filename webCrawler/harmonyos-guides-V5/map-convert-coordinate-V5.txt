坐标转换
场景介绍
华为地图在中国大陆、中国香港和中国澳门使用GCJ02坐标系，若使用WGS84坐标系直接叠加在华为地图上，因坐标值不同，展示位置会有偏移。所以，在中国大陆、中国香港和中国澳门如果使用WGS84坐标调用Map Kit服务，需要先将其转换为GCJ02坐标系再访问。
接口说明
以下是坐标转换功能相关接口，主要由map命名空间下的convertCoordinateSync、rectifyCoordinate方法提供，更多接口及使用方法请参见接口参考。
接口名
描述
mapCommon.CoordinateType
坐标系类型。
convertCoordinateSync(fromType: mapCommon.CoordinateType, toType: mapCommon.CoordinateType, location: mapCommon.LatLng): mapCommon.LatLng
坐标转换，将WGS84坐标系转换为GCJ02坐标系。
rectifyCoordinate(context: common.Context, locations: Array<mapCommon.CoordinateLatLng>): Promise<Array<mapCommon.CoordinateLatLng>>
坐标纠偏。
mapCommon.LatLng
经纬度对象。
开发步骤
import { map, mapCommon } from '@kit.MapKit';
[h2]坐标转换
let wgs84Position: mapCommon.LatLng = {\n  latitude: 30,\n  longitude: 118\n};\n// 转换经纬度坐标\nlet gcj02Position: mapCommon.LatLng =\n  map.convertCoordinateSync(mapCommon.CoordinateType.WGS84, mapCommon.CoordinateType.GCJ02, wgs84Position);
[h2]坐标纠偏
rectifyCoordinate接口根据输入的坐标系和坐标，判断是否需要纠偏坐标，规则如下：
 输入的坐标系是GCJ02，当前路由地是中国大陆。检查传入的坐标是否在大陆/港澳地区，如果不在，返回WGS84坐标系和输入的原始坐标，否则返回GCJ02坐标系和输入的原始坐标。 输入的坐标系是GCJ02，当前路由地不是中国大陆。返回WGS84坐标系和输入的原始坐标。 输入的坐标系是WGS84，当前路由地是中国大陆。检查传入的坐标是否在大陆/港澳地区，如果在，返回GCJ02坐标系和转换后的坐标，否则返回WGS84坐标系和输入的原始坐标。 输入的坐标系是WGS84，当前路由地不是中国大陆。返回WGS84坐标系和输入的原始坐标。 
rectifyCoordinate接口仅为解决原始坐标与华为地图展示偏转的问题。
let locations: Array<mapCommon.CoordinateLatLng> = [\n  {\n    // 输入巴黎坐标和GCJ02坐标系，返回WGS84坐标系和输入的巴黎坐标\n    coordinateType: mapCommon.CoordinateType.GCJ02,\n    location: { latitude: 42.860000, longitude: 2.340000 }\n  },\n  {\n    // 输入香港坐标和GCJ02坐标系，返回GCJ02坐标系和输入的香港坐标\n    coordinateType: mapCommon.CoordinateType.GCJ02,\n    location: { latitude: 22.280556, longitude: 114.984000 }\n  },\n  {\n    // 输入香港坐标和WGS84坐标系，若当前地图站点使用GCJ02坐标系，返回GCJ02坐标系和转换后的香港坐标，\n    // 若当前地图站点使用WGS84坐标系，返回WGS84坐标系和原香港坐标\n    coordinateType: mapCommon.CoordinateType.WGS84,\n    location: { latitude: 22.280556, longitude: 114.984000 }\n  },\n  {\n    // 输入巴黎坐标和WGS84坐标系，返回WGS84坐标系和输入的巴黎坐标\n    coordinateType: mapCommon.CoordinateType.WGS84,\n    location: { latitude: 42.860000, longitude: 2.340000 }\n  }\n];\n// 包含await的外层方法需要添加async关键字\nlet arr: Array<mapCommon.CoordinateLatLng> = await map.rectifyCoordinate(getContext(), locations);
