button开发指导
button是按钮组件，其类型包括胶囊按钮、圆形按钮、文本按钮、弧形按钮、下载按钮。具体用法请参考button API。
创建button组件
在pages/index目录下的hml文件中创建一个button组件。
<!-- xxx.hml -->\n<div class=\"container\">       \n  <button  type=\"capsule\" value=\"Capsule button\"></button>\n</div>
/* xxx.css */\n.container {\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #F1F3F5;\n}
设置button类型
通过设置button的type属性来选择按钮类型，如定义button为圆形按钮、文本按钮等。
<!-- xxx.hml -->\n<div class=\"container\">    \n  <button class=\"circle\" type=\"circle\" >+</button>\n  <button class=\"text\" type=\"text\"> button</button>\n</div>
/* xxx.css */\n.container {  \n  width: 100%;\n  height: 100%;\n  background-color: #F1F3F5;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.circle {\n  font-size: 120px;\n  background-color: blue;\n  radius: 72px;\n}\n.text {\n  margin-top: 30px;\n  text-color: white;\n  font-size: 30px;\n  font-style: normal;\n  background-color: blue;\n  width: 50%;\n  height: 100px;\n}
 button组件使用的icon图标如果来自云端路径，需要添加网络访问权限 ohos.permission.INTERNET。 
如果需要添加ohos.permission.INTERNET权限，则在resources文件夹下的config.json文件里进行权限配置。
<!-- config.json -->\n\"module\": {\n  \"reqPermissions\": [{\n    \"name\": \"ohos.permission.INTERNET\"\n  }],\n}
显示下载进度
为button组件添加setProgress方法，来实时显示下载进度条的进度。
<!-- xxx.hml -->\n<div class=\"container\">\n  <button class=\"button download\" type=\"download\" id=\"download-btn\" onclick=\"setProgress\">{{downloadText}}</button>\n</div>
/* xxx.css */\n.container { \n  width: 100%;\n  height: 100%;\n  background-color: #F1F3F5;  \n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.download {    \n  width: 280px;\n  text-color: white;\n  background-color: #007dff;\n}
// xxx.js\nimport promptAction from '@ohos.promptAction';\nexport default {\n  data: {\n    percent: 0,\n    downloadText: \"Download\",\n    isPaused: true,\n    intervalId : null,\n  },\n  start(){\n    this.intervalId = setInterval(()=>{\n      if(this.percent <100){\n        this.percent += 1;\n        this.downloadText = this.percent+ \"%\";\n       } else{\n         promptAction.showToast({\n            message: \"Download succeeded.\"\n         })\n         this.paused()\n         this.downloadText = \"Download\";\n         this.percent = 0;\n         this.isPaused = true;\n       }\n    },100)\n  },\n  paused(){\n    clearInterval(this.intervalId);\n    this.intervalId = null;\n  },\n setProgress(e) {\n    if(this.isPaused){\n      promptAction.showToast({\n        message: \"Started Downloading\"\n      })\n      this.start();\n      this.isPaused = false;\n    }else{\n      promptAction.showToast({\n        message: \"Paused.\"\n      })\n      this.paused();\n      this.isPaused = true;\n    }\n  }\n}
setProgress方法只支持button的类型为download。
场景示例
在本场景中，开发者可根据输入的文本内容进行button类型切换。
<!-- xxx.hml -->\n<div class=\"container\">\n  <div class=\"input-item\">\n    <input class=\"input-text\" id=\"change\" type=\"{{mytype}}\"  placeholder=\"{{myholder}}\" \n      style=\"background-color:{{mystyle1}};\n      placeholder-color:{{mystyle2}};flex-grow:{{myflex}};\"name=\"{{myname}}\" value=\"{{myvalue}}\"></input>\n  </div>\n  <div class=\"input-item\">\n    <div class=\"doc-row\">\n      <input type=\"button\" class=\"select-button color-3\" value=\"text\" onclick=\"changetype3\"></input>\n      <input type=\"button\" class=\"select-button color-3\" value=\"data\" onclick=\"changetype4\"></input>\n    </div>\n  </div>\n</div>
/* xxx.css */\n.container {\n  flex-direction: column;\n  align-items: center;\n  background-color: #F1F3F5;\n}\n.input-item {\n  margin-bottom: 80px;\n  flex-direction: column;\n}\n.doc-row {\n  justify-content: center;\n  margin-left: 30px;\n  margin-right: 30px;\n  justify-content: space-around;\n}\n.input-text {\n  height: 80px;\n  line-height: 80px;\n  padding-left: 30px;\n  padding-right: 30px;\n  margin-left: 30px;\n  margin-right: 30px;\n  margin-top:100px;\n  border: 3px solid;\n  border-color: #999999;\n  font-size: 30px;\n  background-color: #ffffff;\n  font-weight: 400;\n}\n.select-button {\n  width: 35%;\n  text-align: center;\n  height: 70px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  margin-top: 30px;\n  font-size: 30px;\n  color: #ffffff;\n}\n.color-3 {\n  background-color: #0598db;\n}
// xxx.js\nexport default {\n  data: {\n    myflex: '',\n    myholder: 'Enter text.',\n    myname: '',\n    mystyle1: \"#ffffff\",\n    mystyle2: \"#ff0000\",\n    mytype: 'text',\n    myvalue: '',\n  },\n  onInit() {\n  },\n  changetype3() {\n    this.myflex = '';\n    this.myholder = 'Enter text.';\n    this.myname = '';\n    this.mystyle1 = \"#ffffff\";\n    this.mystyle2 = \"#FF0000\";\n    this.mytype = 'text';\n    this.myvalue = '';\n  },\n  changetype4() {\n    this.myflex = '';\n    this.myholder = 'Enter a date.';\n    this.myname = '';\n    this.mystyle1 = \"#ffffff\";\n    this.mystyle2 = \"#FF0000\";\n    this.mytype = 'date';\n    this.myvalue = '';\n  },\n}
