删除扫描范围内的文件
场景介绍
Enterprise Data Guard Kit为应用提供对公共路径文件删除的能力。
接口说明
详细接口说明可参考接口文档。
接口名
描述
deleteFile(path: string, callback: AsyncCallback<void>): void
使用Callback方式删除扫描范围内的文件。
deleteFile(path: string): Promise<void>
使用Promise方式删除扫描范围内的文件。
开发步骤
 导入模块。import { fileGuard } from '@kit.EnterpriseDataGuardKit'; 初始化FileGuard对象guard，调用接口deleteFile，删除扫描范围内的文件。        通过回调函数方式，删除扫描范围内的文件。  import { BusinessError } from '@kit.BasicServicesKit';\n\nfunction deleteFileCallback() {\n  let guard: fileGuard.FileGuard = new fileGuard.FileGuard();\n  let path: string = '/data/service/el2/100/hmdfs/account/files/Docs/Documents/test.txt';\n  guard.deleteFile(path, (err: BusinessError) => {\n    if (err) {\n      console.error(`Failed to delete file. Code: ${err.code}, message: ${err.message}.`);\n    } else {\n      console.info(`Succeeded in deleting file.`);\n    }\n  });\n}  通过Promise方式，删除扫描范围内的文件。  import { BusinessError } from '@kit.BasicServicesKit';\n\nfunction deleteFilePromise() {\n  let guard: fileGuard.FileGuard = new fileGuard.FileGuard();\n  let path: string = '/data/service/el2/100/hmdfs/account/files/Docs/Documents/test.txt';\n  guard.deleteFile(path).then(() => {\n    console.info(`Succeeded in deleting file.`);\n  }).catch((err: BusinessError) => {\n    console.error(`Failed to delete file. Code: ${err.code}, message: ${err.message}.`);\n  });\n} 调用函数，查看打印信息。 
