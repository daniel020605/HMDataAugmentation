代码混淆
DevEco Studio原先默认开启代码混淆功能，会对API 10及以上的Stage工程，且编译模式是release时，自动进行简单的代码混淆，仅对参数名和局部变量名进行混淆。
从DevEco Studio NEXT Developer Beta3（5.0.3.600）版本开始，新建工程及模块默认关闭代码混淆功能，如果在模块级build-profile.json5配置文件中开启代码混淆，则混淆规则配置文件obfuscation-rules.txt中默认开启推荐的混淆规则，包含-enable-property-obfuscation、-enable-toplevel-obfuscation、-enable-filename-obfuscation、-enable-export-obfuscation四项混淆项，开发者可进一步在obfuscation-rules.txt文件中选择开启的混淆项，关于混淆项的介绍请查看配置混淆规则。
使用约束
仅支持Stage工程。在编译模式为release模式时生效。模块及模块依赖的HAR和HSP均未关闭混淆。
字段说明
可在模块级build-profile.json5文件中进行代码混淆相关配置。obfuscation字段说明如下：
配置项
类型
是否必填
说明
ruleOptions
object
否
混淆规则配置。
enable
boolean
是
是否启用代码混淆：
true：启用。false（默认值）：不启用。
从DevEco Studio NEXT Developer Beta3（5.0.3.600）版本开始，默认值由true改为false。
files
array
否
配置混淆规则文件的相对路径，默认使用obfuscation-rules.txt文件。文件中配置的混淆规则仅在本模块编译时生效（包含依赖代码）。
规则文件中支持配置所有混淆规则。支持配置多个文件，文件名称支持自定义，当存在多个混淆规则文件时，规则合并可参考混淆规则合并策略，合并后的规则作用范围可参考开启代码混淆。
consumerFiles
string/array
否
仅HAR模块可配置，配置传递给集成方的混淆规则文件的相对路径，支持配置多个文件，文件名称支持自定义。
为保证HAR模块可被正确集成使用，若有不希望被集成方混淆的内容，建议在规则文件中配置对应的保留选项，例如HAR模块中导出的变量或函数。
规则文件中配置的混淆选项会与集成方的混淆规则进行合并，进而影响集成方的编译混淆，因此，建议仅配置保留选项。
使能混淆
为保护代码资产，建议开启混淆，您可以在模块级的build-profile.json5配置文件中开启代码混淆功能：
\"arkOptions\": {\n  \"obfuscation\": {\n    \"ruleOptions\": {\n      \"enable\": true  // 配置true，即可开启代码混淆功能\n    }\n  }\n}
从DevEco Studio NEXT Developer Beta3（5.0.3.600）版本开始，开启混淆后，混淆规则配置文件obfuscation-rules.txt中默认开启推荐的混淆规则，包含-enable-property-obfuscation、-enable-toplevel-obfuscation、-enable-filename-obfuscation、-enable-export-obfuscation四项混淆项。
使用release模式编译发布时，建议开启混淆，需要正确配置混淆规则，否则可能会有运行时问题。
使能高阶混淆
在开启混淆后，若您需要更高阶的混淆能力，可以通过以下操作配置高阶混淆规则。
[h2]配置所有混淆规则
打开模块级build-profile.json5文件，在\"files\"字段下配置混淆规则文件的相对路径，支持配置多个文件，默认为./obfuscation-rules.txt。{\n  \"apiType\": \"stageMode\",\n  ...\n  \"buildOptionSet\": [\n    {\n      \"name\": \"release\",\n      \"arkOptions\": {\n        \"obfuscation\": {\n          \"ruleOptions\": {\n            \"enable\": true,\n            \"files\": [\n              \"./obfuscation-rules.txt\"  // 混淆规则文件\n            ]\n          }\n        }\n      }\n    },\n  ],\n  ...\n} 打开模块目录内的obfuscation-rules.txt文件配置混淆规则，具体的配置规则请参见配置混淆规则，对于不需要混淆的内容，请配置保留选项。当存在多个混淆规则文件时，规则合并可参考混淆规则合并策略，合并后的规则作用范围可参考开启代码混淆。  
[h2]HAR配置保留选项
为保证HAR模块可被正确集成使用，若有不希望被集成方混淆的内容，建议在规则文件中配置对应的保留选项，例如HAR模块中导出的变量或函数。
打开模块级build-profile.json5文件，在\"consumerFiles\"字段下配置传递给集成方的混淆规则文件的相对路径，支持配置多个文件，默认为./consumer-rules.txt，对应编译后HAR包中的obfuscation.txt文件。{\n  \"apiType\": \"stageMode\",\n  ...\n  \"buildOptionSet\": [\n    {\n      \"name\": \"release\",\n      \"arkOptions\": {\n        \"obfuscation\": {\n          \"ruleOptions\": {\n            \"enable\": true,\n            \"files\": [\n              \"./obfuscation-rules.txt\"   \n            ]\n          },\n          \"consumerFiles\": [              // 该模块被依赖时的混淆规则\n            \"./consumer-rules.txt\"   \n          ]\n        }\n      }\n    },\n  ],\n  ...\n} 打开模块目录内的consumer-rules.txt文件配置保留选项。当存在多个混淆规则文件时，规则合并可参考混淆合并策略，合并后的规则作用范围可参考开启代码混淆。  
