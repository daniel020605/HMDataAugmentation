@performance/hp-arkui-use-taskpool-for-web-request
建议网络资源的请求和返回使用taskpool线程池异步处理。
应用内点击完成时延场景下，建议优先修改。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@performance/hp-arkui-use-taskpool-for-web-request\": \"warn\",\n  }\n}
选项
该规则无需配置额外选项。
正例
import { http } from '@kit.NetworkKit';\nimport { BusinessError } from '@ohos.base';\nimport taskpool from '@ohos.taskpool';\n\n@Concurrent\nfunction processRespTask(err: BusinessError, data: http.HttpResponse) {\n  if (!err) {\n    console.info('Result:' + data.result);\n    console.info('code:' + data.responseCode);\n    console.info('type:' + JSON.stringify(data.resultType));\n    console.info('header:' + JSON.stringify(data.header));\n    console.info('cookies:' + data.cookies);\n  } else {\n    console.info('error:' + JSON.stringify(err));\n  }\n}\n\nlet httpRequest = http.createHttp();\nhttpRequest.request(\"EXAMPLE_URL\", async (err: Error, data: http.HttpResponse) => {\n  let task = new taskpool.Task(processRespTask, data);\n  await taskpool.execute(task);\n});
反例
import { http } from '@kit.NetworkKit';\n\nlet httpRequest = http.createHttp();\nhttpRequest.request(\"EXAMPLE_URL\", (err: Error, data: http.HttpResponse) => {\n  if (!err) {\n    console.info('Result:' + data.result);\n    console.info('code:' + data.responseCode);\n    console.info('type:' + JSON.stringify(data.resultType));\n    console.info('header:' + JSON.stringify(data.header));\n    console.info('cookies:' + data.cookies); \n  } else {\n    console.info('error:' + JSON.stringify(err));\n  }\n});
规则集
plugin:@performance/recommended
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
