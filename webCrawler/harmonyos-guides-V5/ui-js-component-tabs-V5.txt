tabs开发指导
tabs是一种常见的界面导航结构。通过页签容器，用户可以快捷地访问应用的不同模块。具体用法请参考tabs API。
创建tabs
在pages/index目录下的hml文件中创建一个tabs组件。
<!-- xxx.hml -->\n<div class=\"container\">\n    <tabs>\n        <tab-bar>\n            <text>item1</text>\n            <text>item2</text>\n        </tab-bar>\n        <tab-content class=\"tabContent\">\n            <div class=\"text\">\n                <text>content1</text>\n            </div>\n            <div class=\"text\">\n                <text>content2</text>\n            </div>\n        </tab-content>\n    </tabs>\n</div>
/* xxx.css */\n.container {\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #F1F3F5;\n}\n.tabContent{\n  width: 100%;\n  height: 100%;\n}\n.text{\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n}
设置样式
设置tabs背景色及边框和tab-content布局。
<!-- xxx.hml -->\n<div class=\"container\">\n  <tabs class=\"tabs\">\n    <tab-bar class=\"tabBar\">\n      <text class=\"tabBarItem\">item1</text>\n      <text class=\"tabBarItem\">item2</text>\n    </tab-bar>\n    <tab-content class=\"tabContent\">\n      <div class=\"tabContent\">\n        <text>content1</text>\n      </div>\n      <div class=\"tabContent\" >\n        <text>content2</text>\n      </div>\n    </tab-content>\n  </tabs>\n</div>
/* xxx.css */\n.container {\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n background-color:#F1F3F5;\n}\n.tabs{\n  margin-top: 20px;\n border: 1px solid #2262ef;\n  width: 99%;\n  padding: 10px;\n}\n.tabBar{\n  width: 100%;\n  border: 1px solid #78abec;\n}\n.tabContent{\n  width: 100%;\n  margin-top: 10px;\n  height: 300px;\n  color: blue;   \n  justify-content: center;  \n  align-items: center;\n}
显示页签索引
开发者可以为tabs添加change事件，实现页签切换后显示当前页签索引的功能。
<!-- xxx.hml -->\n<div class=\"container\" style=\"background-color:#F1F3F5;\">\n  <tabs class=\"tabs\" onchange=\"tabChange\">\n    <tab-bar class=\"tabBar\">\n      <text class=\"tabBarItem\">item1</text>\n      <text class=\"tabBarItem\">item2</text>\n    </tab-bar>\n    <tab-content class=\"tabContent\">\n      <div>\n        <image src=\"common/images/bg-tv.jpg\" style=\"object-fit: contain;\"> </image>\n      </div>\n      <div>\n        <image src=\"common/images/img1.jpg\" style=\"object-fit: contain;\"> </image>\n      </div>\n    </tab-content>\n  </tabs>\n</div>
// xxx.js\nimport promptAction from '@ohos.promptAction';\nexport default {\n  tabChange(e){\n    promptAction.showToast({\n      message: \"Tab index: \" + e.index\n    })\n  }\n}
tabs子组件仅支持一个<tab-bar>和一个<tab-content>。
场景示例
在本场景中，开发者可以点击标签切换内容，选中后标签文字颜色变红，并显示下划线。
用tabs、tab-bar和tab-content实现点击切换功能，再定义数组，设置属性。使用change事件改变数组内的属性值实现变色及下划线的显示。
<!-- xxx.hml -->\n<div class=\"container\">\n  <tabs onchange=\"changeTabactive\">\n    <tab-content>\n      <div class=\"item-container\" for=\"datas.list\">\n        <div if=\"{{$item.title=='List1'?true:false}}\">\n          <image src=\"common/images/bg-tv.jpg\" style=\"object-fit: contain;\"> </image>\n        </div>\n        <div if=\"{{$item.title=='List2'?true:false}}\">\n          <image src=\"common/images/img1.jpg\" style=\"object-fit: none;\"> </image>\n        </div>\n        <div if=\"{{$item.title=='List3'?true:false}}\">\n          <image src=\"common/images/img2.jpg\" style=\"object-fit: contain;\"> </image>\n        </div>\n      </div>\n    </tab-content>\n    <tab-bar class=\"tab_bar mytabs\" mode=\"scrollable\">\n      <div class=\"tab_item\" for=\"datas.list\">\n        <text style=\"color: {{$item.color}};\">{{$item.title}}</text>\n        <div class=\"underline-show\" if=\"{{$item.show}}\"></div>\n        <div class=\"underline-hide\" if=\"{{!$item.show}}\"></div>\n      </div>\n    </tab-bar>\n  </tabs>\n</div>
/* xxx.css */\n.container{\nwidth: 100%;\nheight: 100%;\nbackground-color:#F1F3F5;\n}\n.tab_bar {\n  width: 100%;\n  height: 150px;\n}\n.tab_item {\n  height: 30%;\n  flex-direction: column;\n  align-items: center;\n}\n.tab_item text {\n  font-size: 32px;\n}\n.item-container {\n  justify-content: center;\n  flex-direction: column;\n}\n.underline-show {\n  height: 2px;\n  width: 160px;\n  background-color: #FF4500;\n  margin-top: 7.5px;\n}\n.underline-hide {\n  height: 2px;\n  margin-top: 7.5px;\n  width: 160px;\n}
// xxx.js\nimport promptAction from '@ohos.promptAction';\nexport default {\n  data() {\n    return {\n      datas: {\n        color_normal: '#878787',\n        color_active: '#ff4500',\n        show: true,\n        list: [{\n          i: 0,\n          color: '#ff4500',\n          show: true,\n          title: 'List1'\n        }, {\n          i: 1,\n          color: '#878787',\n          show: false,\n          title: 'List2'\n        }, {\n           i: 2,\n           color: '#878787',\n           show: false,\n           title: 'List3'\n        }]\n      }\n    }\n  },\n  changeTabactive (e) {\n    for (let i = 0; i < this.datas.list.length; i++) {\n      let element = this.datas.list[i];\n      element.show = false;\n      element.color = this.datas.color_normal;\n      if (i === e.index) {\n        element.show = true;\n        element.color = this.datas.color_active;\n      }\n    }\n  }\n}
