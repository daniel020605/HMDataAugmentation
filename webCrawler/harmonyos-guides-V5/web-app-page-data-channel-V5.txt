建立应用侧与前端页面数据通道
前端页面和应用侧之间可以用createWebMessagePorts()接口创建消息端口来实现两端的通信。
在下面的示例中，应用侧页面中通过createWebMessagePorts方法创建消息端口，再把其中一个端口通过postMessage()接口发送到前端页面，便可以在前端页面和应用侧之间互相发送消息。
 应用侧代码。 // xxx.ets\nimport { webview } from '@kit.ArkWeb';\nimport { BusinessError } from '@kit.BasicServicesKit';\n\n@Entry\n@Component\nstruct WebComponent {\n  controller: webview.WebviewController = new webview.WebviewController();\n  ports: webview.WebMessagePort[] = [];\n  @State sendFromEts: string = 'Send this message from ets to HTML';\n  @State receivedFromHtml: string = 'Display received message send from HTML';\n\n  build() {\n    Column() {\n      // 展示接收到的来自HTML的内容\n      Text(this.receivedFromHtml)\n      // 输入框的内容发送到HTML\n      TextInput({ placeholder: 'Send this message from ets to HTML' })\n        .onChange((value: string) => {\n          this.sendFromEts = value;\n        })\n\n      // 该内容可以放在onPageEnd生命周期中调用。\n      Button('postMessage')\n        .onClick(() => {\n          try {\n            // 1、创建两个消息端口。\n            this.ports = this.controller.createWebMessagePorts();\n            // 2、在应用侧的消息端口(如端口1)上注册回调事件。\n            this.ports[1].onMessageEvent((result: webview.WebMessage) => {\n              let msg = 'Got msg from HTML:';\n              if (typeof (result) === 'string') {\n                console.info(`received string message from html5, string is: ${result}`);\n                msg = msg + result;\n              } else if (typeof (result) === 'object') {\n                if (result instanceof ArrayBuffer) {\n                  console.info(`received arraybuffer from html5, length is: ${result.byteLength}`);\n                  msg = msg + 'length is ' + result.byteLength;\n                } else {\n                  console.info('not support');\n                }\n              } else {\n                console.info('not support');\n              }\n              this.receivedFromHtml = msg;\n            })\n            // 3、将另一个消息端口(如端口0)发送到HTML侧，由HTML侧保存并使用。\n            this.controller.postMessage('__init_port__', [this.ports[0]], '*');\n          } catch (error) {\n            console.error(`ErrorCode: ${(error as BusinessError).code},  Message: ${(error as BusinessError).message}`);\n          }\n        })\n\n      // 4、使用应用侧的端口给另一个已经发送到html的端口发送消息。\n      Button('SendDataToHTML')\n        .onClick(() => {\n          try {\n            if (this.ports && this.ports[1]) {\n              this.ports[1].postMessageEvent(this.sendFromEts);\n            } else {\n              console.error(`ports is null, Please initialize first`);\n            }\n          } catch (error) {\n            console.error(`ErrorCode: ${(error as BusinessError).code},  Message: ${(error as BusinessError).message}`);\n          }\n        })\n      Web({ src: $rawfile('index.html'), controller: this.controller })\n    }\n  }\n} 前端页面代码。 <!--index.html-->\n<!DOCTYPE html>\n<html>\n<head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>WebView Message Port Demo</title>\n</head>\n<body>\n    <h1>WebView Message Port Demo</h1>\n    <div>\n        <input type=\"button\" value=\"SendToEts\" onclick=\"PostMsgToEts(msgFromJS.value);\"/><br/>\n        <input id=\"msgFromJS\" type=\"text\" value=\"send this message from HTML to ets\"/><br/>\n    </div>\n    <p class=\"output\">display received message send from ets</p>\n</body>\n<script>\nvar h5Port;\nvar output = document.querySelector('.output');\nwindow.addEventListener('message', function (event) {\n    if (event.data === '__init_port__') {\n        if (event.ports[0] !== null) {\n            h5Port = event.ports[0]; // 1. 保存从应用侧发送过来的端口。\n            h5Port.onmessage = function (event) {\n              // 2. 接收ets侧发送过来的消息。\n              var msg = 'Got message from ets:';\n              var result = event.data;\n              if (typeof(result) === 'string') {\n                console.info(`received string message from html5, string is: ${result}`);\n                msg = msg + result;\n              } else if (typeof(result) === 'object') {\n                if (result instanceof ArrayBuffer) {\n                  console.info(`received arraybuffer from html5, length is: ${result.byteLength}`);\n                  msg = msg + 'length is ' + result.byteLength;\n                } else {\n                  console.info('not support');\n                }\n              } else {\n                console.info('not support');\n              }\n              output.innerHTML = msg;\n            }\n        }\n    }\n})\n\n// 3. 使用h5Port向应用侧发送消息。\nfunction PostMsgToEts(data) {\n    if (h5Port) {\n      h5Port.postMessage(data);\n    } else {\n      console.error('h5Port is null, Please initialize first');\n    }\n}\n</script>\n</html> 
