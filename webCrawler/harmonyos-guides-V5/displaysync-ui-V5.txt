请求UI绘制帧率
如果开发者需要以独立的帧率绘制更新操作UI界面时，可以通过DisplaySync来实现。应用中绘制内容的帧率可以使用DisplaySync实例来控制，具体请查阅@ohos.graphics.displaySync(可变帧率)。
开发步骤
此处以不同帧率改变文件组件字体大小为例，来模拟不同UI绘制帧率的效果。
 导入模块。 import { displaySync } from '@kit.ArkGraphics2D'; 定义和构建DisplaySync对象。 @Entry\n@Component\nstruct Index {\n  // 定义两个DisplaySync变量，未初始化\n  private backDisplaySyncSlow: displaySync.DisplaySync | undefined = undefined;\n  private backDisplaySyncFast: displaySync.DisplaySync | undefined = undefined;\n} 定义两个文本组件。 @State drawFirstSize: number = 25;\n@State drawSecondSize: number = 25;\n@Builder doSomeRenderFirst() {\n Text('30')\n   .fontSize(this.drawFirstSize)\n}\n\n@Builder doSomeRenderSecond() {\n Text('60')\n   .fontSize(this.drawSecondSize)\n} 通过DisplaySync实例设置帧率和注册订阅函数。     订阅函数运行于UI主线程，故涉及UI线程的耗时操作不应运行于订阅函数中，以免影响性能。   CreateDisplaySyncSlow() {\n    let range : ExpectedFrameRateRange = { // 创建和配置帧率参数\n      expected: 30, // 设置期望绘制帧率为30hz\n      min: 0, // 配置帧率范围\n      max: 120 // 配置帧率范围\n    };\n\n    let draw30 = (intervalInfo: displaySync.IntervalInfo) => { // 订阅回调函数，字体大小在25到150之间变化\n      if (this.isBigger_30) {\n        this.drawFirstSize += 1;\n        if (this.drawFirstSize > 150) {\n          this.isBigger_30 = false;\n        }\n      } else {\n        this.drawFirstSize -= 1;\n        if (this.drawFirstSize < 25) {\n          this.isBigger_30 = true;\n        }\n      }\n    };\n\n    this.backDisplaySyncSlow = displaySync.create(); // 创建DisplaySync实例\n    this.backDisplaySyncSlow.setExpectedFrameRateRange(range); // 设置帧率\n    this.backDisplaySyncSlow.on(\"frame\", draw30); // 订阅frame事件和注册订阅函数\n} 开始每帧回调。 Button('Start')\n  .id('CustomDrawStart')\n  .fontSize(14)\n  .fontWeight(500)\n  .margin({ bottom: 10, left: 5 })\n  .fontColor(Color.White)\n  .onClick((): void => {\n      if (this.backDisplaySyncSlow == undefined) {\n        this.CreateDisplaySyncSlow();\n      }\n      if (this.backDisplaySyncFast == undefined) {\n        this.CreateDisplaySyncFast();\n      }\n      if (this.backDisplaySyncSlow) {\n        this.backDisplaySyncSlow.start();\n      }\n      if (this.backDisplaySyncFast) {\n        this.backDisplaySyncFast.start();\n      }\n    })\n    .width('20%')\n    .height(40)\n    .shadow(ShadowStyle.OUTER_DEFAULT_LG)     创建的DisplaySync实例在start使能后需要aboutToDisappear函数中进行stop操作并置空，避免内存泄漏问题。   aboutToDisappear() {\n  if (this.backDisplaySyncSlow) {\n    this.backDisplaySyncSlow.stop();\n    this.backDisplaySyncSlow = undefined;\n  }\n  if (this.backDisplaySyncFast) {\n    this.backDisplaySyncFast.stop();\n    this.backDisplaySyncFast = undefined;\n  }\n} 结束每帧回调。 Button('Stop')\n  .id('CustomDrawStop')\n  .fontSize(14)\n  .fontWeight(500)\n  .margin({ bottom: 10, left: 5 })\n  .fontColor(Color.White)\n  .onClick((): void => {\n    if (this.backDisplaySyncSlow) {\n        this.backDisplaySyncSlow.stop();\n    }\n    if (this.backDisplaySyncFast) {\n        this.backDisplaySyncFast.stop();\n    }\n  })\n  .width('20%')\n  .height(40)\n  .shadow(ShadowStyle.OUTER_DEFAULT_LG) 
完整示例
import { displaySync } from '@kit.ArkGraphics2D';\n\n@Entry\n@Component\nstruct Index {\n  @State drawFirstSize: number = 25;\n  @State drawSecondSize: number = 25;\n  private backDisplaySyncSlow: displaySync.DisplaySync | undefined = undefined;\n  private backDisplaySyncFast: displaySync.DisplaySync | undefined = undefined;\n  private isBigger_30:boolean = true;\n  private isBigger_60:boolean = true;\n\n  @Builder doSomeRenderFirst() {\n    Text('30')\n      .fontSize(this.drawFirstSize)\n  }\n\n  @Builder doSomeRenderSecond() {\n    Text('60')\n      .fontSize(this.drawSecondSize)\n  }\n\n  CreateDisplaySyncSlow() {\n    // 定义期望绘制帧率\n    let range : ExpectedFrameRateRange = {\n      expected: 30,\n      min: 0,\n      max: 120\n    };\n\n    let draw30 = (intervalInfo: displaySync.IntervalInfo) => {\n      if (this.isBigger_30) {\n        this.drawFirstSize += 1;\n        if (this.drawFirstSize > 150) {\n          this.isBigger_30 = false;\n        }\n      } else {\n        this.drawFirstSize -= 1;\n        if (this.drawFirstSize < 25) {\n          this.isBigger_30 = true;\n        }\n      }\n    };\n\n    this.backDisplaySyncSlow = displaySync.create(); // 创建DisplaySync实例\n    this.backDisplaySyncSlow.setExpectedFrameRateRange(range); // 设置帧率\n    this.backDisplaySyncSlow.on(\"frame\", draw30); // 订阅frame事件和注册订阅函数\n  }\n\n  CreateDisplaySyncFast() {\n    // 定义期望绘制帧率\n    let range : ExpectedFrameRateRange = {\n      expected: 60,\n      min: 0,\n      max: 120\n    };\n\n    let draw60 = (intervalInfo: displaySync.IntervalInfo) => {\n      if (this.isBigger_60) {\n        this.drawSecondSize += 1;\n        if (this.drawSecondSize > 150) {\n          this.isBigger_60 = false;\n        }\n      } else {\n        this.drawSecondSize -= 1;\n        if (this.drawSecondSize < 25) {\n          this.isBigger_60 = true;\n        }\n      }\n\n    };\n\n    this.backDisplaySyncFast= displaySync.create(); // 创建DisplaySync实例\n    this.backDisplaySyncFast.setExpectedFrameRateRange(range); // 设置帧率\n    this.backDisplaySyncFast.on(\"frame\", draw60); // 订阅frame事件和注册订阅函数\n  }\n\n  aboutToDisappear() {\n    if (this.backDisplaySyncSlow) {\n      this.backDisplaySyncSlow.stop(); // DisplaySync失能关闭\n      this.backDisplaySyncSlow = undefined; // 实例置空\n    }\n    if (this.backDisplaySyncFast) {\n      this.backDisplaySyncFast.stop(); // DisplaySync失能关闭\n      this.backDisplaySyncFast = undefined; // 实例置空\n    }\n  }\n\n  build() {\n    Column() {\n      Row() {\n        this.doSomeRenderFirst();\n      }\n      .height('40%')\n\n      Row() {\n        this.doSomeRenderSecond();\n      }\n      .height('40%')\n\n      Row() {\n        Button('Start')\n          .id('CustomDrawStart')\n          .fontSize(14)\n          .fontWeight(500)\n          .margin({ bottom: 10, left: 5 })\n          .fontColor(Color.White)\n          .onClick((): void => {\n            if (this.backDisplaySyncSlow == undefined) {\n              this.CreateDisplaySyncSlow();\n            }\n            if (this.backDisplaySyncFast == undefined) {\n              this.CreateDisplaySyncFast();\n            }\n            if (this.backDisplaySyncSlow) {\n              this.backDisplaySyncSlow.start(); // DisplaySync使能开启\n            }\n            if (this.backDisplaySyncFast) {\n              this.backDisplaySyncFast.start(); // DisplaySync使能开启\n            }\n          })\n          .width('20%')\n          .height(40)\n          .shadow(ShadowStyle.OUTER_DEFAULT_LG)\n\n        Button('Stop')\n          .id('CustomDrawStop')\n          .fontSize(14)\n          .fontWeight(500)\n          .margin({ bottom: 10, left: 5 })\n          .fontColor(Color.White)\n          .onClick((): void => {\n            if (this.backDisplaySyncSlow) {\n              this.backDisplaySyncSlow.stop(); // DisplaySync失能关闭\n            }\n            if (this.backDisplaySyncFast) {\n              this.backDisplaySyncFast.stop(); // DisplaySync失能关闭\n            }\n          })\n          .width('20%')\n          .height(40)\n          .shadow(ShadowStyle.OUTER_DEFAULT_LG)\n      }\n      .width('100%')\n      .justifyContent(FlexAlign.Center)\n      .shadow(ShadowStyle.OUTER_DEFAULT_SM)\n      .alignItems(VerticalAlign.Bottom)\n      .layoutWeight(1)\n    }\n  }\n}
