使用HiTraceMeter跟踪性能（C/C++）
HiTrace为开发者提供业务流程调用链跟踪的维测接口。该接口所提供的功能，可以帮助开发者迅速获取指定业务流程调用链的运行日志、定位跨设备/跨进程/跨线程的故障问题。
接口说明
性能打点跟踪接口由HiTraceMeter模块提供，详细API请参考性能打点跟踪API参考。
参数解析
开发示例
 在CMakeLists.txt中新增libhitrace_ndk.z.so链接。 target_link_libraries(entry PUBLIC libhitrace_ndk.z.so) 在源文件中引用hitrace头文件。 #include \"hitrace/trace.h\" 在需要打点的地方进行性能打点，以异步打点为例（示例代码为默认的hello.cpp的一部分，使用时只需要按照示例的使用方法将接口-参看接口说明，放在需要的地方即可）。 #include \"napi/native_api.h\"\n#include \"hitrace/trace.h\"\nstatic napi_value Add(napi_env env, napi_callback_info info)\n{\n    // 需要开启异步时间片跟踪的地方\n    OH_HiTrace_StartAsyncTrace(\"hitraceTest\", 123);\n    // 需要结束异步时间片跟踪的地方（此处为示例，开启点和结束点按实际需求放在需要的地方）\n    OH_HiTrace_FinishAsyncTrace(\"hitraceTest\", 123);\n    size_t requireArgc = 2;\n    size_t argc = 2;\n    napi_value args[2] = {nullptr};\n\n    napi_get_cb_info(env, info, &argc, args , nullptr, nullptr);\n\n    napi_valuetype valuetype0;\n    napi_typeof(env, args[0], &valuetype0);\n\n    napi_valuetype valuetype1;\n    napi_typeof(env, args[1], &valuetype1);\n\n    double value0;\n    napi_get_value_double(env, args[0], &value0);\n\n    double value1;\n    napi_get_value_double(env, args[1], &value1);\n\n    napi_value sum;\n    napi_create_double(env, value0 + value1, &sum);\n\n    return sum;\n\n} 将编译好的hap包推送到设备上安装，cmd窗口执行hdc shell连上设备后执行命令：hitrace --trace_begin app。 capturing trace... 设备上重复点击几次新安装的hap，然后在shell窗口dump trace查看结果，命令是：hitrace --trace_dump | grep hitraceTest。 <...>-2477    (-------) [001] ....   396.427165: tracing_mark_write: S|2477|H:hitraceTest 123\n<...>-2477    (-------) [001] ....   396.427196: tracing_mark_write: F|2477|H:hitraceTest 123 
