设置文件属性标签
场景介绍
Enterprise Data Guard Kit为应用提供对文件设置属性标签的能力，方便应用对管控文件进行标识、分类。
接口说明
详细接口说明可参考接口文档。
接口名
描述
setFileTag(path: string, level: SecurityLevel, tag: string, callback: AsyncCallback<void>): void
使用Callback方式设置文件属性标签。
setFileTag(path: string, level: SecurityLevel, tag: string): Promise<void>
使用Promise方式设置文件属性标签。
开发步骤
 导入模块。import { fileGuard } from '@kit.EnterpriseDataGuardKit'; 初始化FileGuard对象guard，调用接口setFileTag，设置文件属性标签。        通过回调函数方式，设置文件属性标签。  import { BusinessError } from '@kit.BasicServicesKit';\n\nfunction setFileTagCallback() {\n  let guard: fileGuard.FileGuard = new fileGuard.FileGuard();\n  let path: string = '/data/service/el2/test/test.txt';\n  let tag: string = 'test';\n  guard.setFileTag(path, fileGuard.SecurityLevel.EXTERNAL, tag, (err: BusinessError) => {\n    if (err) {\n      console.error(`Failed to set file tag. Code: ${err.code}, message: ${err.message}.`);\n      return;\n    }\n    console.info(`Succeeded in setting file tag.`);\n  });\n}  通过Promise方式，设置文件属性标签。  import { BusinessError } from '@kit.BasicServicesKit';\n\nfunction setFileTagPromise() {\n  let guard: fileGuard.FileGuard = new fileGuard.FileGuard();\n  let path: string = '/data/service/el2/test/test.txt';\n  let tag: string = 'test';\n  guard.setFileTag(path, fileGuard.SecurityLevel.EXTERNAL, tag).then(() => {\n    console.info(`Succeeded in setting file tag.`);\n  }).catch((err: BusinessError) => {\n    console.error(`Failed to set file tag. Code: ${err.code}, message: ${err.message}.`);\n  });\n} 调用函数，查看打印信息。 
