FA模型的Context
FA模型下只有一个Context。Context中的所有功能都是通过方法来提供的，它提供了一些featureAbility中不存在的方法，相当于featureAbility的一个扩展和补全。
接口说明
FA模型下使用Context，需要通过featureAbility下的接口getContext来获取，而在此之前，需要先导入对应的包：
import featureAbility from '@ohos.ability.featureAbility';
然后使用如下方式获取对应的Context对象：
import featureAbility from '@ohos.ability.featureAbility';\n\nlet context = featureAbility.getContext();
最终返回的对象为Context，其对应的接口说明请参见接口文档。
开发步骤
 查询Bundle信息。 import featureAbility from '@ohos.ability.featureAbility';\nimport hilog from '@ohos.hilog';\n\nconst TAG: string = 'MainAbility';\nconst domain: number = 0xFF00;\n\nclass MainAbility {\n  onCreate() {\n    // 获取context并调用相关方法\n    let context = featureAbility.getContext();\n    context.getBundleName((data, bundleName) => {\n      hilog.info(domain, TAG, 'ability bundleName:' + bundleName);\n    });\n    hilog.info(domain, TAG, 'Application onCreate');\n  }\n  //...\n}\n\nexport default new MainAbility(); 设置当前featureAbility的显示方向。 import featureAbility from '@ohos.ability.featureAbility';\nimport bundle from '@ohos.bundle';\nimport hilog from '@ohos.hilog';\n\nconst TAG: string = 'PageAbilitySingleton';\nconst domain: number = 0xFF00;\n\nclass PageAbilitySingleton {\n  onCreate() {\n    // 获取context并调用相关方法\n    let context = featureAbility.getContext();\n    context.setDisplayOrientation(bundle.DisplayOrientation.PORTRAIT).then(() => {\n      hilog.info(domain, TAG, 'Set display orientation.');\n    })\n    hilog.info(domain, TAG, 'Application onCreate');\n  }\n\n  onDestroy() {\n    hilog.info(domain, TAG, 'Application onDestroy');\n  }\n  //...  \n}\n\nexport default new PageAbilitySingleton(); 
