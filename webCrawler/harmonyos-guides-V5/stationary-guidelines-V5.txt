Stationary开发指导
场景介绍
当应用需要获取当前设备状态时，可以调用Stationary模块，例如：需要判断当前设备处于绝对静止状态或者相对静止状态。
详细的接口介绍请参考Stationary接口。
设备状态类型参数说明
订阅设备状态事件参数说明
返回设备状态参数说明
接口说明
约束与限制
设备需要支持加速度传感器。
目前只提供了算法框架，api接口测试框架的调用返回结果为:data={\"type\":3,\"value\":-1};
如需相对静止和绝对静止能力，则具体算法需要开发者自己在device_status/libs/src/algorithm实现，可参考案例如下：
algoPara_.resultantAcc =\n   sqrt((algoPara_.x * algoPara_.x) + (algoPara_.y * algoPara_.y) + (algoPara_.z * algoPara_.z));\nif ((algoPara_.resultantAcc > RESULTANT_ACC_LOW_THRHD) && (algoPara_.resultantAcc < RESULTANT_ACC_UP_THRHD)) {\n   if (state_ == STILL) {\n      return;\n   }\n   counter_--;\n   if (counter_ == 0) {\n      counter_ = COUNTER_THRESHOLD;\n      UpdateStateAndReport(VALUE_ENTER, STILL, TYPE_ABSOLUTE_STILL);\n   }\n} else {\n   counter_ = COUNTER_THRESHOLD;\n   if (state_ == UNSTILL) {\n      return;\n   }\n   UpdateStateAndReport(VALUE_EXIT, UNSTILL, TYPE_ABSOLUTE_STILL);\n}
开发步骤
 订阅绝对静止的进入事件，1秒上报一次。 import { stationary } from '@kit.MultimodalAwarenessKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\nlet reportLatencyNs = 1000000000;\ntry {\n   stationary.on('still', stationary.ActivityEvent.ENTER, reportLatencyNs, (data) => {\n      console.log('data='+ JSON.stringify(data));\n   })\n} catch (error) {\n   let message = (error as BusinessError).message;\n   console.error('stationary on failed:' + message);\n} 查询绝对静止状态的进入事件。 import { stationary } from '@kit.MultimodalAwarenessKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\ntry {\n   stationary.once('still', (data) => {\n      console.log('data='+ JSON.stringify(data));\n   })\n} catch (error) {\n   let message = (error as BusinessError).message;\n   console.error('stationary once failed:' + message);\n} 取消订阅绝对静止状态的进入事件。 import { stationary } from '@kit.MultimodalAwarenessKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\ntry {\n   stationary.off('still', stationary.ActivityEvent.ENTER, (data) => {\n      console.log('data='+ JSON.stringify(data));\n   })\n} catch (error) {\n   let message = (error as BusinessError).message;\n   console.error('stationary off failed:' + message);\n} 
