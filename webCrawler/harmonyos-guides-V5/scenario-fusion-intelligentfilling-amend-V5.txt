动态修改ContentType值
在填写实名信息表单的场景，表单中存在身份证和其他证件输入，其中，多种证件号共用一个输入框，ContentType.ID_CARD_NUMBER目前只支持身份证号的推荐、填充，不支持其他类型的证件，需要开发者根据输入场景动态配置输入框的ContentType，只在身份证输入场景下使用ContentType.ID_CARD_NUMBER。
效果图
示例代码
import { hilog } from '@kit.PerformanceAnalysisKit';\nimport { autoFillManager } from '@kit.AbilityKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\nimport { router } from '@kit.ArkUI';\n\n@Entry\n@Component\nstruct SmartFill {\n  // type为证件号码的ContentType类型，默认值为身份证号对应的ContentType\n  @State type: ContentType | undefined = ContentType.ID_CARD_NUMBER;\n  @State isClicked: boolean = false;\n\n  build() {\n    Column({ space: 5 }) {\n      Row() {\n        Text('证件类型：').textAlign(TextAlign.End).width('25%')\n        Select([{ value: '身份证' }, { value: '港澳通行证' }])\n          .width('75%')\n          .selected(0)\n          .value('身份证')\n          .onSelect((index: number, value: string) => {\n            // 在选择证件类型时，更改证件号码对应的ContentType值\n            hilog.info(0x000, 'testTag', 'Select item changed, value: ' + value + ', index: ' + index)\n            if (value === \"身份证\") {\n              this.type = ContentType.ID_CARD_NUMBER;\n            } else if (value === \"港澳通行证\") {\n              this.type = undefined;\n            }\n            hilog.info(0x000, 'testTag', 'ContentType changed, current type: ' + this.type)\n          })\n      }\n\n      Row() {\n        Text('姓名：').textAlign(TextAlign.End).width('25%')\n        TextInput().width('75%').contentType(ContentType.PERSON_FULL_NAME)\n      }\n\n      Row() {\n        Text('手机号码：').textAlign(TextAlign.End).width('25%')\n        TextInput().width('75%').contentType(ContentType.PHONE_NUMBER)\n      }\n\n      Row() {\n        Text('证件号码').textAlign(TextAlign.End).width('25%')\n        TextInput().width('75%').contentType(this.type)\n      }\n\n      Button('保存')\n        .onClick(() => {\n          if (!this.isClicked) {\n            // 主动触发保存历史表单输入\n            try {\n              autoFillManager.requestAutoSave(this.getUIContext())\n            } catch (err) {\n              let e: BusinessError = err as BusinessError;\n              hilog.error(0x0000, 'DemoTest', 'error: %{public}d %{public}s', e.code, e.message);\n            }\n            this.isClicked = true;\n            // 设置超时时间以防止重复点击按钮保存历史表单输入\n            setTimeout(() => {\n              this.isClicked = false;\n            }, 1000)\n            // 或者通过路由跳转其他页面触发保存历史表单输入\n            router.pushUrl({\n              url: 'xxx'\n            })\n          }\n        })\n        .width(\"50%\")\n    }\n    .alignItems(HorizontalAlign.Center)\n    .height('100%')\n    .width('100%')\n  }\n}
