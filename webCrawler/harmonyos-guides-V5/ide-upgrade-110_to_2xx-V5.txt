升级版本1.1.0至2.X.X/5.X.X
升级至2.X.X版本与升级至5.X.X版本步骤一致，本文以升级至2.X.X版本为例。
在升级之前，请务必备份好 ohpm-repo 私仓工具中的历史数据，避免因升级操作失误，导致数据丢失。备份的内容包括：<deploy_root>ohpm-repo部署根目录内数据，db元数据和store三方包数据，详细步骤可参考数据备份。
旧版本服务停止：如果旧版本的服务还在运行，升级版本前请停止，进入1.1.0 版本 ohpm-repo 私仓工具包解压目录下的 bin 目录，执行 stop ohpm-repo stop  如果部署的是多实例，升级前需要停下所有机器中的ohpm-repo服务，再进行升级操作。若想在其他目录使用 ohpm-repo，请将对应版本 ohpm-repo工具包解压目录中 bin 目录的路径配置到系统环境变量 path 中。  
下载并解压工具包：下载版本 2.X.X 的 ohpm-repo 私仓工具包，并解压（请解压到一个空文件夹中）。 安装完成之后，进入ohpm-repo 私仓工具包解压目录下的 bin 目录，执行如下命令： ohpm-repo -v 终端输出为版本号 2.X.X，则表示解压成功。 移植配置文件信息：版本 2.X.X 的配置文件与版本 1.1.0 相比有较大差异，需要提取旧版本配置文件信息至新版本配置文件中，移植的具体内容如下：  如果ohpm-repo版本 1.1.0 使用的配置文件，配置项均为默认项，则无需移植配置文件信息，直接执行下一步启动操作。旧版本 1.1.0 配置文件路径为：<deploy_root>/conf/config.yaml；新版本 2.X.X 配置文件路径为：<2.X.X 版本ohpm-repo解压目录>/conf/config.yaml。<deploy_root>：ohpm-repo部署目录，可通过 1.1.0 版本 ohpm-repo 私仓工具包解压目录下的 .deploy_root 文件查看。  listen：旧版本 listen 值拷贝替换到新版本 listen 中。如果旧版本是在执行 start 时指定的 listen 值，需要把对应的 listen 值填入新版本配置文件中，新版本中 listen 值不支持命令行指定。https：如果 listen 配置的协议是 https，拷贝 https 的值：拷贝旧版本 https.key 和 https.cert 路径信息至新版本对应的 https_key 和 https_cert 中。# 旧版本 `1.1.0`\nhttps:\n  key: ./ssl/server.key     \n  cert: ./ssl/server.crt\n# 新版本 `2.X.X`\nhttps_key: ./ssl/server.key       \nhttps_cert: ./ssl/server.key       deploy_root：打开 1.1.0  版本 ohpm-repo 私仓工具包解压目录下的 .deploy_root 文件，拷贝文件中的路径信息至新版本配置文件中配置项 deploy_root 处。 如果 1.1.0  版本ohpm-repo的部署目录 deploy_root 使用的是默认路径，即可省略此操作。 <deploy_root>：ohpm-repo部署目录：windows系统默认路径: ~/AppData/Roaming/Huawei/ohpm-repo其他操作系统默认路径：~/ohpm-repo   server： 旧版本 server 有九个参数信息，拷贝移动到新版本 server numeric limit section 模块下对应九个参数中（版本 2.0.0 开始，max_package_size 的最大值从10 扩大为 100，max_extract_size 的最大值从 50 扩大为 500）# 旧版本 `1.1.0`\nserver:\n  max_package_size: 10\n  max_extract_size: 50\n  max_extract_file_num: 10240\n  user_rate_limit: 100\n  fetch_timeout: 60\n  keep_alive_timeout: 60\n  api_timeout: 60\n  upload_lock_hour: 24\n  upload_max_times: 100   \n  \n# 新版本 `2.X.X`\nmax_package_size: 10\nmax_extract_size: 50\nmax_extract_file_num: 10240\nuser_rate_limit: 100\nfetch_timeout: 60\nkeep_alive_timeout: 60\napi_timeout: 60\nupload_lock_hour: 24\nupload_max_times: 100      db： 如果数据存储到本地磁盘中，拷贝替换旧版本 db.plugin_config.path 路径信息至新版本 db.config.path 中；如果数据存储到 mysql 中，拷贝旧版本 db.plugin_config 中各项信息至新版本 db.config 中。# 旧版本 `1.1.0`: 本地存储\ndb:\n  plugin_name: ohpm-repo-plugin-filedb\n  plugin_config:\n    path: ./db  \n# 新版本 `2.X.X`: 本地存储\ndb:\n  type: filedb\n  config:\n    path: ./db      # 旧版本 `1.1.0`: mysql存储\ndb:\n  plugin_name: ohpm-repo-plugin-mysqlDB\n  plugin_config:\n    host: \"localhost\"\n    port: 3306\n    username: \"root\"\n    password: \"password\"\n    database: \"repo\"\n# 新版本 `2.X.X`: mysql存储\ndb:\n  type: mysql\n  config:\n    host: \"localhost\"\n    port: 3306\n    username: \"root\"\n    password: \"password\"\n    database: \"repo\" store： 如果文件存储在本地磁盘中 ，拷贝替换旧版本 store.plugin_config.path 路径信息和  store.plugin_config.server 值至新版本对应的 store.config.path 和 store.config.server 中；如果文件存储在 sftp 中，拷贝旧版本 store.plugin_config 中各项信息至新版本 store.config 中。 在ohpm-repo 2.0.0 版本中，listen 的默认值已更改为 listen: 0.0.0.0:8088，如果 listen 的 host 配置为 0.0.0.0，则字段 store.config.server 不可省略，必须配置为详细地址，例如 http://localhost:8088。  # 旧版本 `1.1.0`: 本地存储\nstore:\n  plugin_name: ohpm-repo-plugin-fs\n  plugin_config:\n    path: ./storage\n    #server: http://localhost:8088\n# 新版本 `2.X.X`: 本地存储\nstore:\n  type: fs\n  config:\n    path: ./storage\n    #server: http://localhost:8088     # 旧版本 `1.1.0`: sftp存储\nstore:\n  plugin_name: ohpm-repo-plugin-sftp\n  plugin_config:\n    location:\n      -\n        name: test_one_sftp\n        host: \"localhost\"\n        port: 22\n        read_username: \"read\"\n        read_password: \"encrypted_password\"\n        write_username: \"write\"\n        write_password: \"encrypted_password\"\n        path: /source22\n      -\n        name: test_two_sftp\n        host: \"localhost\"\n        port: 24\n        read_username: \"read\"\n        read_password: \"encrypted_password\"\n        write_username: \"write\"\n        write_password: \"encrypted_password\"\n        path: /source24\n    #server: http://localhost:8088\n\n# 新版本 `2.X.X`: sftp存储\nstore:\n  type: sftp\n  config:\n    location:\n      -\n        name: test_one_sftp\n        host: \"localhost\"\n        port: 22\n        read_username: \"read\"\n        read_password: \"password\"\n        write_username: \"write\"\n        write_password: \"password\"\n        path: /source22\n      -\n        name: test_two_sftp\n        host: \"localhost\"\n        port: 24\n        read_username: \"read\"\n        read_password: \"password\"\n        write_username: \"write\"\n        write_password: \"password\"\n        path: /source24\n    #server: http://localhost:8088 uplink: 拷贝旧版本 uplink.store_path 路径信息 uplink.cache_time 缓存时间信息至新版本对应的 uplink_store_path 和 uplink_cache_time 中。# 旧版本 `1.1.0`\nuplink:\nstore_path: ./uplink\ncache_time: 168\n\n# 新版本 `2.X.X`\nuplink_store_path: ./uplink\nuplink_cache_time: 168 logs：拷贝旧版本 logs_path 路径信息至新版本 logs_path 中。loglevel：拷贝旧版本 loglevel.run， loglevel.operate 和 loglevel.access 至新版本对应的 loglevel_run，loglevel_operate 和 loglevel_access 中。# 旧版本 `1.1.0`\nloglevel:\n  run: info\n  operate: info\n  access: info\n\n# 新版本 `2.X.X`\nloglevel_run: info\nloglevel_operate: info\nloglevel_access: info   新版本配置文件还添加了很多信息的配置，例如 deploy_root 和 logs_path 等，此类信息在升级过程中可不改变，使用默认项。  （可选项）新版本如果需要使用新的部署目录<new_deploy_root>，需要手动迁移数据升级ohpm-repo：按照步骤1-4，解压和拷贝替换配置文件信息。建立新部署目录：判断指定的新部署目录<new_deploy_root>是否存在，不存在则新建，新部署目录需存在且为空。拷贝数据文件：拷贝旧版本部署目录<deploy_root>下的全部文件至新部署目录中。修改新版本ohpm-repo配置文件：打开新版本ohpm-repo 2.0.0 的解压目录，进入 conf 目录下，修改新配置文件config.yaml，修改配置项 deploy_root 为新的部署目录<new_deploy_root>。  在使用新部署目录时，旧版本的部署目录中meta文件一定要迁移到新版本部署目录中，否则使用meta加密组件加密的数据无法被正确解密。  新版本服务启动：正确拷贝替换配置文件信息后，进入ohpm-repo 私仓工具包解压目录下的 bin 目录，执行以下命令启动新版本ohpm-repo服务： 执行安装命令：ohpm-repo install 结果示例：  刷新环境变量：安装成功后，必须根据给出的提示信息刷新环境变量，针对 Window 系统和 Linux/Mac 系统，有不同处理方式：Window 系统： 关闭当前窗口，重新开启一个窗口 Linux 系统或 Mac 系统： 在命令行中执行刷新命令：source ~/.bashrc或者 . ~/.bashrc。  执行start命令：ohpm-repo start 结果示例：   多实例部署机器快速升级在多实例部署中，可先升级一台机器，然后拷贝其配置文件到其他机器中进行快速升级，具体步骤如下  该方法要求部署的多实例机器之间，使用的配置文件除根目录 deploy_root 外，其他配置项必须完全相同。  第一台多实例机器根据步骤一至步骤五完成版本的升级，然后复制新版本解压目录中 conf 目录下的配置文件 config.yaml。复制 新版本配置文件到其他需要升级的机器中。在需要升级的机器中，首先停止旧版本服务：停止旧版本服务 ohpm-repo stop  若您想在其他目录使用 ohpm-repo，请将对应版本ohpm-repo根目录中 bin 目录的路径配置到系统环境变量 path 中。   下载并解压工具包：下载版本 `2.X.X`的 ohpm-repo 私仓工具包，并解压。 版本检查：进入ohpm-repo 私仓工具包解压目录下的 bin 目录，执行版本查看命令：  ohpm-repo -v 终端输出为版本号2.0.0，则表示安装成功。 替换配置文件：获取复制获得的新版本配置文件，与 2.X.X 版本 ohpm-repo 私仓工具包解压目录中 conf 目录下的配置文件做替换。保留旧配置文件的部署目录：打开 1.1.0 版本 ohpm-repo 私仓工具包解压目录下的 .deploy_root 文件，拷贝文件中的路径信息至替换后的新版本配置文件中配置项 deploy_root 处。新版本ohpm-repo的服务启动：进入 ohpm-repo 私仓工具包解压目录下的 bin 目录，执行以下命令启动新版本ohpm-repo服务：执行安装命令：ohpm-repo install 结果示例：  刷新环境变量：安装成功后，必须根据给出的提示信息刷新环境变量，针对 Window 系统和 Linux/Mac 系统，有不同处理方式 Window 系统： 关闭当前窗口，重新开启一个窗口 Linux 系统或 Mac 系统： 在命令行中执行刷新命令：source ~/.bashrc或者 . ~/.bashrc。   执行 start 命令：ohpm-repo start 结果示例：   版本升级之前，如果浏览器中已访问ohpm-repo页面，版本升级之后请刷新ohpm-repo页面。    
