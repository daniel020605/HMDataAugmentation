list开发指导
list是用来显示列表的组件，包含一系列相同宽度的列表项，适合连续、多行地呈现同类数据。具体用法请参考list API。
创建list组件
在pages/index目录下的hml文件中创建一个list组件。
<!-- xxx.hml -->\n<div class=\"container\"> \n <list>    \n   <list-item class=\"listItem\"></list-item>\n   <list-item class=\"listItem\"></list-item>\n   <list-item class=\"listItem\"></list-item>\n   <list-item class=\"listItem\"></list-item>\n </list>\n</div>
/* xxx.css */\n.container {\n  width:100%;\n  height:100%;\n  flex-direction: column;\n  align-items: center;\n  background-color: #F1F3F5;\n}\n.listItem{\n  height: 20%;\n  background-color:#d2e0e0;\n  margin-top: 20px;\n}
 <list-item-group>是<list>的子组件，实现列表分组功能，不能再嵌套<list>，可以嵌套<list-item>。 <list-item>是<list>的子组件，展示列表的具体项。 
添加滚动条
设置scrollbar属性为on即可在屏幕右侧生成滚动条，实现长列表或者屏幕滚动等效果。
<!-- xxx.hml -->\n<div class=\"container\">\n  <list class=\"listCss\" scrollbar=\"on\" >\n    <list-item class=\"listItem\"></list-item>\n    <list-item class=\"listItem\"></list-item>\n    <list-item class=\"listItem\"></list-item>\n    <list-item class=\"listItem\"></list-item>\n    <list-item class=\"listItem\"></list-item>\n    <list-item class=\"listItem\"></list-item>\n </list>\n</div> 
/* xxx.css */\n.container {\n  flex-direction: column;\n  background-color: #F1F3F5;\n}\n.listItem{\n  height: 20%;\n  background-color:#d2e0e0;\n  margin-top: 20px;\n}\n.listCss{\n  height: 100%;\n  scrollbar-color: #8e8b8b;\n  scrollbar-width: 50px;\n}
添加侧边索引栏
设置indexer属性为自定义索引时，索引栏会显示在列表右边界处，indexer属性设置为true，默认为字母索引表。
<!-- xxx.hml -->\n<div class=\"container\">   \n  <list class=\"listCss\"  indexer=\"{{['#','1','2','3','4','5','6','7','8']}}\" >  \n    <list-item class=\"listItem\"  section=\"#\" ></list-item>   \n  </list>\n</div>
/* xxx.css */\n.container{\n  flex-direction: column;\n  background-color: #F1F3F5;\n } \n.listCss{\n  height: 100%;    \n  flex-direction: column;\n  columns: 1\n}
 indexer属性生效需要flex-direction属性配合设置为column，且columns属性设置为1。 indexer可以自定义索引表，自定义时\"#\"必须要存在。 
实现列表折叠和展开
为list组件添加groupcollapse和groupexpand事件实现列表的折叠和展开。
<!-- xxx.hml -->\n<div class=\"doc-page\">\n  <list style=\"width: 100%;\" id=\"mylist\">\n    <list-item-group for=\"listgroup in list\" id=\"{{listgroup.value}}\" ongroupcollapse=\"collapse\" ongroupexpand=\"expand\">\n      <list-item type=\"item\" style=\"background-color:#FFF0F5;height:95px;\">\n        <div class=\"item-group-child\">\n          <text>One---{{listgroup.value}}</text>\n        </div>\n      </list-item>\n      <list-item type=\"item\" style=\"background-color: #87CEFA;height:145px;\" primary=\"true\">\n        <div class=\"item-group-child\">\n          <text>Primary---{{listgroup.value}}</text>\n        </div>\n      </list-item>\n    </list-item-group>\n  </list>\n</div>
/* xxx.css */\n.doc-page {\n  flex-direction: column;\n  background-color: #F1F3F5;\n}\nlist-item{\nmargin-top:30px;\n}\n.top-list-item {\n  width:100%;\n  background-color:#D4F2E7;\n}\n.item-group-child {\n  justify-content: center;\n  align-items: center;\n  width:100%;\n}
// xxx.js\nimport promptAction from '@ohos.promptAction';\nexport default {\n  data: {\n    direction: 'column',\n    list: []\n  },\n  onInit() {\n    this.list = []\n    this.listAdd = []\n    for (var i = 1; i <= 2; i++) {\n      var dataItem = {\n        value: 'GROUP' + i,\n      };\n        this.list.push(dataItem);\n    }\n  },\n  collapse(e) {\n    promptAction.showToast({\n      message: 'Close ' + e.groupid\n    })\n  },\n  expand(e) {\n    promptAction.showToast({\n    message: 'Open ' + e.groupid\n    })\n  }\n}
 groupcollapse和groupexpand事件仅支持list-item-group组件使用。 
场景示例
在本场景中，开发者可以根据字母索引表查找对应联系人。
<!-- xxx.hml -->\n<div class=\"doc-page\"> \n  <text style=\"font-size: 35px; font-weight: 500; text-align: center; margin-top: 20px; margin-bottom: 20px;\"> \n      <span>Contacts</span> \n  </text> \n  <list class=\"list\" indexer=\"true\"> \n    <list-item class=\"item\" for=\"{{namelist}}\" type=\"{{$item.section}}\" section=\"{{$item.section}}\"> \n      <div class=\"container\"> \n        <div class=\"in-container\"> \n          <text class=\"name\">{{$item.name}}</text> \n          <text class=\"number\">18888888888</text> \n        </div> \n      </div> \n    </list-item> \n    <list-item type=\"end\" class=\"item\"> \n      <div style=\"align-items:center;justify-content:center;width:750px;\"> \n        <text style=\"text-align: center;\">Total: 10</text> \n      </div> \n    </list-item> \n  </list> \n</div>
/* xxx.css */\n.doc-page {\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  background-color: #F1F3F5;\n}\n.list {\n  width: 100%;\n  height: 90%;\n  flex-grow: 1;\n}\n.item {\n  height: 120px;\n  padding-left: 10%;\n  border-top: 1px solid #dcdcdc;\n}\n.name {\n  color: #000000;\n  font-size: 39px;\n}\n.number {\n  color: black;\n  font-size: 25px;\n}\n.container {\n  flex-direction: row;\n  align-items: center;\n}\n.in-container {\n  flex-direction: column;\n  justify-content: space-around;\n}
// xxx.js\nexport default { \n   data: { \n     namelist:[{ \n       name: 'Zoey', \n       section:'Z' \n     },{ \n       name: 'Quin', \n       section:'Q' \n     },{ \n       name:'Sam', \n       section:'S' \n     },{ \n       name:'Leo', \n       section:'L' \n     },{ \n       name:'Zach', \n       section:'Z' \n     },{ \n       name:'Wade', \n       section:'W' \n     },{ \n       name:'Zoe', \n       section:'Z' \n     },{ \n        name:'Warren', \n        section:'W' \n     },{ \n        name:'Kyle', \n        section:'K' \n     },{ \n       name:'Zaneta', \n       section:'Z' \n     }] \n   }, \n   onInit() { \n   } \n }
