打开文件
场景介绍
普通应用无法直接访问公共路径下的文件，Enterprise Data Guard Kit为应用提供相关接口以获取文件描述符（fd）。
接口说明
详细接口说明可参考接口文档。
接口名
描述
openFile(path: string, callback: AsyncCallback<number>): void
使用Callback方式获取指定目录文件fd。
openFile(path: string): Promise<number>
使用Promise方式获取指定目录文件fd。
开发步骤
 导入模块。import { fileGuard } from '@kit.EnterpriseDataGuardKit'; 初始化FileGuard对象guard，调用接口openFile，并且可选择以下一种方式获取指定目录文件fd。        通过回调函数方式，获取文件fd。  import { BusinessError } from '@kit.BasicServicesKit';\n\nfunction openFileCallback() {\n  let guard: fileGuard.FileGuard = new fileGuard.FileGuard();\n  let path: string = '/data/service/el2/test/test.txt';\n  guard.openFile(path, (err: BusinessError, fd: number) => {\n    if (err) {\n      console.error(`Failed to open file. Code: ${err.code}, message: ${err.message}.`);\n      return;\n    }\n    console.info(`Succeeded in opening file. path: ${path}, fd: ${fd}.`);\n  });\n}  通过Promise方式，获取文件fd。  import { BusinessError } from '@kit.BasicServicesKit';\n\nfunction openFilePromise() {\n  let guard: fileGuard.FileGuard = new fileGuard.FileGuard();\n  let path: string = '/data/service/el2/test/test.txt';\n  guard.openFile(path).then((fd: number) => {\n    console.info(`Succeeded in opening file. path: ${path} , fd: ${fd}.`);\n  }).catch((err: BusinessError) => {\n    console.error(`Failed to open file. Code: ${err.code}, message: ${err.message}.`);\n  });\n} 调用函数，查看打印信息。 
