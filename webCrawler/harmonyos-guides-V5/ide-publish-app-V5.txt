HarmonyOS应用/元服务发布
HarmonyOS通过数字证书与Profile文件等签名信息来保证应用/元服务的完整性，应用/元服务上架到AppGallery Connect必须通过签名校验。因此，您需要使用发布证书和Profile文件对应用/元服务进行签名后才能发布。
发布流程
开发者完成HarmonyOS应用/元服务开发后，需要将应用/元服务打包成App Pack（.app文件），用于上架到AppGallery Connect。发布应用/元服务的流程如下图所示：
关于以上流程的详细介绍，请继续查阅本章节内容。
准备签名文件
HarmonyOS应用/元服务通过数字证书（.cer文件）和Profile文件（.p7b文件）来保证应用/元服务的完整性。在申请数字证书和Profile文件前，首先需要通过DevEco Studio来生成密钥（存储在格式为.p12的密钥库文件中）和证书请求文件（.csr文件）。
密钥：包含非对称加密中使用的公钥和私钥，存储在密钥库文件中，格式为.p12，公钥和私钥对用于数字签名和验证。证书请求文件：格式为.csr，全称为Certificate Signing Request，包含密钥对中的公钥和公共名称、组织名称、组织单位等信息，用于向AppGallery Connect申请数字证书。数字证书：格式为.cer，由华为AppGallery Connect颁发。Profile文件：格式为.p7b，包含HarmonyOS应用/元服务的包名、数字证书信息、描述应用/元服务允许申请的证书权限列表，以及允许应用/元服务调试的设备列表（如果应用/元服务类型为Release类型，则设备列表为空）等内容，每个应用/元服务包中均必须包含一个Profile文件。
[h2]生成密钥和证书请求文件
在主菜单栏单击Build > Generate Key and CSR。 如果本地已有对应的密钥，无需新生成密钥，可以在Generate Key界面中单击下方的Skip跳过密钥生成过程，直接使用已有密钥生成证书请求文件。  在Key Store File中，可以单击Choose Existing选择已有的密钥库文件（存储有密钥的.p12文件）；如果没有密钥库文件，单击New进行创建。下面以新创建密钥库文件为例进行说明。 在Create Key Store窗口中，填写密钥库信息后，单击OK。Key Store File：设置密钥库文件存储路径，并填写p12文件名。Password：设置密钥库密码，必须由大写字母、小写字母、数字和特殊符号中的两种以上字符的组合，长度至少为8位。请记住该密码，后续签名配置需要使用。Confirm Password：再次输入密钥库密码。  在Generate Key and CSR界面中，继续填写密钥信息后，单击Next。Alias：密钥的别名信息，用于标识密钥名称。请记住该别名，后续签名配置需要使用。Password：密钥对应的密码，与密钥库密码保持一致，无需手动输入。  在Generate Key and CSR界面，设置CSR文件存储路径和CSR文件名。 单击OK按钮，创建CSR文件成功，可以在存储路径下获取生成的密钥库文件（.p12）和证书请求文件（.csr）。 
[h2]申请发布证书和Profile文件
创建HarmonyOS应用/元服务：在AppGallery Connect项目中，创建一个HarmonyOS应用/元服务，用于发布证书和Profile文件申请，具体请参考创建HarmonyOS应用/元服务。 如果申请元服务的签名证书，在“创建应用”操作时，“是否元服务”选项请选择“是”。  申请发布证书和Profile文件：在AppGallery Connect中申请、下载发布证书和Profile文件，具体请参考申请发布证书和申请发布Profile。
用于发布的证书和Profile文件申请完成后，请在DevEco Studio中进行签名，请参考配置签名信息。
使用发布证书和发布Profile文件进行手动签名，只能用来打包应用上架，不能用来运行调试工程。
配置签名信息
使用制作的私钥（.p12）文件、在AppGallery Connect中申请的证书（.cer）文件和Profile（.p7b）文件，在DevEco Studio配置工程的签名信息，构建携带发布签名信息的APP。
Store File：选择密钥库文件，文件后缀为.p12。Store Password：输入密钥库密码。Key Alias：输入密钥的别名信息。Key Password：输入密钥的密码。Sign Alg：签名算法，固定为SHA256withECDSA。Profile File：选择申请的发布Profile文件，文件后缀为.p7b。Certpath File：选择申请的发布数字证书文件，文件后缀为.cer。
设置完签名信息后，单击OK进行保存，然后使用DevEco Studio生成APP，请参考编译构建.app文件。
（条件必选）更新公钥指纹
当应用需要使用以下开放能力的一种或多种时，发布应用前，需在AppGallery Connect中将调试应用的指纹更新为发布证书指纹。具体操作请参见配置应用签名证书指纹。
Account Kit（华为账号服务）Game Service Kit（游戏服务）Health Service Kit（运动健康服务）IAP Kit（应用内支付服务）Map Kit（地图服务）Payment Kit（华为支付服务）Wallet Kit（钱包服务）
编译构建.app文件
应用上架时，要求应用包类型为Release类型。
打包APP时，DevEco Studio会将工程目录下的所有HAP/HSP模块打包到APP中，因此，如果工程目录中存在不需要打包到APP的HAP/HSP模块，请手动删除后再进行编译构建生成APP。
单击Build > Build Hap(s)/APP(s) > Build APP(s)，等待编译构建完成已签名的应用包。 当未指定构建模式时，构建APP包，默认Release模式；构建HAP/HSP/HAR包，默认Debug模式。 即Build APP(s)时，默认构建的APP包为Release类型，符合上架要求，开发者无需进行另外设置。  编译构建完成后，可以在工程目录build > outputs > default下，获取带签名的应用包。  
上架.app文件到AGC
将HarmonyOS应用/元服务打包成.app文件后上架到AppGallery Connect，上架详细操作指导请参考上架HarmonyOS应用或上架元服务。
