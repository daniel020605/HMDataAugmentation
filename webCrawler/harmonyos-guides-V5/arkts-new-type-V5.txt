@Type装饰器：标记类属性的类型
为了实现序列化类时不丢失属性的复杂类型，开发者可以使用@Type装饰器装饰类属性。
@Type的目的是标记类属性，配合PersistenceV2使用，防止序列化时类丢失。在阅读本文档前，建议提前阅读：PersistenceV2。
@Type从API version 12开始支持。
概述
@Type标记类属性，使得类属性序列化时不丢失类型信息，便于类的反序列化。
装饰器说明
使用限制
1、只能用在@ObservedV2装饰的类中，不能用在自定义组件中。
class Sample {\n  data: number = 0;\n}\n@ObservedV2\nclass Info {\n  @Type(Sample)\n  @Trace sample: Sample = new Sample(); // 正确用法\n}\n@Observed\nclass Info2 {\n  @Type(Sample)\n  sample: Sample = new Sample(); // 错误用法，不能用在@Observed装饰的类中，编译时报错\n}\n@ComponentV2\nstruct Index {\n  @Type(Sample)\n  sample: Sample = new Sample(); // 错误用法，不能用在自定义组件中\n  build() {\n  }\n}
2、不支持collections.Set、collections.Map等类型。
3、不支持非buildin类型，如PixelMap、NativePointer、ArrayList等Native类型。
4、不支持简单类型，如string、number、boolean等。
使用场景
[h2]持久化数据
数据页面
import { Type } from '@kit.ArkUI';\n\n// 数据中心\n@ObservedV2\nclass SampleChild {\n  @Trace p1: number = 0;\n  p2: number = 10;\n}\n\n@ObservedV2\nexport class Sample {\n  // 对于复杂对象需要@Type修饰，确保序列化成功\n  @Type(SampleChild)\n  @Trace f: SampleChild = new SampleChild();\n}
页面
import { PersistenceV2 } from '@kit.ArkUI';\nimport { Sample } from '../Sample';\n\n@Entry\n@ComponentV2\nstruct Page {\n  prop: Sample = PersistenceV2.connect(Sample, () => new Sample())!;\n\n  build() {\n    Column() {\n      Text(`Page1 add 1 to prop.p1: ${this.prop.f.p1}`)\n        .fontSize(30)\n        .onClick(() => {\n          this.prop.f.p1++;\n        })\n    }\n  }\n}
