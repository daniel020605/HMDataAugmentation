qrcode开发指导
生成并显示二维码，具体用法请参考qrcode。
创建qrcode组件
在pages/index目录下的hml文件中创建一个qrcode组件。
<!-- xxx.hml-->\n<div class=\"container\">\n  <qrcode value=\"Hello\"></qrcode>\n</div>
/* xxx.css */\n.container {\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #F1F3F5;\n}
qrcode组件在创建的时候value的值为必填项。
设置组件类型
通过设置qrcode的type属性来选择按钮类型，如定义qrcode为矩形二维码、圆形二维码。
<!-- xxx.hml-->\n<div class=\"container\">\n  <select onchange=\"settype\">\n    <option for=\"{{bcol_list}}\" value=\"{{$item}}\">{{$item}}</option>\n  </select>\n  <qrcode value=\"Hello\" type=\"{{qr_type}}\"></qrcode>\n</div>
/* xxx.css */\n.container {\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #F1F3F5;\n}\nselect{\n  margin-top: 50px;\n  margin-bottom: 50px;\n}
// index.js\nexport default {\n  data: {\n    qr_type: 'rect',\n    bcol_list: ['rect','circle']\n  },\n  settype(e) {\n    this.qr_type = e.newValue \n  },\n}
设置样式
通过color和background-color样式为二维码设置显示颜色和背景颜色。
<!-- xxx.hml-->\n<div class=\"container\">\n  <qrcode value=\"Hello\" type=\"rect\"></qrcode>\n</div>
/* xxx.css */\n.container {\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #F1F3F5;\n}\nqrcode{\n  width: 300px;\n  height: 300px;\n color: blue;  background-color: #ffffff;\n}
 width和height不一致时，取二者较小值作为二维码的边长，且最终生成的二维码居中显示。 width和height只设置一个时，取设置的值作为二维码的边长。都不设置时，使用200px作为默认边长。 
场景示例
在本场景中将二维码与输入框绑定，通过改变输入框的内容改变二维码。
<!-- xxx.hml-->\n<div class=\"container\">\n  <input style=\"margin-bottom: 100px;\" onchange=\"change\"></input>\n  <qrcode value=\"{{textVal}}\"></qrcode>\n</div>
/* xxx.css */\n.container {\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #F1F3F5;\n}\nqrcode{\n  width: 400px;\n  height: 400px;\n}
// index.js\nexport default{\n  data: {\n    textVal: ''\n  },\n  change(e){\n    this.textVal = e.value\n  }\n}
