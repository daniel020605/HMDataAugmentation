swiper开发指导
swiper为滑动容器，提供切换显示子组件的能力。具体用法请参考swiper。
创建swiper组件
在pages/index目录下的hml文件中创建一个swiper组件。
<!-- xxx.hml-->\n<div class=\"container\">\n  <swiper>\n    <div class=\"item\" style=\"background-color: #bf45ea;\">\n      <text>item1</text>\n    </div>\n    <div class=\"item\" style=\"background-color: #088684;\">\n      <text>item2</text>\n    </div>\n    <div class=\"item\" style=\"background-color: #7786ee;\">\n      <text>item3</text>\n    </div>\n  </swiper>\n</div>
/* xxx.css */\n.container{\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  background-color: #F1F3F5;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\nswiper{\n  height: 30%;\n}\n.item{\n  width: 100%;\n  height: 500px;\n}\ntext{\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: 50px;\n  color: white;\n}
swiper组件支持除<list>之外的子组件。
添加属性
swiper组件当不开启循环播放（loop=\"false\"）时添加自动播放属性（autoplay），设置自动播放时播放时间间隔（interval），页面会自动切换并停留在最后一个子组件页面。添加digital属性启用数字导航点，设置切换时为渐隐滑动效果（scrolleffect=\"fade\"）。
<!-- xxx.hml-->\n<div class=\"container\">\n  <swiper index=\"1\"  autoplay=\"true\" interval=\"2000\" indicator=\"true\" digital=\"true\" duration=\"500\"\n  scrolleffect=\"fade\" loop=\"false\">\n    <div class=\"item\" style=\"background-color: #bf45ea;\">\n      <text>item1</text>\n    </div>\n    <div class=\"item\" style=\"background-color: #088684;\">\n      <text>item2</text>\n    </div>\n    <div class=\"item\" style=\"background-color: #7786ee;\">\n      <text>item3</text>\n    </div>\n    <div class=\"item\" style=\"background-color: #c88cee;\">\n      <text>item4</text>\n    </div>\n  </swiper>\n</div>
/* xxx.css */\n.container{\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  background-color: #F1F3F5;\n  align-items: center;\n  justify-content: center;\n}\nswiper{\n  height: 30%;\n}\n.item{\n  width: 100%;\n  height: 500px;\n}\ntext{\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: 50px;\n  color: white;\n}
 设置indicator（是否启用导航点指示器）属性为true时digital（是否启用数字导航点）属性才会生效。 swiper子组件的个数大于等于2时设置的loop属性才会生效。 scrolleffect属性仅在loop属性值为false时生效。 
设置样式
设置swiper组件的宽高，导航点指示器的直径大小（indicator-size）、颜色（indicator-color）、相对位置（indicator-top）及选中时的颜色（indicator-selected-color）。
<!-- xxx.hml-->\n<div class=\"container\">\n    <swiper index=\"1\" autoplay=\"true\" interval=\"2000\"  duration=\"500\" >\n        <div class=\"item\" style=\"background-color: bisque;\">\n            <text>item1</text>\n        </div>\n        <div class=\"item\" style=\"background-color: darkkhaki;\">\n            <text>item2</text>\n        </div>\n        <div class=\"item\" style=\"background-color: cadetblue;\">\n            <text>item3</text>\n        </div>\n    </swiper>\n</div>
/* xxx.css */\n.container{\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  background-color: #F1F3F5;\n  align-items: center;\n  justify-content: center;\n}\nswiper{\n  width:  500px;\n  height: 500px;\n  border-radius: 250px;\n  indicator-color: white;\n  indicator-selected-color: blue;\n  indicator-size: 40px;\n  indicator-top: 100px;\n  overflow: hidden ;\n}\n.item{\n  width: 100%;\n  height: 500px;\n}\ntext{\n  width: 100%;\n  text-align: center;\n  margin-top: 150px;\n  font-size: 50px;\n  color: white;\n}
绑定事件
创建两个text组件添加点击事件，当点击后就调用showPrevious（显示上一个子组件）或showNext（显示下一个子组件）方法。添加select组件下拉选择时触发change事件后调用swipeTo方法跳转到指定轮播页面。swiper组件绑定change（当前显示的组件索引变化时触发）和finish（切换动画结束时触发）事件。
<!-- xxx.hml-->\n<div class=\"container\">\n  <swiper interval=\"2000\" onchange=\"change\" loop=\"false\" onanimationfinish=\"finish\" id=\"swiper\">\n    <div class=\"item\" style=\"background-color: #bf45ea\">\n      <text>item1</text>\n    </div>\n    <div class=\"item\" style=\"background-color: #088684;\">\n      <text>item2</text>\n    </div>\n    <div class=\"item\" style=\"background-color: #7786ee;\">\n      <text>item3</text>\n    </div>\n    <div class=\"item\" style=\"background-color: #c88cee;\">\n      <text>item4</text>\n    </div>\n  </swiper>\n  <div class=\"content\">\n      <button class=\"pnbtn\" onclick=\"previous\">Previous</button>\n      <select onchange=\"selectChange\">\n          <option value=\"0\">swipeTo 1</option>\n          <option value=\"1\">swipeTo 2</option>\n          <option value=\"2\">swipeTo 3</option>\n          <option value=\"3\">swipeTo 4</option>\n      </select>\n    <button class=\"pnbtn\" onclick=\"next\">Next</button>\n  </div>\n</div>
/* xxx.css */\n.container{\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  background-color: #F1F3F5;\n  align-items: center;\n  justify-content: center;\n}\nswiper{\n  height: 30%;\n}\n.item{\n  width: 100%;\n  height: 500px;\n}\ntext{\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: 50px;\n  color: white;\n}\nselect{\n  background-color: white;\n  width: 250px;\n  height: 80px;\n}\n.content{\n  margin-top: 100px;\n  justify-content: space-around;\n}\n.pnbtn{\n  width: 200px;\n  height: 80px;\n  font-size: 30px; \n}
// xxx.js\nimport promptAction from '@ohos.promptAction';\nexport default{\n  change(e){\n    promptAction.showToast({duration:2000,message:\"current index:\"+e.index});\n  },\n  finish(){\n    promptAction.showToast({duration:2000,message:\"切换动作结束\"});\n  },\n  selectChange(e){\n    this.$element('swiper').swipeTo({index: Number(e.newValue)});\n  },\n  previous(){\n    this.$element('swiper').showPrevious();\n  },\n  next(){\n    this.$element('swiper').showNext();\n  }\n}
场景示例
本场景中使用swiper创建一个轮播图，在轮播图底部制作一个缩略图，点击缩略图后调用swipeTo方法切换到对应的轮播图。
<!-- xxx.hml-->\n<div class=\"container\">\n  <swiper duration=\"500\" indicator=\"false\" id=\"swiper\" onchange=\"change\">\n    <div class=\"item\" for=\"item in list\">\n      <image src=\"{{item.src}}\"></image>\n    </div>\n  </swiper>\n  <div class=\"content\">\n    <div class=\"content_item {{index == $idx?'actived':''}}\" for=\"item in list\" onclick=\"imageTo({{$idx}})\">\n      <image src=\"{{item.src}}\"></image>\n    </div>\n  </div>\n</div>
/* xxx.css */\n.container{\n  flex-direction: column;\n  background-color: #F1F3F5;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\nswiper{\n  width: 100%;\n  height: 500px;\n}\n.item{\n  width: 100%;\n  height: 500px;\n}\n.content{\n  margin-top: -120px;\n  width: 70%;\n  display: flex;\n  justify-content: space-around;\n  height: 100px;\n}\n.content_item{\n  padding: 5px;\n  transform: scale(0.5);\n}\n.actived{\n  transform: scale(1);\n  border: 1px solid #b20937ea;\n}
// xxx.js\nimport promptAction from '@ohos.promptAction';\nexport default {\n  data:{\n    index: 0,\n    list:[\n      {src: 'common/images/1.png'},\n      {src: 'common/images/2.png'},\n      {src: 'common/images/3.png'},\n      {src: 'common/images/4.png'},]\n    },\n  imageTo(index){\n    this.index = index;\n    this.$element('swiper').swipeTo({index: index});\n  },\n  change(e){\n    this.index = e.index;\n  }\n}
