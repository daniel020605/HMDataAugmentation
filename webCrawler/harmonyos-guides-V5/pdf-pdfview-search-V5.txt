搜索关键字
预览PDF文档时，可以对页面的关键词（英文字符不区分大小写）进行搜索并高亮显示，同时使用setSearchIndex方法高亮显示指定的搜索结果。
使用getSearchIndex方法获取当前高亮的索引，可以使用clearSearch方法清除所有搜索结果。
接口说明
接口名
描述
searchKey(text: string, listener: Callback<number>): void
搜索文本并返回匹配的总数。
示例代码
 先加载PDF文档。 调用PdfView预览组件，渲染显示。 在按钮【searchKey】里，调用searchKey方法，搜索指定关键字。 上一个、下一个搜索按钮跳转到对应的结果。 在按钮【getSearchIndex】里，调用getSearchIndex方法，获取当前的搜索结果索引。 在按钮【clearSearch】里，调用clearSearch方法，清除搜索结果。 
import { pdfService, PdfView, pdfViewManager } from '@kit.PDFKit';\nimport { common } from '@kit.AbilityKit';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\n\n@Entry\n@Component\nstruct PdfPage {\n  private controller: pdfViewManager.PdfController = new pdfViewManager.PdfController();\n  private context = getContext() as common.UIAbilityContext;\n  private loadResult: pdfService.ParseResult = pdfService.ParseResult.PARSE_ERROR_FORMAT;\n  private searchIndex = 0;\n  private charCount = 0;\n\n  aboutToAppear(): void {\n    // 确保沙箱目录有input.pdf文档\n    let filePath = this.context.filesDir + '/input.pdf';\n    (async () => {\n      this.loadResult = await this.controller.loadDocument(filePath);\n    })()\n  }\n\n  build() {\n    Column() {\n      Row() {\n        // 搜索关键字\n        Button('searchKey').onClick(async () => {\n          if (this.loadResult === pdfService.ParseResult.PARSE_SUCCESS) {\n            this.controller.searchKey('C++', (index: number) => {\n              this.charCount = index;\n              hilog.info(0x0000, 'PdfPage', 'searchKey %{public}s!', index + '');\n            })\n          }\n        })\n        // 上一个\n        Button('setSearchPrevIndex').onClick(async () => {\n          if (this.loadResult === pdfService.ParseResult.PARSE_SUCCESS) {\n            if(this.searchIndex > 0) {\n              this.controller.setSearchIndex(--this.searchIndex);\n            }\n          }\n        })\n        // 下一个\n        Button('setSearchNextIndex').onClick(async () => {\n          if (this.loadResult === pdfService.ParseResult.PARSE_SUCCESS) {\n            if(this.searchIndex < this.charCount) {\n              this.controller.setSearchIndex(++this.searchIndex);\n            }\n          }\n        })\n       // 获取当前页索引\n        Button('getSearchIndex').onClick(async () => {\n          if (this.loadResult === pdfService.ParseResult.PARSE_SUCCESS) {\n            let curSearchIndex = this.controller.getSearchIndex();\n            hilog.info(0x0000, 'PdfPage', 'curSearchIndex %{public}s!', curSearchIndex + '');\n          }\n        })\n        // 清除搜索文本的高亮\n        Button('clearSearch').onClick(async () => {\n          if (this.loadResult === pdfService.ParseResult.PARSE_SUCCESS) {\n            this.controller.clearSearch();\n          }\n        })\n      }\n\n      PdfView({\n        controller: this.controller,\n        pageFit: pdfService.PageFit.FIT_WIDTH,\n        showScroll: true\n      })\n        .id('pdfview_app_view')\n        .layoutWeight(1);\n    }\n  }\n}
