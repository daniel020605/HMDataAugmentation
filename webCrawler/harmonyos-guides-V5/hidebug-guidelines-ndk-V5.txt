使用HiDebug获取调试信息（C/C++）
HiDebug模块对外提供应用调试功能。
接口说明
API接口的具体使用说明（参数使用限制、具体取值范围等）请参考HiDebug。
开发步骤
下文将展示如何在应用内增加一个按钮，并单击该按钮以调用Hidebug Ndk接口。
 新建Native C++工程，目录结构如下： entry:\n  src:\n    main:\n      cpp:\n        - types:\n            libentry:\n              - index.d.ts\n        - CMakeLists.txt\n        - napi_init.cpp\n      ets:\n        - entryability:\n            - EntryAbility.ts\n        - pages:\n            - Index.ets 编辑\"CMakeLists.txt\"文件，添加库依赖： # 新增动态库依赖libhiappevent_ndk.z.so和libhilog_ndk.z.so(日志输出)\ntarget_link_libraries(entry PUBLIC libace_napi.z.so libhilog_ndk.z.so libohhidebug.so) 编辑\"napi_init.cpp\"文件，导入依赖的文件，并定义LOG_TAG及测试方法： 本示例中以OH_HiDebug_GetSystemCpuUsage接口为例，调用该接口并输出返回值，其他接口请参考HiDebug。 #include \"napi/native_api.h\"\n#include \"hilog/log.h\"\n#include \"hidebug/hidebug.h\"\n\n#undef LOG_TAG\n#define LOG_TAG \"testTag\"\n\nstatic napi_value TestHidebugNdk(napi_env env, napi_callback_info info)\n{\n    double cpuUsage = OH_HiDebug_GetSystemCpuUsage();\n    OH_LOG_INFO(LogType::LOG_APP, \"GetSystemCpuUsage: %{public}f\", cpuUsage);\n    return 0;\n} 将TestHidebugNdk注册为ArkTS接口： 编辑\"napi_init.cpp\"文件，将TestHidebugNdk注册为ArkTS接口： static napi_value Init(napi_env env, napi_value exports)\n{\n    napi_property_descriptor desc[] = {\n        { \"testHidebugNdk\", nullptr, TestHidebugNdk, nullptr, nullptr, nullptr, napi_default, nullptr }\n    };\n    napi_define_properties(env, exports, sizeof(desc) / sizeof(desc[0]), desc);\n    return exports;\n} 编辑\"index.d.ts\"文件，定义ArkTS接口： export const testHidebugNdk: () => void; 编辑\"Index.ets\"文件，给文本Text组件添加一个点击事件，示例代码如下： import testNapi from 'libentry.so'\n\n@Entry\n@Component\nstruct Index {\n  @State message: string = 'Hello World'\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(50)\n          .fontWeight(FontWeight.Bold)\n          .onClick(testNapi.testHidebugNdk);//添加点击事件，触发testHidebugNdk方法。\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n} 点击DevEco Studio界面中的运行按钮，运行应用工程，点击\"Hello world\"文本。 在DevEco Studio的底部，切换到“Log”窗口，设置日志的过滤条件为“testTag”。 此时窗口将显示通过OH_HiDebug_GetSystemCpuUsage()接口获取的CPU使用率的相关日志。 09-10 09:40:26.755 17221-17221/com.example.myapplication I A00000/testTag: GetSystemCpuUsage: 0.083904 
