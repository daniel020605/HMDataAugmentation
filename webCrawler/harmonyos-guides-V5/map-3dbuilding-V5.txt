3D建筑
场景介绍
本章节将向您介绍如何在地图上绘制3D建筑。
接口说明
添加3D建筑功能主要由BuildingOverlayParams、addBuildingOverlay和BuildingOverlay提供，更多接口及使用方法请参见接口文档。
接口名
描述
BuildingOverlayParams
3D建筑参数。
addBuildingOverlay(params: mapCommon.BuildingOverlayParams): Promise<BuildingOverlay>
在地图上添加3D建筑。
BuildingOverlay
3D建筑，支持更新和查询相关属性。
开发步骤
[h2]添加3D建筑
 导入相关模块。import { mapCommon, map, MapComponent } from '@kit.MapKit';\nimport { AsyncCallback } from '@kit.BasicServicesKit'; 添加3D建筑。@Entry\n@Component\nstruct BuildingOverlayDemo {\n  private TAG = \"OHMapSDK_BuildingOverlayDemo\";\n  private mapOptions?: mapCommon.MapOptions;\n  private mapController?: map.MapComponentController;\n  private callback?: AsyncCallback<map.MapComponentController>;\n  private buildingOverlay?: map.BuildingOverlay;\n\n  aboutToAppear(): void {\n    // 初始化地图参数\n    this.mapOptions = {\n      position: {\n        target: {\n          latitude: 31.984794,\n          longitude: 118.765865\n        },\n        zoom: 18\n      },\n      scaleControlsEnabled: true\n    }\n\n    this.callback = async (err, mapController) => {\n      console.info(this.TAG, \"addBuildingOverlay\");\n      if (!err) {\n        this.mapController = mapController;\n        let points: Array<mapCommon.LatLng> = [\n          {\n            latitude: 31.984794,\n            longitude: 118.765865\n          },\n          {\n            latitude: 31.98468,\n            longitude: 118.766076\n          },\n          {\n            latitude: 31.98472,\n            longitude: 118.766116\n          },\n          {\n            latitude: 31.98463,\n            longitude: 118.766292\n          },\n          {\n            latitude: 31.984586,\n            longitude: 118.766251\n          },\n          {\n            latitude: 31.984536,\n            longitude: 118.766344\n          },\n          {\n            latitude: 31.984633,\n            longitude: 118.766446\n          },\n          {\n            latitude: 31.9848,\n            longitude: 118.766285\n          },\n          {\n            latitude: 31.984925,\n            longitude: 118.766312\n          },\n          {\n            latitude: 31.985282,\n            longitude: 118.766661\n          },\n          {\n            latitude: 31.985438,\n            longitude: 118.766419\n          },\n          {\n            latitude: 31.985801,\n            longitude: 118.766755\n          },\n          {\n            latitude: 31.985856,\n            longitude: 118.766504\n          },\n          {\n            latitude: 31.985785,\n            longitude: 118.766434\n          },\n          {\n            latitude: 31.985821,\n            longitude: 118.766278\n          },\n          {\n            latitude: 31.985897,\n            longitude: 118.766311\n          },\n          {\n            latitude: 31.985944,\n            longitude: 118.766095\n          },\n          {\n            latitude: 31.985909,\n            longitude: 118.766069\n          },\n          {\n            latitude: 31.985794,\n            longitude: 118.765989\n          },\n          {\n            latitude: 31.9857,\n            longitude: 118.766029\n          },\n          {\n            latitude: 31.985658,\n            longitude: 118.766164\n          },\n          {\n            latitude: 31.985647,\n            longitude: 118.766271\n          },\n          {\n            latitude: 31.985574,\n            longitude: 118.766297\n          },\n          {\n            latitude: 31.985458,\n            longitude: 118.766285\n          },\n          {\n            latitude: 31.985271,\n            longitude: 118.766002\n          },\n          {\n            latitude: 31.985219,\n            longitude: 118.766002\n          },\n          {\n            latitude: 31.985135,\n            longitude: 118.766029\n          },\n          {\n            latitude: 31.985093,\n            longitude: 118.766083\n          },\n          {\n            latitude: 31.985019,\n            longitude: 118.766109\n          },\n          {\n            latitude: 31.984978,\n            longitude: 118.766083\n          },\n          {\n            latitude: 31.984794,\n            longitude: 118.765865\n          }\n        ];\n        points.reverse();\n        // 3D建筑参数\n        let buildingOverlayOptions: mapCommon.BuildingOverlayParams =\n          {\n            // 3D建筑的范围参数（点为顺时针绘制）\n            points: points,\n            // 3D建筑的高度\n            totalHeight: 51,\n            // 3D建筑的选中楼层高度\n            floorBottomHeight: 33,\n            // 3D建筑的顶部颜色\n            topFaceColor: 0xffa4b8f7,\n            // 3D建筑的侧面颜色\n            sideFaceColor: 0x44a4b8f7,\n            // 3D建筑的选中楼层颜色\n            floorColor: 0xff000000,\n            // 3D建筑的展示层级\n            showLevel: 14,\n            // 3D建筑选中楼层从底部升起的动画时长\n            animationDuration: 5000,\n            // 3D建筑侧面的纹理\n            sideTexture: { image: $r(\"app.media.side_tex\"), height: 3, width: 3 },\n            // 3D建筑选中楼层的纹理\n            floorTexture: { image: $r(\"app.media.floor_tex\"), height: 3, width: 3 }\n          }\n        let cameraUpdate = map.newCameraPosition({\n          target: {\n            latitude: 31.984794,\n            longitude: 118.765865\n          },\n          zoom: 18, tilt: 70\n        });\n        // 将地图镜头移动到3D建筑区域\n        this.mapController?.moveCamera(cameraUpdate);\n        // 新建3D建筑\n        this.buildingOverlay = await this.mapController?.addBuildingOverlay(buildingOverlayOptions);\n      }\n    }\n  }\n\n  build() {\n    Stack() {\n      Column() {\n        MapComponent({\n          mapOptions: this.mapOptions,\n          mapCallback: this.callback,\n        }).width('100%').height('100%');\n      }.width('100%')\n    }.height('100%')\n  }\n} 
