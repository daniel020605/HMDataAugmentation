拉起金融类应用（startAbilityByType）
本章节介绍如何拉起金融类应用扩展面板。
金融类应用扩展面板参数说明
startAbilityByType接口中type字段为finance，对应的wantParam参数：
拉起方开发步骤
 导入相关模块。 import { common } from '@kit.AbilityKit'; 构造接口参数并调用startAbilityByType接口。 let context = getContext(this) as common.UIAbilityContext;\nlet wantParam: Record<string, Object> = {\n  'sceneType': 1,\n  \"bankCardNo\": '123456789'\n};\nlet abilityStartCallback: common.AbilityStartCallback = {\n  onError: (code: number, name: string, message: string) => {\n    console.log(`onError code ${code} name: ${name} message: ${message}`);\n  },\n  onResult: (result)=>{\n    console.log(`onResult result: ${JSON.stringify(result)}`);\n  }\n}\n\ncontext.startAbilityByType(\"finance\", wantParam, abilityStartCallback, \n    (err) => {\n        if (err) {\n            console.error(`startAbilityByType fail, err: ${JSON.stringify(err)}`);\n        } else {\n            console.log(`success`);\n        }\n}); 效果示例图：  
目标方开发步骤
 在module.json5中配置uris，步骤如下：  设置linkFeature属性以声明当前应用支持的特性功能，从而系统可以从设备已安装应用中找到当前支持该特性的应用，取值范围如下：     取值 含义    Transfer 声明应用支持转账汇款功能   CreditCardRepayment 声明应用支持信用卡还款功能    设置scheme、host、port、path/pathStartWith属性，与Want中URI相匹配，以便区分不同功能。  {\n  \"abilities\": [\n      {\n      \"skills\": [\n          {\n          \"uris\": [\n              {\n              \"scheme\": \"finance\", // 这里仅示意，应用需确保这里声明的的uri能被外部正常拉起\n              \"host\": \"transfer\",\n              \"path\": \"\",\n              \"linkFeature\": \"Transfer\" // 声明应用支持转账汇款功能\n              },\n              {\n              \"scheme\": \"finance\", // 这里仅示意，应用需确保这里声明的的uri能被外部正常拉起\n              \"host\": \"credit_card_repayment\",\n              \"path\": \"\",\n              \"linkFeature\": \"CreditCardRepayment\" // 声明应用支持信用卡还款功能\n              }\n          ]\n          }\n      ]\n      }\n  ]\n} 解析面板传过来的参数并做对应处理。 UIAbility.onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void 在参数want.uri中会携带目标方配置的linkFeature对应的uri; 在参数want.parameters中会携带Caller方传入的参数，如下表所示：     参数名 类型 必填 说明    bankCardNo string 否 银行卡卡号    应用可根据linkFeature中定义的特性功能，比如转账汇款和信用卡还款，结合接收到的uri开发不同的样式页面。 
完整示例：
import { AbilityConstant, UIAbility, Want } from '@kit.AbilityKit';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\nimport { window } from '@kit.ArkUI';\n\nconst TAG = 'EntryAbility'\n\nexport default class EntryAbility extends UIAbility {\n    windowStage: window.WindowStage | null = null;\n\n    uri?: string;\n    bankCardNo?: string;\n\n    onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n        hilog.info(0x0000, TAG, `onCreate, want=${JSON.stringify(want)}`);\n        super.onCreate(want, launchParam);\n        this.parseWant(want);\n    }\n\n    onNewWant(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n        hilog.info(0x0000, TAG, `onNewWant, want=${JSON.stringify(want)}`);\n        super.onNewWant(want, launchParam);\n        this.parseWant(want);\n        if (!this.windowStage) {\n            hilog.error(0x0000, TAG, 'windowStage is null');\n            this.context.terminateSelf();\n            return;\n        }\n        this.loadPage(this.windowStage);\n    }\n\n    private parseWant(want: Want): void {\n        this.uri = want.uri as string | undefined;\n        this.bankCardNo = want.parameters?.bankCardNo as string | undefined;\n    }\n\n    private loadPage(windowStage: window.WindowStage): void {\n        hilog.info(0x0000, TAG, `loadPage, uri=${this.uri}`);\n        if (this.uri === 'finance://transfer') {\n            // 构建转账场景参数\n            const storage: LocalStorage = new LocalStorage({\n                \"bankCardNo\": this.bankCardNo\n            } as Record<string, Object>);\n            // 拉起转账页面\n            windowStage.loadContent('pages/TransferPage', storage)\n        } else if (this.uri === 'finance://credit_card_repayment') {\n            // 构建信用卡还款场景参数\n            const storage: LocalStorage = new LocalStorage({\n                \"bankCardNo\": this.bankCardNo\n            } as Record<string, Object>);\n            // 拉起信用卡还款页面\n            windowStage.loadContent('pages/CreditCardRepaymentPage', storage)\n        } else {\n            // 默认拉起首页\n            windowStage.loadContent('pages/Index', (err) => {\n                if (err.code) {\n                    hilog.error(0x0000, TAG, 'Failed to load the content. Cause: %{public}s',\n                        JSON.stringify(err) ?? '');\n                    return;\n                }\n                hilog.info(0x0000, TAG, 'Succeeded in loading the content.');\n            });\n        }\n    }\n\n    onDestroy(): void {\n        hilog.info(0x0000, TAG, `onDestroy`);\n    }\n\n    onWindowStageCreate(windowStage: window.WindowStage): void {\n        hilog.info(0x0000, TAG, `onWindowStageCreate`);\n        this.windowStage = windowStage;\n        this.loadPage(this.windowStage);\n    }\n\n    onWindowStageDestroy(): void {\n        hilog.info(0x0000, TAG, '%{public}s', 'Ability onWindowStageDestroy');\n    }\n\n    onForeground(): void {\n        hilog.info(0x0000, TAG, '%{public}s', 'Ability onForeground');\n    }\n\n    onBackground(): void {\n        hilog.info(0x0000, TAG, '%{public}s', 'Ability onBackground');\n    }\n}
