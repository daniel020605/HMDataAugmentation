Canvas对象
Canvas组件提供画布，用于自定义绘制图形。具体用法请参考CanvasRenderingContext2D对象。
创建Canvas组件
在pages/index目录下的hml文件中创建一个Canvas组件。
<!-- xxx.hml -->\n<div class=\"container\">\n  <canvas></canvas>\n</div>
/* xxx.css */\n.container{\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #F1F3F5;\n}\ncanvas{\n  background-color: #00ff73;\n}
 Canvas组件默认背景色与父组件的背景色一致。 Canvas默认宽高为width: 300px，height: 150px。 
添加样式
Canvas组件设置宽（width）、高（height）、背景色（background-color）及边框样式（border）。
<!-- xxx.hml -->\n<div class=\"container\">\n  <canvas></canvas>\n</div>
/* xxx.css */\n.container{\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #F1F3F5;\n  width: 100%;\n  height: 100%;\n}\ncanvas{\n  width: 500px;\n  height: 500px;  \n  background-color: #fdfdfd;  \n  border: 5px solid red;\n}
添加事件
Canvas添加长按事件，长按后可获取Canvas组件的dataUrl值（toDataURL方法返回的图片信息），打印在下方文本区域内。
<!-- xxx.hml -->\n<div class=\"container\">\n  <canvas ref=\"canvas1\" onlongpress=\"getUrl\"></canvas>\n  <text>dataURL</text>\n  <text class=\"content\">{{dataURL}}</text>\n</div>
/* xxx.css */\n.container{\n  width:100%;\n  height:100%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #F1F3F5;\n  }\n  canvas{  \n    width: 500px;  \n    height: 500px;\n    background-color: #fdfdfd;\n    border: 5px solid red;\n    margin-bottom: 50px;\n}\n.content{\n  border: 5px solid blue;\n  padding: 10px;\n  width: 90%;\n  height: 400px; \n  overflow: scroll;\n}
// xxx.js\nimport promptAction from '@ohos.promptAction';\nexport default {\n  data:{\n    dataURL:null,\n  },\n  onShow(){\n    let el = this.$refs.canvas1;\n    let ctx = el.getContext(\"2d\"); \n    ctx.strokeRect(100,100,300,300);\n  },\n  getUrl(){\n    let el = this.$refs.canvas1\n    let dataUrl = el.toDataURL()\n    this.dataURL = dataUrl;\n    promptAction.showToast({duration:2000,message:\"long press,get dataURL\"})\n  }\n}
画布不支持在onInit和onReady中进行创建。
