switch开发指导
switch为开关选择器，切换开启或关闭状态。具体用法请参考switch。
创建switch组件
在pages/index目录下的hml文件中创建一个switch组件。
<!-- xxx.hml -->\n<div class=\"container\">\n    <switch checked=\"true\"></switch>\n</div>
/* xxx.css */\n.container {\n  flex-direction: column;\n  background-color: #F1F3F5;\n}
添加属性和方法
switch组件通过textoff和showtext属性设置文本选中和未选中时的状态。设置checked属性值为true（组件为打开状态）。添加change事件，当组件状态改变时触发，触发后执行switchChange函数获取组件当前状态（关闭/打开）。
<!-- xxx.hml -->\n<div class=\"container\">\n  <switch showtext=\"true\" texton=\"open\" textoff=\"close\" checked=\"true\" @change=\"switchChange\"></switch>\n</div>
/* xxx.css */\n.container {\n  width: 100%;\n  height: 100%; \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #F1F3F5;\n}\nswitch {\n  texton-color: #002aff;\n  textoff-color: silver;\n  text-padding: 20px; \n  font-size: 50px;\n}
// xxx.js\nimport promptAction from '@ohos.promptAction';\nexport default {\n  switchChange(e){\n    if(e.checked){\n      promptAction.showToast({\n        message: \"open\"\n      });\n    }else{\n      promptAction.showToast({\n        message: \"close\"\n      });\n    }\n  }\n}
当showtext属性值设置为true时，texton和textoff设置的文本才会生效。
场景示例
在下面示例中设置开关为打开状态（使用默认收货地址），关闭开关后页面显示选择地址按钮，点击按钮即可改变收货地址。
实现方法：创建switch开关，设置checked属性为true，通过数据绑定改变收货地址。设置display属性（默认为none），当关闭开关改变display属性值为flex后显示地址模块，点击按钮改变颜色。
<!-- xxx.hml -->\n<div class=\"container\">\n  <div class=\"change\">\n    <text>Choose default address:</text>\n    <switch showtext=\"true\" texton=\"on\" textoff=\"off\" checked=\"true\" @change=\"switchChange\"></switch>\n  </div>\n  <div class=\"content\">\n    <text class=\"address\"><span>Shipping address:</span><span class=\"textSpan\">{{address}}</span></text>\n  </div>\n  <div class=\"myAddress\" style=\"display: {{addressDisplay}};\">\n    <text style=\"font-size: 30px;margin-bottom: 50px;\">Choose an address:</text>\n    <text class=\"addressText\" style=\"background-color: {{item == address?'#0fabe7':''}};color: {{item == address?'white':'black'}};\" \n    for=\"item in addressList\"@click=\"changeAddress({{$idx}}})\">{{item}}</text>\n  </div>\n</div>
/* xxx.css */\n.container {\n  width: 100%;\n  height: 100%; \n  background-color: #F1F3F5;\n  flex-direction: column;\n  padding: 50px;\n}\n.change{\n  margin-top: 20%;\n  width: 100%;\n  justify-content: center;\n}\nswitch{\n  texton-color: #002aff;\n  textoff-color: silver;\n  text-padding: 20px;\n}\n.content{\n  width: 70%;\n  text-align: center;\n  flex-direction: column;\n  border: 1px solid #002aff;\n  margin-left: 15%;\n  text-align: center;\n}\n.address{\n  width: 100%;\n  height: 100px;\n  line-height: 100px;\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 50px;\n}\n.textSpan{\n  color: #0aa9f1;\n}\n.myAddress{\n  flex-direction: column;\n  margin-top: 50px;\n}\n.addressText{\n  margin-left: 35%;\n  width: 30%;\n  height: 75px;\n  text-align: center;\n  color: white;\n  margin-bottom: 30px;\n  border-radius: 10px;\n  border: 1px solid #0fabe7;\n}
// xxx.js\nexport default {\n  data:{\n    address: '',\n    addressDisplay: 'none',\n    addressList: ['family','company','commissary'],\n  },\n  onInit(){\n    // 初始化默认地址为地址列表中的第一个\n    this.address = this.addressList[0];\n  },\n  switchChange(e){\n    if(e.checked){\n        this.addressDisplay = \"none\";\n    }else{\n        this.addressDisplay = \"flex\";\n    }\n  },\n  changeAddress(i){\n    this.address= this.addressList[i];\n  }\n}
