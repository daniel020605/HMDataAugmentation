获取文件属性标签
场景介绍
Enterprise Data Guard Kit为应用提供获取文件属性标签的能力，内核管控模块根据管控策略和文件属性标签对文件实行管控。
接口说明
详细接口说明可参考接口文档。
接口名
描述
queryFileTag(path: string, callback: AsyncCallback<FileTagInfo>): void
使用Callback方式获取文件属性标签。
queryFileTag(path: string): Promise<FileTagInfo>
使用Promise方式获取文件属性标签。
开发步骤
 导入模块。import { fileGuard } from '@kit.EnterpriseDataGuardKit'; 初始化FileGuard对象guard，调用接口queryFileTag，获取文件属性标签。        通过回调函数方式，获取文件属性标签。  import { BusinessError } from '@kit.BasicServicesKit';\n\nfunction queryFileTagCallback() {\n  let guard: fileGuard.FileGuard = new fileGuard.FileGuard();\n  let path: string = '/data/service/el2/test/test.txt';\n  guard.queryFileTag(path, (err: BusinessError, data: fileGuard.FileTagInfo) => {\n    if (err) {\n      console.error(`Failed to query file tag. Code: ${err.code}, message: ${err.message}.`);\n      return;\n    }\n    console.info(`Succeeded in querying file tag.`);\n  });\n}  通过Promise方式，获取文件属性标签。  import { BusinessError } from '@kit.BasicServicesKit';\n\nfunction queryFileTagPromise() {\n  let guard: fileGuard.FileGuard = new fileGuard.FileGuard();\n  let path: string = '/data/service/el2/test/test.txt';\n  guard.queryFileTag(path).then((data: fileGuard.FileTagInfo) => {\n    console.info(`Succeeded in querying file tag.`);\n  }).catch((err: BusinessError) => {\n    console.error(`Failed to query file tag. Code: ${err.code}, message: ${err.message}.`);\n  });\n} 调用函数，查看打印信息。 
