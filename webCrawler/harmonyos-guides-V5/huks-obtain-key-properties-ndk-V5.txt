获取密钥属性(C/C++)
HUKS提供了接口供业务获取指定密钥的相关属性。在获取指定密钥属性前，需要确保已在HUKS中生成或导入持久化存储的密钥。
在CMake脚本中链接相关动态库
target_link_libraries(entry PUBLIC libhuks_ndk.z.so)
开发步骤
 构造对应参数。  keyAlias：密钥别名，封装成OH_Huks_Blob结构，密钥别名最大长度为64字节。 paramSetIn：预留参数，暂不需要处理，传空即可。 paramSetOut：用于放置获取到的参数集结果，为OH_Huks_ParamSet类型对象，需要业务提前申请好内存，需申请足够容纳获取到的密钥属性集的内存大小。  调用接口OH_Huks_GetKeyItemParamSet，传入上述参数。 返回值为成功码/错误码，获取成功后，从参数集中读取需要的参数。 
#include \"huks/native_huks_api.h\"\n#include \"huks/native_huks_param.h\"\n#include \"napi/native_api.h\"\n#include <string.h>\nstatic napi_value GetKeyParamSet(napi_env env, napi_callback_info info)\n{\n    /* 1. 参数构造：确定密钥别名 */\n    const char *alias = \"test_key\";\n    struct OH_Huks_Blob aliasBlob = { .size = (uint32_t)strlen(alias), .data = (uint8_t *)alias };\n    /* 构造参数：为参数集申请内存 */\n    struct OH_Huks_ParamSet *outParamSet = (struct OH_Huks_ParamSet *)malloc(512); // 请业务按实际情况评估大小进行申请\n    if (outParamSet == nullptr) {\n        return nullptr;\n    }\n    outParamSet->paramSetSize = 512;\n    struct OH_Huks_Result ohResult;\n    do {\n        /* 2. 获取密钥属性集 */\n        ohResult = OH_Huks_GetKeyItemParamSet(&aliasBlob, nullptr, outParamSet);\n        if (ohResult.errorCode != OH_HUKS_SUCCESS) {\n            break;\n        }\n        /* 3. 从参数集中读取参数，以OH_HUKS_TAG_PURPOSE为例 */\n        OH_Huks_Param *purposeParam = nullptr; // 无需申请内存，获取后指针指向该参数在参数集中所处内存地址\n        ohResult = OH_Huks_GetParam(outParamSet, OH_HUKS_TAG_PURPOSE, &purposeParam);\n        if (ohResult.errorCode != OH_HUKS_SUCCESS) {\n            break;\n        }\n    } while (0);\n    OH_Huks_FreeParamSet(&outParamSet);\n    napi_value ret;\n    napi_create_int32(env, ohResult.errorCode, &ret);\n    return ret;\n}
