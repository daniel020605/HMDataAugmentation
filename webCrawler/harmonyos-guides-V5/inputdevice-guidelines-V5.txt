输入设备开发指导
场景介绍
输入设备管理提供设备热插拔监听、查询指定设备的键盘类型等能力。使用场景例如：当用户需要输入文本时，输入法会根据当前是否插入了物理键盘来决定是否弹出虚拟键盘，开发者可以通过监听设备热插拔判断是否有物理键盘插入。
导入模块
import { inputDevice } from '@kit.InputKit';
接口说明
输入设备管理常用接口如下表所示，接口详细介绍请参考ohos.multimodalInput.inputDevice文档。
虚拟键盘弹出检测
当用户需要输入文本时，输入法会根据当前是否插入了物理键盘来决定是否弹出虚拟键盘，开发者可以通过监听设备热插拔，判断是否有物理键盘插入。
[h2]开发步骤
 调用getDeviceList方法查询所有连接的输入设备，调用getKeyboardType方法遍历所有连接的设备，判断是否有物理键盘，若有则标记已有物理键盘连接，该步骤确保监听设备热插拔之前，检测所有插入的输入设备。 调用on接口监听输入设备热插拔事件，若监听到有物理键盘插入，则标记已有物理键盘连接；若监听到有物理键盘拔掉，则标记没有物理键盘连接。 
import { inputDevice } from '@kit.InputKit';\n\nlet isPhysicalKeyboardExist = true;\ntry {\n  // 1.获取设备列表，判断是否有物理键盘连接\n  inputDevice.getDeviceList().then(data => {\n    for (let i = 0; i < data.length; ++i) {\n      inputDevice.getKeyboardType(data[i]).then(type => {\n        if (type === inputDevice.KeyboardType.ALPHABETIC_KEYBOARD) {\n          // 物理键盘已连接\n          isPhysicalKeyboardExist = true;\n        }\n      });\n    }\n  });\n  // 2.监听设备热插拔\n  inputDevice.on(\"change\", (data) => {\n    console.log(`Device event info: ${JSON.stringify(data)}`);\n    inputDevice.getKeyboardType(data.deviceId).then((type) => {\n      console.log(\"The keyboard type is: \" + type);\n      if (type === inputDevice.KeyboardType.ALPHABETIC_KEYBOARD && data.type == 'add') {\n        // 物理键盘已插入\n        isPhysicalKeyboardExist = true;\n      } else if (type == inputDevice.KeyboardType.ALPHABETIC_KEYBOARD && data.type == 'remove') {\n        // 物理键盘已拔掉\n        isPhysicalKeyboardExist = false;\n      }\n    });\n  });\n} catch (error) {\n  console.log(`Execute failed, error: ${JSON.stringify(error, [`code`, `message`])}`);\n}
