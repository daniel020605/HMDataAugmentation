使用cancel取消网络请求 (C/C++)
场景介绍
取消指定或正在进行的会话请求。
接口说明
具体API说明详见接口文档。
接口名
描述
uint32_t HMS_Rcp_CancelRequest(Rcp_Session *session, const Rcp_Request *request);
取消指定或所有正在进行的会话请求。返回为空。
使用示例
 CPP侧导入模块。#include \"RemoteCommunicationKit/rcp.h\"\n#include <stdio.h>  CMakeLists.txt中添加以下lib。（具体请见C API开发准备）。librcp_c.so  创建会话，会话发起请求。“http://www.example.com”请根据实际情况替换为想要请求的URL地址。在使用fetch请求后，使用HMS_Rcp_CancelRequest取消网路请求。销毁request并关闭session。bool g_callback = false;\nvoid ResponseCallback(void *usrCtx, Rcp_Response *response, uint32_t errCode)\n{\n    (void *)usrCtx;\n    if (response != NULL) {\n        printf(\"Response status: %d\\n\", response->statusCode);\n    } else {\n        printf(\"Fetch failed: errCode: %u\\n\", errCode);\n    }\n    if (response != NULL) {\n        response->destroyResponse(response);\n    }\n    g_callback = true;\n}\n\nint main() {\n    const char *kHttpServerAddress = \"http://www.example.com/delete\";\n    Rcp_Request *request = HMS_Rcp_CreateRequest(kHttpServerAddress);\n    request->method = RCP_METHOD_DELETE;\n    uint32_t errCode = 0;\n    // 创建session\n    Rcp_Session *session = HMS_Rcp_CreateSession(NULL, &errCode);\n    // 配置请求回调\n    Rcp_ResponseCallbackObject responseCallback = {ResponseCallback, NULL};\n    // 发起fetch请求\n    errCode = HMS_Rcp_Fetch(session, request, &responseCallback);\n    // 取消请求，处理errCode\n    errCode = HMS_Rcp_CancelRequest(session, request);\n    // 在退出前取消可能还在执行的requests \n    errCode = HMS_Rcp_CancelSession(session);\n    // 清理request\n    HMS_Rcp_DestroyRequest(request);\n    // 关闭session\n    errCode = HMS_Rcp_CloseSession(&session);\n    // 处理errCode\n    return 0;\n}  
