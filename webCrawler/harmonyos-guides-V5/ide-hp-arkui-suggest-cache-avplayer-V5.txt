@performance/hp-arkui-suggest-cache-avplayer
建议缓存AVPlayer实例減少起播时延。
音视频起播速度慢的场景下，建议优先修改。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@performance/hp-arkui-suggest-cache-avplayer\": \"warn\",\n  }\n}
选项
该规则无需配置额外选项。
正例
import media from '@ohos.multimedia.media';\n\n@Entry\n@Component\nstruct MyComponent{\n  private avPlayer: media.AVPlayer | undefined = undefined;\n  private avPlayerManager: AVPlayerManager = AVPlayerManager.getInstance();\n\n  aboutToAppear(): void {\n    this.avPlayerManager.switchPlayer();\n    this.avPlayer = this.avPlayerManager.getCurrentPlayer();\n  }\n\n  aboutToDisappear(): void {\n    this.avPlayerManager.resetCurrentPlayer();\n    this.avPlayer = undefined;\n  }\n\n  build() {\n    // 组件布局\n  }\n}\n\nclass AVPlayerManager {\n  private static instance?: AVPlayerManager;\n\n  private player1?: media.AVPlayer;\n  private player2?: media.AVPlayer;\n  private currentPlayer?: media.AVPlayer;\n\n  public static getInstance(): AVPlayerManager {\n    if (!AVPlayerManager.instance) {\n      AVPlayerManager.instance = new AVPlayerManager();\n    }\n    return AVPlayerManager.instance;\n  }\n\n  async AVPlayerManager() {\n    this.player1 = await media.createAVPlayer();\n    this.player2 = await media.createAVPlayer();\n  }\n\n  /**\n   * 切换页面时切换AVPlayer实例\n   */\n  switchPlayer(): void {\n    if (this.currentPlayer === this.player1) {\n      this.currentPlayer = this.player2;\n    } else {\n      this.currentPlayer = this.player1;\n    }\n  }\n\n  getCurrentPlayer(): media.AVPlayer | undefined {\n    return this.currentPlayer;\n  }\n\n  /**\n   * 使用reset方法重置AVPlayer实例\n   */\n  resetCurrentPlayer(): void {\n    this.currentPlayer?.pause(() => {\n      this.currentPlayer?.reset();\n    });\n  }\n}
反例
import media from '@ohos.multimedia.media';\n\n@Entry\n@Component\nstruct MyComponent{\n  private avPlayer: media.AVPlayer | undefined = undefined;\n\n  aboutToAppear(): void {\n    // 页面创建时初始化AVPlayer实例\n    media.createAVPlayer().then((ret) => {\n      this.avPlayer = ret;\n    });\n  }\n\n  aboutToDisappear(): void {\n    // 离开页面时销毁AVPlayer实例\n    if (this.avPlayer) {\n      this.avPlayer.release();\n    }\n    this.avPlayer = undefined;\n  }\n\n  build() {\n    // 组件布局\n  }\n}
规则集
plugin:@performance/recommended
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
