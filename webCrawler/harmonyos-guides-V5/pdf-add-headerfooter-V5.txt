添加、删除页眉页脚
PDF Kit支持对指定页面添加、删除页眉页脚。页眉页脚信息包含文字、日期和页码等相关内容，并可设置字体大小、颜色和间距等相关样式，具体属性参考HeaderFooterInfo。如下图：
接口说明
接口名
描述
addHeaderFooter(info: HeaderFooterInfo, startIndex: number, endIndex: number, oddPages: boolean, evenPages: boolean): void
插入PDF文档页眉页脚。
removeHeaderFooter(): boolean
删除PDF文档页眉页脚。
addHeaderFooter方法属于耗时业务，需要遍历每一页去添加页眉页脚，添加页面较多时建议放到线程里去处理。
示例代码
 调用loadDocument方法，加载PDF文档。 实例化页眉页脚HeaderFooterInfo类，并设置相关属性，包括字体大小、颜色和间距等。 调用addHeaderFooter方法，添加页眉页脚到页面中。 保存PDF文档到应用沙箱。 
import { pdfService } from '@kit.PDFKit';\nimport { common } from '@kit.AbilityKit';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\nimport { font } from '@kit.ArkUI';\n\n@Entry\n@Component\nstruct PdfPage {\n  private pdfDocument: pdfService.PdfDocument = new pdfService.PdfDocument();\n  private context = getContext() as common.UIAbilityContext;\n\n  build() {\n    Column() {\n      Button('addHeaderFooter').onClick(async () => {\n        // 确保沙箱目录有input.pdf文档\n        let filePath = this.context.filesDir + '/input.pdf';\n        let res = this.pdfDocument.loadDocument(filePath);\n        if (res === pdfService.ParseResult.PARSE_SUCCESS) {\n          let hfInfo: pdfService.HeaderFooterInfo = new pdfService.HeaderFooterInfo();\n          hfInfo.fontInfo = new pdfService.FontInfo();\n          // 确保字体路径存在\n          hfInfo.fontInfo.fontPath = font.getFontByName('HarmonyOS Sans')?.path;\n          // 如果不知道字体的具体名称，可以为空字符串\n          hfInfo.fontInfo.fontName = '';\n          hfInfo.textSize = 10;\n          hfInfo.charset = pdfService.CharsetType.PDF_FONT_DEFAULT_CHARSET;\n          hfInfo.underline = false;\n          hfInfo.textColor = 0x00000000;\n          hfInfo.leftMargin = 1.0;\n          hfInfo.topMargin = 40.0;\n          hfInfo.rightMargin = 1.0;\n          hfInfo.bottomMargin = 40.0;\n          hfInfo.headerLeftText = 'left H <<dd.mm.yyyy>> <<1/n>>';\n          hfInfo.headerCenterText = 'center H <<m/d/yyyy>> <<1/n>>';\n          hfInfo.headerRightText = 'right H <<m/d>><<1>>';\n          hfInfo.footerLeftText = 'left F <<m/d>><<1>>';\n          hfInfo.footerCenterText = 'center F <<m/d>><<1>>';\n          hfInfo.footerRightText = 'right F <<dd.mm.yyyy>><<1>>';\n          this.pdfDocument.addHeaderFooter(hfInfo, 1, 5, true, true);\n          let outPdfPath = this.context.filesDir + '/testAddHeaderFooter.pdf';\n          let result = this.pdfDocument.saveDocument(outPdfPath);\n          hilog.info(0x0000, 'PdfPage', 'addHeaderFooter %{public}s!', result ? 'success' : 'fail');\n        }\n        this.pdfDocument.releaseDocument();\n      })\n      Button('removeHeaderFooter').onClick(async () => {\n        let filePath = this.context.filesDir + '/testAddHeaderFooter.pdf';\n        let res = this.pdfDocument.loadDocument(filePath);\n        if (res === pdfService.ParseResult.PARSE_SUCCESS && this.pdfDocument.hasHeaderFooter()) {\n          let removeResult = this.pdfDocument.removeHeaderFooter();\n          if (removeResult) {\n            let outPdfPath = this.context.filesDir + '/removeHeaderFooter.pdf';\n            let result = this.pdfDocument.saveDocument(outPdfPath);\n            hilog.info(0x0000, 'PdfPage', 'removeHeaderFooter %{public}s!', result ? 'success' : 'fail');\n          }\n        }\n        this.pdfDocument.releaseDocument();\n      })\n    }\n  }\n}
