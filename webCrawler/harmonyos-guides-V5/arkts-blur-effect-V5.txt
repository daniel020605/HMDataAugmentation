模糊
动画效果可以丰富界面的细节，提升UI界面的真实感和品质感。例如，模糊和阴影效果可以让物体看起来更加立体，使得动画更加生动。ArkUI提供了丰富的效果接口，开发者可快速打造出精致、个性化的效果。本章中主要对常用的模糊、阴影和色彩效果等效果接口进行了介绍。
模糊可以用来体现界面空间的纵深感，区分前后元素的层级关系。
以上接口是实时模糊接口，会每帧进行实时渲染，性能负载较高。当模糊内容和模糊半径都不需要变化时，建议使用静态模糊接口blur。
使用backdropBlur为组件添加背景模糊
@Entry\n@Component\nstruct BlurEffectsExample {\n  build() {\n    Column({ space: 10 }) {\n      Text('backdropBlur')\n        .width('90%')\n        .height('90%')\n        .fontSize(20)\n        .fontColor(Color.White)\n        .textAlign(TextAlign.Center)\n        .backdropBlur(10)// 对背景进行模糊\n        .backgroundImage($r('app.media.share'))\n        .backgroundImageSize({ width: 400, height: 300 })\n    }\n    .width('100%')\n    .height('50%')\n    .margin({ top: 20 })\n  }\n}
使用blur为组件添加内容模糊
@Entry\n@Component\nstruct Index1 {\n  @State radius: number = 0;\n  @State text: string = '';\n  @State y: string = '手指不在屏幕上';\n\n  aboutToAppear() {\n    this.text = \"按住屏幕上下滑动\\n\" + \"当前手指所在y轴位置 ： \" + this.y +\n      \"\\n\" + \"当前图片模糊程度为 : \" + this.radius;\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.SpaceBetween }) {\n      Text(this.text)\n        .height(200)\n        .fontSize(20)\n        .fontWeight(FontWeight.Bold)\n        .fontFamily(\"cursive\")\n        .fontStyle(FontStyle.Italic)\n      Image($r(\"app.media.wall\"))\n        .blur(this.radius)// 使用blur接口为照片组件添加内容模糊效果\n        .height('100%')\n        .width(\"100%\")\n        .objectFit(ImageFit.Cover)\n    }.height('100%')\n    .width(\"100%\")\n    .onTouch((event?: TouchEvent) => {\n      if (event) {\n        if (event.type === TouchType.Move) {\n          this.y = Number(event.touches[0].y.toString()).toString();\n          this.radius = Number(this.y) / 10; // 根据跟手过程中的滑动距离修改模糊半径，配合模糊接口，形成跟手模糊效果\n        }\n        if (event.type === TouchType.Up) {\n          this.radius = 0;\n          this.y = '手指离开屏幕';\n        }\n      }\n      this.text = \"按住屏幕上下滑动\\n\" + \"当前手指所在y轴位置 ： \" + this.y +\n        \"\\n\" + \"当前图片模糊程度为 : \" + this.radius;\n    })\n  }\n}
使用backgroundBlurStyle为组件添加背景模糊效果
@Entry\n@Component\nstruct BackDropBlurStyleDemo {\n  build() {\n    Grid() {\n      GridItem() {\n        Column() {\n          Column() {\n            Text('原图')\n              .fontSize(20)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n\n          Text('原图')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('Thin')\n              .fontSize(20)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          // BlurStyle.Thin: 为组件添加轻薄材质模糊效果\n          // ThemeColorMode.LIGHT: 固定使用浅色模式效果\n          // AdaptiveColor.DEFAULT: 不使用取色模糊，使用默认的颜色作为蒙版颜色\n          // scale: 背景材质模糊效果程度，默认值是1\n          .backgroundBlurStyle(BlurStyle.Thin, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('Thin')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('Regular')\n              .fontSize(20)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          .backgroundBlurStyle(BlurStyle.Regular, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('Regular')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('Thick')\n              .fontSize(20)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          .backgroundBlurStyle(BlurStyle.Thick, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('Thick')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('BACKGROUND_THIN')\n              .fontSize(12)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          .backgroundBlurStyle(BlurStyle.BACKGROUND_THIN, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('BACKGROUND_THIN')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('BACKGROUND_REGULAR')\n              .fontSize(12)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          .backgroundBlurStyle(BlurStyle.BACKGROUND_REGULAR, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('BACKGROUND_REGULAR')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('BACKGROUND_THICK')\n              .fontSize(12)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          .backgroundBlurStyle(BlurStyle.BACKGROUND_THICK, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('BACKGROUND_THICK')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('BACKGROUND_ULTRA_THICK')\n              .fontSize(12)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          .backgroundBlurStyle(BlurStyle.BACKGROUND_ULTRA_THICK, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('BACKGROUND_ULTRA_THICK')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n    }\n    .columnsTemplate('1fr 1fr')\n    .rowsTemplate('1fr 1fr 1fr 1fr')\n    .width('100%')\n    .height('100%')\n    .margin({ top: 40 })\n  }\n}
使用foregroundBlurStyle为组件添加内容模糊效果
@Entry\n@Component\nstruct ForegroundBlurStyleDemo {\n  build() {\n    Grid() {\n      GridItem() {\n        Column() {\n          Column() {\n            Text('原图')\n              .fontSize(20)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n\n          Text('原图')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('Thin')\n              .fontSize(20)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          // BlurStyle.Thin: 为组件添加轻薄材质模糊效果\n          // ThemeColorMode.LIGHT: 固定使用浅色模式效果\n          // AdaptiveColor.DEFAULT: 不使用取色模糊，使用默认的颜色作为蒙版颜色\n          // scale: 背景材质模糊效果程度，默认值是1\n          .foregroundBlurStyle(BlurStyle.Thin, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('Thin')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('Regular')\n              .fontSize(20)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          .foregroundBlurStyle(BlurStyle.Regular, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('Regular')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('Thick')\n              .fontSize(20)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          .foregroundBlurStyle(BlurStyle.Thick, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('Thick')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('BACKGROUND_THIN')\n              .fontSize(12)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          .foregroundBlurStyle(BlurStyle.BACKGROUND_THIN, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('BACKGROUND_THIN')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('BACKGROUND_REGULAR')\n              .fontSize(12)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          .foregroundBlurStyle(BlurStyle.BACKGROUND_REGULAR, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('BACKGROUND_REGULAR')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('BACKGROUND_THICK')\n              .fontSize(12)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          .foregroundBlurStyle(BlurStyle.BACKGROUND_THICK, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('BACKGROUND_THICK')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n\n      GridItem() {\n        Column() {\n          Column() {\n            Text('BACKGROUND_ULTRA_THICK')\n              .fontSize(12)\n              .fontColor(Color.White)\n              .textAlign(TextAlign.Center)\n              .width('100%')\n              .height('100%')\n          }\n          .height(100)\n          .aspectRatio(1)\n          .borderRadius(10)\n          .backgroundImage($r('app.media.share'))\n          .foregroundBlurStyle(BlurStyle.BACKGROUND_ULTRA_THICK, {\n            colorMode: ThemeColorMode.LIGHT,\n            adaptiveColor: AdaptiveColor.DEFAULT,\n            scale: 0.1\n          })\n\n          Text('BACKGROUND_ULTRA_THICK')\n            .fontSize(12)\n            .fontColor(Color.Black)\n        }\n        .height('100%')\n        .justifyContent(FlexAlign.Start)\n      }\n      .width(200)\n      .height(200)\n    }\n    .columnsTemplate('1fr 1fr')\n    .rowsTemplate('1fr 1fr 1fr 1fr')\n    .width('100%')\n    .height('100%')\n    .margin({ top: 40 })\n  }\n}
使用motionBlur为组件添加运动模糊效果
import { curves } from '@kit.ArkUI';\n\n@Entry\n@Component\nstruct motionBlurTest {\n  @State widthSize: number = 400\n  @State heightSize: number = 320\n  @State flag: boolean = true\n  @State radius: number = 0\n  @State x: number = 0\n  @State y: number = 0\n\n  build() {\n    Column() {\n      Column() {\n        Image($r('app.media.testImg'))\n          .width(this.widthSize)\n          .height(this.heightSize)\n          .onClick(() => {\n            this.radius = 5;\n            this.x = 0.5;\n            this.y = 0.5;\n            if (this.flag) {\n              this.widthSize = 100;\n              this.heightSize = 80;\n            } else {\n              this.widthSize = 400;\n              this.heightSize = 320;\n            }\n            this.flag = !this.flag;\n          })\n          .animation({\n            duration: 2000,\n            curve: curves.springCurve(10, 1, 228, 30),\n            onFinish: () => {\n              this.radius = 0;\n            }\n          })\n          .motionBlur({ radius: this.radius, anchor: { x: this.x, y: this.y } })\n      }\n    }.width('100%').margin({ top: 5 })\n  }\n}
