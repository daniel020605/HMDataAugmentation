hidumper
HiDumper为开发、测试人员提供统一的系统信息获取工具，可帮助使用者分析，定位问题。
环境要求
根据hdc命令行工具指导，完成环境准备。 正常连接设备。 
命令行说明
常用命令
查看帮助命令。 hidumper -h  使用样例： $ hidumper -h\nusage:\n-h                          |help text for the tool\n-lc                         |a list of system information clusters\n-ls                         |a list of system abilities\n-c                          |all system information clusters\n-c [base system]            |system information clusters labeled \"base\" and \"system\"\n-s                          |all system abilities\n-s [SA0 SA1]                |system abilities labeled \"SA0\" and \"SA1\"\n-s [SA] -a ['-h']           |system ability labeled \"SA\" with arguments \"-h\" specified\n-e                          |faultlogs of crash history\n--net [pid]                 |dump network information; if pid is specified, dump traffic usage of specified pid\n--storage [pid]             |dump storage information; if pid is specified, dump /proc/pid/io\n-p                          |processes information, include list and infromation of processes and threads\n-p [pid]                    |dump threads under pid, includes smap, block channel, execute time, mountinfo\n--cpuusage [pid]            |dump cpu usage by processes and category; if PID is specified, dump category usage of specified pid\n--cpufreq                   |dump real CPU frequency of each core\n--mem [pid]                 |dump memory usage of total; dump memory usage of specified pid if pid was specified\n--zip                       |compress output to /data/log/hidumper\n--mem-smaps pid [-v]        |display statistic in /proc/pid/smaps, use -v specify more details\n--mem-jsheap pid [-T tid] [--gc]  |triggerGC and dumpHeapSnapshot under pid and tid\n--ipc pid ARG               |ipc load statistic; pid must be specified or set to -a dump all processes. ARG must be one of --start-stat | --stop-stat | --stat 列出系统信息集群。 hidumper -lc  使用样例： $ hidumper -lc\nSystem cluster list:\nbase                             system 列出系统能力。 hidumper -ls  使用样例： $ hidumper -ls\nSystem ability list:\nSystemAbilityManager             RenderService                    AbilityManagerService\nDataObserverMgr                  AccountMgr                       AIEngine\nBundleMgr                        FormMgr                          ApplicationManagerService\nAccessibilityManagerService      UserIdmService                   UserAuthService\nAuthExecutorMgrService           PinAuthService                   FaceAuthService\nFingerprintAuthService           WifiDevice                       WifiHotspot\nWifiP2p                          WifiScan                         1125\n1126                             BluetoothHost                    NetConnManager\nNetPolicyManager                 NetStatsManager                  NetTetheringManager\n... 获取系统信息集群详细信息。 hidumper -c  使用样例： $ hidumper -c\n\n-------------------------------[base]-------------------------------\n\nBuildId: HarmonyOS 5.0.0.37\nRleaseType: Canary1\n... 获取\"base\"或者\"system\"信息集群详细信息。 hidumper -c base\nhidumper -c system  使用样例： $ hidumper -c base\n\n-------------------------------[base]-------------------------------\n\nBuildId: HarmonyOS 5.0.0.37\nRleaseType: Canary1\n...\n\n$ hidumper -c system\n\n-------------------------------[system]-------------------------------\n\n\ncmd is: printenv\n\n_=/system/bin/printenv\nLANG=en_US.UTF-8\nHOME=/root\nPULSE_STATE_PATH=/data/data/.pulse_dir/state\n... 获取所有系统能力详细信息，命令格式如下： hidumper -s  使用样例： $ hidumper -s\n\n-------------------------------[ability]-------------------------------\n\n\n----------------------------------SystemAbilityManager----------------------------------\nThe arguments are illegal and you can enter '-h' for help.\n\n-------------------------------[ability]-------------------------------\n\n\n----------------------------------RenderService----------------------------------\n------Graphic2D--RenderSerice ------\nUsage:\nh                             |help text for the tool\n... 获取一个或多个系统能力详细信息，命令格式如下： hidumper -s [SA0]\nhidumper -s [SA0] [SA1]  使用样例： $ hidumper -s 4606\n\n-------------------------------[ability]-------------------------------\n\n\n----------------------------------WindowManagerService----------------------------------\nUsage:\n-h                             |help text for the tool\n-a                             |dump all window information in the system\n-w {window id} [ArkUI Option]  |dump specified window information\n------------------------------------[ArkUI Option]------------------------------------\n\n$ hidumper -s 4606 10\n\n-------------------------------[ability]-------------------------------\n\n\n----------------------------------WindowManagerService----------------------------------\nUsage:\n-h                             |help text for the tool\n-a                             |dump all window information in the system\n-w {window id} [ArkUI Option]  |dump specified window information\n------------------------------------[ArkUI Option]------------------------------------\n\n\n-------------------------------[ability]-------------------------------\n\n\n----------------------------------RenderService----------------------------------\n------Graphic2D--RenderSerice ------\nUsage:\nh                             |help text for the tool\nscreen                         |dump all screen infomation in the system\nsurface                        |dump all surface information\ncomposer fps                   |dump the fps info of composer\n... 执行单个系统能力的特定选项。  获取RenderService的使用帮助，命令格式如下： hidumper -s RenderService -a \"h\"   使用样例： $ hidumper -s RenderService -a \"h\"\n\n-------------------------------[ability]-------------------------------\n\n\n----------------------------------RenderService----------------------------------\n------Graphic2D--RenderSerice ------\nUsage:\nh                             |help text for the tool\nscreen                         |dump all screen infomation in the system\nsurface                        |dump all surface information\ncomposer fps                   |dump the fps info of composer\n[surface name] fps             |dump the fps info of surface\ncomposer fpsClear              |clear the fps info of composer\n[windowname] fps               |dump the fps info of window\n[windowname] hitchs            |dump the hitchs info of window\n[surface name] fpsClear        |clear the fps info of surface\nnodeNotOnTree                  |dump nodeNotOnTree info\nallSurfacesMem                 |dump surface mem info\nRSTree                         |dump RSTree info\nEventParamList                 |dump EventParamList info\nallInfo                        |dump all info\nclient                         |dump client ui node trees\nclient-server                  |dump client and server info\ndumpMem                        |dump Cache\ntrimMem cpu/gpu/shader         |release Cache\nsurfacenode [id]               |dump node info\nfpsCount                       |dump the refresh rate counts info\nclearFpsCount                  |clear the refresh rate counts info\nvktextureLimit                 |dump vk texture limit info\nflushJankStatsRs|flush rs jank stats hisysevent  获取对应surface的刷新帧率，可以使用以下命令，返回值为surface刷新帧对应的时间戳。 hidumper -s RenderService -a \"surface_name fps\"   使用样例： $ hidumper -s RenderService -a \"surface_name fps\"\n\n-------------------------------[ability]-------------------------------\n\n\n----------------------------------RenderService----------------------------------\n\n-- The recently fps records info of screens:  为开发者提供使设备不自动息屏的能力。-t参数使设备不自动息屏，-f参数使设备恢复自动息屏，或者设备重启使设备恢复自动息屏。 hidumper -s 3301 -a -t\nhidumper -s 3301 -a -f  使用样例： $ hidumper -s 3301 -a -t\n\n-------------------------------[ability]-------------------------------\n\n\n----------------------------------PowerManagerService----------------------------------\n$ hidumper -s 3301 -a -f\n\n-------------------------------[ability]-------------------------------\n\n\n----------------------------------PowerManagerService---------------------------------- 获取Faultlog模块生成的崩溃历史信息。 hidumper -e   使用样例： $ hidumper -e\n\n-------------------------------[faultlog]-------------------------------\n\n\n/data/log/faultlog/faultlogger/syswarning-com.ohos.sceneboard-20020022-20241106104006\n\nGenerated by HiviewDFX@HarmonyOS\n... 获取网络信息；如果指定了进程的pid，则只获取该进程的网络流量使用信息。 hidumper --net pid\nhidumper --net 使用样例： $ hidumper --net 1\n\n-------------------------------[net traffic]-------------------------------\n\nReceived Bytes:0\nSent Bytes:51885\n\n$ hidumper --net\n\n-------------------------------[net traffic]-------------------------------\n\nReceived Bytes:0\nSent Bytes:51885\n\n-------------------------------[net]-------------------------------\n\ncmd is: netstat -nW\n... 获取存储信息。如果指定了进程的pid，则只输出该进程的io信息。 hidumper --storage pid\nhidumper --storage 使用样例： $ hidumper --storage 1\n\n-------------------------------[storage io]-------------------------------\n\n\n/proc/1/io\n\nrchar: 28848175\nwchar: 4364169\nsyscr: 16886\nsyscw: 15866\nread_bytes: 30617600\nwrite_bytes: 10907648\ncancelled_write_bytes: 7340032\n$ hidumper --storage\n\n-------------------------------[storage]-------------------------------\n\n\ncmd is: storaged -u -p\n... 获取进程信息，包括进程、线程的列表等信息。 hidumper -p pid\nhidumper -p   该命令在release版本只支持导出debug应用的进程信息。 如何区分debug/release版本： 命令1：执行hdc shell \"param get|grep const.debuggable\"查看输出为0还是1。 命令2：执行hdc shell \"param get|grep const.product.software.version\"查看当前版本是否包含\"log\"字符串。 release版本:命令1执行结果为0且命令2不包含\"log\"字符串 debug版本:非release版本即为debug版本  使用样例： $ hidumper -p 64949\n\n-------------------------------[processes]-------------------------------\n\n\ncmd is: ps -efT -p 64949\n\nUID            PID   TID  PPID TCNT STIME TTY          TIME CMD\n20020169     64949 64949   629   17 11:40:14 ?     00:00:00 com.example.jsleakwatcher\n20020169     64949   733   629   17 11:40:28 ?     00:00:00 com.example.jsleakwatcher\n...\n$ hidumper -p\n\n-------------------------------[processes]-------------------------------\n\n\ncmd is: ps -efT\n\nUID            PID   TID  PPID TCNT STIME TTY          TIME CMD\nroot             1     1     0    1 10:46:59 ?     00:00:08 init --second-stage 2389791\nroot             2     2     0  127 10:46:59 ?     00:00:24 [sysmgr-main]\nroot             2     4     0  127 10:46:59 ?     00:00:00 [call_ebr]\n... 获取CPU使用率，根据进程和类别分类展示。 hidumper --cpuusage pid\nhidumper --cpuusage 使用样例： $ hidumper --cpuusage 1\n\n-------------------------------[cpuusage]-------------------------------\n\nLoad average: 12.1 / 12.2 / 12.1; the cpu load average in 1 min, 5 min and 15 min\nCPU usage from 2024-11-06 11:59:33 to 2024-11-06 11:59:35\nTotal: 3.80%; User Space: 1.45%; Kernel Space: 2.35%; iowait: 0.00%; irq: 0.14%; idle: 96.06%\nDetails of Processes:\n    PID   Total Usage      User Space    Kernel Space    Page Fault Minor    Page Fault Major    Name\n    1          0.00%           0.00%          0.00%           38368                1394            init\n$ hidumper --cpuusage\n\n-------------------------------[cpuusage]-------------------------------\n\nLoad average: 12.1 / 12.2 / 12.1; the cpu load average in 1 min, 5 min and 15 min\nCPU usage from 2024-11-06 11:59:33 to 2024-11-06 11:59:38\nTotal: 6.38%; User Space: 2.57%; Kernel Space: 3.81%; iowait: 0.02%; irq: 0.14%; idle: 93.46%\nDetails of Processes:\n    PID   Total Usage      User Space    Kernel Space    Page Fault Minor    Page Fault Major    Name\n    105      109.01%           0.00%        109.01%             164                   0            tppmgr.elf\n    2          0.89%           0.00%          0.89%               0                   0            sysmgr-main\n... 获取CPU每个核的真实频率。 hidumper --cpufreq 使用样例： $ hidumper --cpufreq\n\n-------------------------------[cpufreq]-------------------------------\n\n\ncmd is: cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq\n\n1018000\n\ncmd is: cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq\n\n1530000\n... 获取设备中所有pid的内存信息。 hidumper --mem 使用样例： $ hidumper --mem\n-------------------------------[memory]-------------------------------\nTotal Memory Usage by PID:\nPID       Total Pss(xxx in SwapPss)   Total Vss   Total Rss   Total Uss          GL       Graph         Dma     PurgSum     PurgPin    Name\n1          4309(2216 in SwapPss) kB  2158196 kB     4180 kB     1760 kB        0 kB        0 kB        0 kB        0 kB        0 kB    init\n2            45613(0 in SwapPss) kB 17452952 kB    48352 kB    44088 kB        0 kB        0 kB        0 kB        0 kB        0 kB    sysmgr-main\n... 获取设备中指定pid的内存信息。 hidumper --mem pid 使用样例： $ hidumper --mem 1\n\n-------------------------------[memory]-------------------------------\n\n                        Pss        Shared        Shared       Private       Private          Swap       SwapPss          Heap          Heap          Heap\n                    Total         Clean         Dirty         Clean         Dirty         Total         Total          Size         Alloc          Free\n                    ( kB )        ( kB )        ( kB )        ( kB )        ( kB )        ( kB )        ( kB )        ( kB )        ( kB )        ( kB )\n            --------------------------------------------------------------------------------------------------------------------------------------------\n            GL             0             0             0             0             0             0             0             0             0             0\n        Graph             0             0             0             0             0             0             0             0             0             0\nnative heap           924             0             0           924             0          1948          1948             0             0             0\nAnonPage other            84            16             0            84             0            52            52             0             0             0\n        stack            28             0             0            28             0             0             0             0             0             0\n        .so           413          1548             0           248            56           216           216             0             0             0\n        dev           190             0           856             0             0             0             0             0             0             0\nFilePage other           420             0             0           404            16             0             0             0             0             0\n----------------------------------------------------------------------------------------------------------------------------------------------------------\n        Total          4275          1564           856          1688            72          2216          2216             0             0             0\n\nnative heap:\njemalloc meta:           120             0             0           120             0            52            52             0             0             0\njemalloc heap:           776             0             0           776             0          1888          1888             0             0             0\n    brk heap:            20             0             0            20             0             8             8             0             0             0\n    musl heap:             8             0             0             8             0             0             0             0             0             0\n\nPurgeable:\n        PurgSum:0 kB\n        PurgPin:0 kB\n\nDMA:\n            Dma:0 kB Graph字段统计方式为：计算/proc/process_dmabuf_info节点下该进程使用的内存大小。 保存命令输出到/data/log/hidumper下的压缩文件。 hidumper --zip 使用样例： $ hidumper --zip\n100%,[-],The result is:/data/log/hidumper/20241106-120444-166.zip 统计一段时间进程IPC信息，如果使用-a则统计所有进程IPC数据，指定pid则统计对应进程的IPC数据。--start-stat开始统计，--stat获取统计数据，--stop-stat结束统计。 hidumper --ipc pid --start-stat\nhidumper --ipc pid --stat\nhidumper --ipc pid --stop-stat 使用样例： $ hidumper --ipc 1473 --start-stat\nStartIpcStatistics pid:1473 success\n$ hidumper --ipc 1473 --stat\n********************************GlobalStatisticsInfo********************************\nCurrentPid:1473\nTotalCount:2\nTotalTimeCost:2214\n--------------------------------ProcessStatisticsInfo-------------------------------\nCallingPid:625\nCallingPidTotalCount:2\nCallingPidTotalTimeCost:2214\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~InterfaceStatisticsInfo~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nDescriptorCode:OHOS.ILocalAbilityManager_6\nDescriptorCodeCount:2\nDescriptorCodeTimeCost:\nTotal:2214 | Max:1444 | Min:770 | Avg:1107\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n------------------------------------------------------------------------------------\n************************************************************************************\n$ hidumper --ipc 1473 --stop-stat\nStopIpcStatistics pid:1473 success hidumper --ipc -a --start-stat\nhidumper --ipc -a --stat\nhidumper --ipc -a --stop-stat 使用样例： $ hidumper --ipc -a --start-stat\nStartIpcStatistics pid:1473 success\nStartIpcStatistics pid:775 success\nStartIpcStatistics pid:1472 success\n...\n$ hidumper --ipc -a --stat\n********************************GlobalStatisticsInfo********************************\nCurrentPid:1473\nTotalCount:3\nTotalTimeCost:3783\n--------------------------------ProcessStatisticsInfo-------------------------------\nCallingPid:625\nCallingPidTotalCount:3\n...\n$ hidumper --ipc -a --stop-stat\nStopIpcStatistics pid:1473 success\nStopIpcStatistics pid:775 success\nStopIpcStatistics pid:1472 success\n... 导出指定进程内存信息的详细使用情况。 hidumper --mem-smaps pid [-v]   该命令仅限debug版本使用，release版本不可用。 如何区分debug/release版本：请查看hidumper -p中说明。  使用样例： $ hidumper --mem-smaps 1\nusage:\n-h                          |help text for the tool\n-lc                         |a list of system information clusters\n-ls                         |a list of system abilities\n-c                          |all system information clusters\n-c [base system]            |system information clusters labeled \"base\" and \"system\"\n-s                          |all system abilities\n-s [SA0 SA1]                |system abilities labeled \"SA0\" and \"SA1\"\n-s [SA] -a ['-h']           |system ability labeled \"SA\" with arguments \"-h\" specified\n-e                          |faultlogs of crash history\n--net [pid]                 |dump network information; if pid is specified, dump traffic usage of specified pid\n--storage [pid]             |dump storage information; if pid is specified, dump /proc/pid/io\n-p                          |processes information, include list and infromation of processes and threads\n-p [pid]                    |dump threads under pid, includes smap, block channel, execute time, mountinfo\n--cpuusage [pid]            |dump cpu usage by processes and category; if PID is specified, dump category usage of specified pid\n--cpufreq                   |dump real CPU frequency of each core\n--mem [pid]                 |dump memory usage of total; dump memory usage of specified pid if pid was specified\n--zip                       |compress output to /data/log/hidumper\n--mem-smaps pid [-v]        |display statistic in /proc/pid/smaps, use -v specify more details\n--mem-jsheap pid [-T tid] [--gc]  |triggerGC and dumpHeapSnapshot under pid and tid\n--ipc pid ARG               |ipc load statistic; pid must be specified or set to -a dump all processes. ARG must be one of --start-stat | --stop-stat | --stat\n\n$ hidumper --mem-smaps 1 -v\nusage:\n-h                          |help text for the tool\n-lc                         |a list of system information clusters\n-ls                         |a list of system abilities\n-c                          |all system information clusters\n-c [base system]            |system information clusters labeled \"base\" and \"system\"\n-s                          |all system abilities\n-s [SA0 SA1]                |system abilities labeled \"SA0\" and \"SA1\"\n-s [SA] -a ['-h']           |system ability labeled \"SA\" with arguments \"-h\" specified\n-e                          |faultlogs of crash history\n--net [pid]                 |dump network information; if pid is specified, dump traffic usage of specified pid\n--storage [pid]             |dump storage information; if pid is specified, dump /proc/pid/io\n-p                          |processes information, include list and infromation of processes and threads\n-p [pid]                    |dump threads under pid, includes smap, block channel, execute time, mountinfo\n--cpuusage [pid]            |dump cpu usage by processes and category; if PID is specified, dump category usage of specified pid\n--cpufreq                   |dump real CPU frequency of each core\n--mem [pid]                 |dump memory usage of total; dump memory usage of specified pid if pid was specified\n--zip                       |compress output to /data/log/hidumper\n--mem-smaps pid [-v]        |display statistic in /proc/pid/smaps, use -v specify more details\n--mem-jsheap pid [-T tid] [--gc]  |triggerGC and dumpHeapSnapshot under pid and tid\n--ipc pid ARG               |ipc load statistic; pid must be specified or set to -a dump all processes. ARG must be one of --start-stat | --stop-stat | --stat 运行  hidumper --mem-jsheap pid [-T tid] [--gc]  pid 必选参数。命令触发所有线程gc和快照导出。如果指定线程的tid，只触发该线程gc和快照导出；如果指定--gc，只触发gc不做快照导出。(仅限debug版本使用) hidumper --mem-jsheap pid [-T tid] [--gc]   该命令在release版本只支持导出debug应用的快照信息。 如何区分debug和release版本：请查看hidumper -p中说明。 导出的jsheap文件一般位于/data/log/faultlog/temp或/data/log/reliability/resource_leak/memory_leak下  使用样例： $ hidumper --mem-jsheap 64949\n$ ls |grep hidumper\nhidumper-jsheap-64949-64949-1730872962493\n$ hidumper --mem-jsheap 64949 -T 64949\n$ ls |grep hidumper\nhidumper-jsheap-64949-64949-1730872962493\n$ hidumper --mem-jsheap 64949 --gc 
