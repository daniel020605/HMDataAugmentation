使用HiDebug获取调试信息（ArkTS）
HiDebug对外提供系统调试相关功能的接口，包括应用进程的静态堆内存（native heap）信息、应用进程内存占用PSS（Proportional Set Size）信息的获取等，也可完成虚拟机内存切片导出，虚拟机CPU Profiling采集等操作。
接口说明
HiDebug的具体用法可查看API参考API参考文档。
开发示例
下文将展示如何在应用内增加一个按钮，并单击该按钮以调用hidebug接口。
 新建一个工程，选择“Empty Ability”。 工程配置界面中，Model选择“Stage”。 在Project窗口单击entry > src > main > ets > pages，打开工程中的Index.ets文件， 新增一个方法调用hidebug接口，本文以hidebug.getSystemCpuUsage()为例，其他接口可参考API参考文档。 import { hidebug } from '@kit.PerformanceAnalysisKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\nfunction testHidebug(event?: ClickEvent) {\n  try {\n    console.info(`getSystemCpuUsage: ${hidebug.getSystemCpuUsage()}`)\n  } catch (error) {\n    console.error(`error code: ${(error as BusinessError).code}, error msg: ${(error as BusinessError).message}`);\n  }\n} 给文本Text组件添加一个点击事件，示例代码如下： @Entry\n@Component\nstruct Index {\n  @State message: string = 'Hello World'\n\n  build() {\n    Row() {\n      Column() {\n        Text(this.message)\n          .fontSize(50)\n          .fontWeight(FontWeight.Bold)\n          .onClick(testHidebug);//添加点击事件\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n} 在真机上运行该工程，单击应用/服务界面上的“Hello World”文本。 在DevEco Studio的底部，切换到“Log”窗口，设置日志的过滤条件为“testTag”。 此时窗口将显示通过hidebug.getSystemCpuUsage()接口获取的CPU使用率的相关日志。  08-20 11:06:01.891   1948-1948     A03d00/JSAPP                    com.examp...lication  I     getSystemCpuUsage: 0.4722222222222222 
示例代码
 Debug 
