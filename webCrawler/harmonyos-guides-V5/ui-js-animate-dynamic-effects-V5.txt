动画动效
通过设置插值器来实现动画效果。
创建动画对象
通过createAnimator创建一个动画对象，通过设置参数options来设置动画的属性。
<!-- xxx.hml -->\n<div class=\"container\">\n  <div style=\"width: 300px;height: 300px;margin-top: 100px;background: linear-gradient(pink, purple);transform: translate({{translateVal}});\">\n  </div>\n  <div class=\"row\">\n    <button type=\"capsule\" value=\"play\" onclick=\"playAnimation\"></button>\n  </div>\n</div>
/* xxx.css */\n.container {\n  width:100%;\n  height:100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\nbutton{\n  width: 200px;\n}\n.row{\n  width: 65%;\n  height: 100px;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 50px;\n  margin-left: 260px;\n}
// xxx.js\nimport animator from '@ohos.animator';\nexport default {\n  data: {\n    translateVal: 0,\n    animation: null\n  },\n  onInit() {},\n  onShow(){\n    var options = {\n      duration: 3000,\n      easing:\"friction\",\n      delay:\"1000\",\n      fill: 'forwards',\n      direction:'alternate',\n      iterations: 2,\n      begin: 0,\n      end: 180\n    };//设置参数\n    this.animation = animator.createAnimator(options)//创建动画\n  },\n  playAnimation() {\n    var _this = this;\n    this.animation.onframe = function(value) {\n      _this.translateVal= value\n    };\n    this.animation.play();\n  }\n}
 使用createAnimator创建动画对象时必须传入options参数。 begin插值起点，不设置时默认为0。 end插值终点，不设置时默认为1。 
添加动画事件和调用接口
animator支持事件和接口，可以通过添加frame、cancel、repeat、finish事件和调用update、play、pause、cancel、reverse、finish接口自定义动画效果。animator支持的事件和接口具体见动画中的create。
<!-- xxx.hml -->\n<div style=\"flex-direction: column;align-items: center;width: 100%;height: 100%;\">\n  <div style=\"width:200px;height: 200px;margin-top: 100px;background: linear-gradient(#b30d29, #dcac1b);\n  transform: scale({{scaleVal}});\"></div>\n  <div style=\"width: {{DivWidth}};height: {{DivHeight}};margin-top: 200px;\n  background: linear-gradient(pink, purple);margin-top: 200px;transform:translateY({{translateVal}});\">\n  </div>\n  <div class=\"row\">\n    <button type=\"capsule\" value=\"play\" onclick=\"playAnimation\"></button>\n    <button type=\"capsule\" value=\"update\" onclick=\"updateAnimation\"></button>\n  </div>\n  <div class=\"row1\">\n    <button type=\"capsule\" value=\"pause\" onclick=\"pauseAnimation\"></button>\n    <button type=\"capsule\" value=\"finish\" onclick=\"finishAnimation\"></button>\n  </div>\n  <div class=\"row2\">\n    <button type=\"capsule\" value=\"cancel\" onclick=\"cancelAnimation\"></button>\n    <button type=\"capsule\" value=\"reverse\" onclick=\"reverseAnimation\"></button>\n  </div>\n</div>
/* xxx.css */\nbutton{\n  width: 200px;\n}\n.row{\n  width: 65%;\n  height: 100px;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 150px;\n  position: fixed;\n  top: 52%;\n  left: 120px;\n}\n.row1{\n  width: 65%;\n  height: 100px;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 120px;\n  position: fixed;\n  top: 65%;\n  left: 120px;\n}\n.row2{\n  width: 65%;\n  height: 100px;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 100px;\n  position: fixed;\n  top: 75%;\n  left: 120px;\n}
// xxx.js\nimport animator from '@ohos.animator';\nimport promptAction from '@ohos.promptAction';\nexport default {\n  data: {\n    scaleVal:1,\n    DivWidth:200,\n    DivHeight:200,\n    translateVal:0,\n    animation: null\n  },\n  onInit() {\n    var options = {\n      duration: 3000,\n      fill: 'forwards',\n      begin: 200,\n      end: 270\n    };\n    this.animation = animator.createAnimator(options);\n  },\n  onShow() {\n    var _this= this;\n    //添加动画重放事件\n    this.animation.onrepeat = function() {\n      promptAction.showToast({\n        message: 'repeat'\n      });\n      var repeatoptions = {\n        duration: 2000,\n        iterations: 1,\n         direction: 'alternate',\n         begin: 180,\n         end: 240\n       };\n        _this.animation.update(repeatoptions);\n        _this.animation.play();\n      };\n  },\n  playAnimation() {\n    var _this= this;\n    //添加动画逐帧插值回调事件\n    this.animation.onframe = function(value) {\n      _this. scaleVal= value/150,\n      _this.DivWidth = value,\n      _this.DivHeight = value,\n      _this.translateVal = value-180\n    };\n    this.animation.play();\n  },\n  updateAnimation() {\n    var newoptions = {\n      duration: 5000,\n      iterations: 2,\n      begin: 120,\n      end: 180\n    };\n    this.animation.update(newoptions);\n    this.animation.play();//调用动画播放接口\n  },\n  pauseAnimation() {\n    this.animation.pause();//调用动画暂停接口\n  },\n  finishAnimation() {\n    var _this= this;\n   //添加动画完成事件\n    this.animation.onfinish = function() {\n      promptAction.showToast({\n        message: 'finish'\n      })\n    };\n    this.animation.finish(); //调用动画完成接口\n  },\n  cancelAnimation() {\n    this.animation.cancel(); //调用动画取消接口\n  },\n  reverseAnimation() {\n    this.animation.reverse(); //调用动画倒放接口\n  }\n}
在调用update接口的过程中可以使用这个接口更新动画参数，入参与createAnimator一致。
