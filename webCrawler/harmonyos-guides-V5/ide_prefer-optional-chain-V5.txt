@typescript-eslint/prefer-optional-chain
强制使用链式可选表达式，而不是链式逻辑与、否定逻辑或、或空对象。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@typescript-eslint/prefer-optional-chain\": \"error\"\n  }\n}
选项
详情请参考@typescript-eslint/prefer-optional-chain选项。
正例
class Foo {\n  public a?: Foo = new Foo();\n\n  public b?: Foo = new Foo();\n\n  public c?: Foo = new Foo();\n\n  public method?(): void {\n    console.info('method');\n  }\n}\n\nconst foo = new Foo();\nexport const c = foo.a?.b?.c;\nfoo.a?.b?.method?.();
反例
class Foo {\n  public a?: Foo = new Foo();\n\n  public b?: Foo = new Foo();\n\n  public c?: Foo = new Foo();\n\n  public method?(): void {\n    console.info('method');\n  }\n}\n\nconst foo = new Foo();\nlet c = foo.a;\nc = c && c.b;\nc = c && c.c;\nexport { c };\nif (foo.a && foo.a.b && foo.a.b.method) {\n  foo.a.b.method();\n}
规则集
plugin:@typescript-eslint/all
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
