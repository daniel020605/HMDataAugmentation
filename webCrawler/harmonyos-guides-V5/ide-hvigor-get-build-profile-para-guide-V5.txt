能力说明
在编译构建时，Hvigor会生成BuildProfile类，开发者可以通过该类在运行时获取编译构建参数，也可以在build-profile.json5中通过buildProfileFields增加自定义字段，从而在运行时获取自定义的参数。
使用说明
buildProfileFields的优先级：模块级target > 模块级buildOptionSet > 模块级buildOption > 工程级product > 工程级buildModeSet
HAP/HSP运行时获取编译构建参数
[h2]生成BuildProfile类文件
当前有以下几种方式可以生成BuildProfile类文件：
选中需要编译的模块，在菜单栏选择“Build > Generate Build Profile ${moduleName}”。在菜单栏选择“Build > Build Hap(s)/APP(s) > Build Hap(s)”或“Build > Build Hap(s)/APP(s) > Build APP(s)”。在Terminal中执行如下命令：hvigorw GenerateBuildProfile 
执行完上述操作后，将在“${moduleName} / build / ${productName} / generated / profile / ${targetName} ”目录下生成BuildProfile.ets文件。示例如下所示：
[h2]在代码中获取构建参数
import BuildProfile from '${packageName}/BuildProfile';
在HSP中使用import BuildProfile from 'BuildProfile'在跨包集成HSP的时候可能会产生编译错误，推荐使用import BuildProfile from '${packageName}/BuildProfile'。
通过如下方式获取到构建参数：
@State message: string = BuildProfile.BUNDLE_NAME;
[h2]默认参数
生成BuildProfile类文件时，Hvigor会根据当前工程构建的配置信息生成一部分默认参数，开发者可以在代码中直接使用。
参数名
类型
说明
BUNDLE_NAME
string
应用的Bundle名称。
BUNDLE_TYPE
string
应用的Bundle类型。
VERSION_CODE
number
应用的版本号。
VERSION_NAME
string
应用版本号的文字描述。
TARGET_NAME
string
Target名称。
PRODUCT_NAME
string
Product名称。
BUILD_MODE_NAME
string
编译模式。
DEBUG
boolean
应用是否可调试。
[h2]自定义参数
开发者可以在模块级的build-profile.json5文件中增加自定义参数，在生成BuildProfile类文件后，在代码中使用自定义参数。
自定义参数可以在buildOption、buildOptionSet、targets节点下的arkOptions子节点中通过增加buildProfileFields字段实现，自定义参数通过key-value键值对的方式配置，其中value取值仅支持number、string、boolean类型。
配置示例如下所示：
{\n  \"apiType\": \"stageMode\",\n  \"buildOption\": {\n    \"arkOptions\": {\n      \"buildProfileFields\": {\n        \"data\": \"Data\",\n      }\n    }\n  },\n  \"buildOptionSet\": [\n    {\n      \"name\": \"release\",\n      \"arkOptions\": {\n        \"buildProfileFields\": {\n          \"buildOptionSetData\": \"BuildOptionSetDataRelease\",\n          \"data\": \"DataRelease\"\n        }\n      }\n    },\n    {\n      \"name\": \"debug\",\n      \"arkOptions\": {\n        \"buildProfileFields\": {\n          \"buildOptionSetData\": \"BuildOptionSetDataDebug\",\n          \"data\": \"DataDebug\"\n        }\n      }\n    }\n  ],\n  \"targets\": [\n    {\n      \"name\": \"default\",\n      \"config\": {\n        \"buildOption\": {\n          \"arkOptions\": {\n            \"buildProfileFields\": {\n              \"targetData\": \"TargetData\",\n              \"data\": \"DataTargetDefault\"\n            }\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"default1\",\n      \"config\": {\n        \"buildOption\": {\n          \"arkOptions\": {\n            \"buildProfileFields\": {\n              \"targetData\": \"TargetData1\",\n              \"data\": \"DataTargetDefault1\"\n            }\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"ohosTest\",\n    }\n  ]\n}
HAR运行时获取编译构建参数
[h2]生成BuildProfile类文件
当前有以下几种方式可以生成BuildProfile类文件：
选中需要编译的模块，在菜单栏选择“Build > Generate Build Profile ${moduleName}”。选中需要编译的模块，在菜单栏选择“Build > Make Module ${moduleName}”。在Terminal中执行如下命令：hvigorw GenerateBuildProfile 
执行完上述操作后，将在模块根目录下生成BuildProfile.ets文件（该文件可放置在.gitignore文件中进行忽略）。示例如下所示：
[h2]在代码中获取构建参数
生成BuildProfile类文件后，在代码中可以通过相对路径引入该文件，如在HAR模块的Index.ets文件中使用该文件：
import BuildProfile from './BuildProfile';
通过如下方式获取到构建参数：
const HAR_VERSION: string = BuildProfile.HAR_VERSION;
[h2]默认参数
生成BuildProfile类文件时，Hvigor会根据当前工程构建的配置信息生成一部分默认参数，开发者可以在代码中直接使用。
参数名
类型
说明
HAR_VERSION
string
HAR版本号。
BUILD_MODE_NAME
string
编译模式。
DEBUG
boolean
应用是否可调试。
TARGET_NAME
string
目标名称。
[h2]自定义参数
开发者可以在模块级的build-profile.json5文件中增加自定义参数，在生成BuildProfile类文件后，在代码中使用自定义参数。
自定义参数可以在buildOption、buildOptionSet节点下的arkOptions子节点中通过增加buildProfileFields字段实现，自定义参数通过key-value键值对的方式配置，其中value取值仅支持number、string、boolean类型。
配置示例如下所示：
{\n  \"apiType\": \"stageMode\",\n  \"buildOption\": {\n    \"arkOptions\": {\n      \"buildProfileFields\": {\n        \"data\": \"Data\",\n      }\n    }\n  },\n  \"buildOptionSet\": [\n    {\n      \"name\": \"release\",\n      \"arkOptions\": {\n        \"buildProfileFields\": {\n          \"buildOptionSetData\": \"BuildOptionSetDataRelease\",\n          \"data\": \"DataRelease\"\n        }\n      }\n    },\n    {\n      \"name\": \"debug\",\n      \"arkOptions\": {\n        \"buildProfileFields\": {\n          \"buildOptionSetData\": \"BuildOptionSetDataDebug\",\n          \"data\": \"DataDebug\"\n        }\n      }\n    }\n  ],\n  \"targets\": [\n    {\n      \"name\": \"default\",\n    }\n  ]\n}
工程级配置自定义构建参数
开发者可以在工程级的build-profile.json5文件中增加自定义参数，该自定义参数会生成到所有模块的BuildProfile类文件，在代码中使用自定义参数。
自定义参数可以在工程级products、buildModeSet中的buildOption节点下的arkOptions子节点中通过增加buildProfileFields字段实现，自定义参数通过key-value键值对的方式配置，其中value取值仅支持number、string、boolean类型。
配置示例如下所示：
{\n  \"app\": {\n    \"signingConfigs\": [],\n    \"products\": [\n      {\n        \"name\": \"default\",\n        \"signingConfig\": \"default\",\n        \"compatibleSdkVersion\": \"5.0.0(12)\",\n        \"runtimeOS\": \"HarmonyOS\",\n        \"buildOption\": {\n          \"arkOptions\": {\n            \"buildProfileFields\": {\n              \"productValue\": \"defaultValue\"\n            }\n          }\n        }\n      }\n    ],\n    \"buildModeSet\": [\n      {\n        \"name\": \"debug\",\n        \"buildOption\": {\n          \"arkOptions\": {\n            \"buildProfileFields\": {\n              \"productBuildModeValue\": \"debugValue\"\n            }\n          }\n        }\n      },\n      {\n        \"name\": \"release\"\n      }\n    ]\n  },\n  \"modules\": [\n    {\n      \"name\": \"entry\",\n      \"srcPath\": \"./entry\",\n      \"targets\": [\n        {\n          \"name\": \"default\",\n          \"applyToProducts\": [\n            \"default\"\n          ]\n        }\n      ]\n    }\n  ]\n}\n
