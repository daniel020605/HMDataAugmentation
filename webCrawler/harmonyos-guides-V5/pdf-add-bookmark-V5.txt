添加、删除书签
PDF Kit支持添加和删除PDF文档书签。
添加书签时，可设置标题、颜色，是否粗体、斜体、跳转信息等。
接口说明
接口名
描述
createBookmark(): Bookmark
创建PDF文档书签。
getRootBookmark(): Bookmark
获取PDF文档第一个根书签。
insertBookmark(bookmark: Bookmark, parent: Bookmark, position: number): boolean
插入PDF文档书签。
setBookmarkInfo(info: BookmarkInfo): void
设置书签信息。
removeBookmark(bookmark: Bookmark): boolean
移除PDF文档书签。
示例代码
 调用loadDocument方法，加载PDF文档。 调用createBookmark方法，创建书签。 调用setDestInfo方法，设置书签的跳转信息。 调用setBookmarkInfo方法，设置书签内容及样式。 设置保存文档沙箱路径并保存。 
import { pdfService } from '@kit.PDFKit';\nimport { common } from '@kit.AbilityKit';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\n\n@Entry\n@Component\nstruct PdfPage {\n  private pdfDocument: pdfService.PdfDocument = new pdfService.PdfDocument();\n  private context = getContext() as common.UIAbilityContext;\n\n  build() {\n    Column() {\n      // 添加书签\n      Button('addBookmark').onClick(async () => {\n        // 确保沙箱目录有input.pdf文档\n        let filePath = this.context.filesDir + '/input.pdf';\n        this.pdfDocument.loadDocument(filePath);\n        // 创建书签\n        let mark1: pdfService.Bookmark = this.pdfDocument.createBookmark();\n        let mark2: pdfService.Bookmark = this.pdfDocument.createBookmark();\n        // 设置书签的跳转信息\n        let destInfo: pdfService.DestInfo = mark1.getDestInfo();\n        destInfo.fitMode = pdfService.FitMode.FIT_MODE_XYZ;\n        destInfo.pageIndex = 1;\n        destInfo.left = 20;\n        destInfo.top = 30;\n        destInfo.zoom = 1.5;\n        mark1.setDestInfo(destInfo);\n        // 设置书签内容及样式\n        let bookInfo: pdfService.BookmarkInfo = mark1.getBookmarkInfo();\n        bookInfo.title = '这里是跳到第一页的书签';\n        bookInfo.titleColor = 12;\n        bookInfo.isBold = true;\n        bookInfo.isItalic = true;\n        mark1.setBookmarkInfo(bookInfo);\n        // 把创建的书签插入到PDF页面\n        this.pdfDocument.insertBookmark(mark1, null, 1);\n        this.pdfDocument.insertBookmark(mark2, mark1, 1);\n        // 设置保存文档沙箱路径并保存\n        let outPdfPath = this.context.filesDir + '/testAddBookmark.pdf';\n        let result = this.pdfDocument.saveDocument(outPdfPath);\n        hilog.info(0x0000, 'PdfPage', 'saveAddBookmark %{public}s!', result ? 'success' : 'fail');\n      })\n      // 删除书签\n      Button('removeBookmark').onClick(async () => {\n        // 确保沙箱目录有testAddBookmark.pdf文档\n        this.pdfDocument.loadDocument(this.context.filesDir + '/testAddBookmark.pdf');\n        let bookmarks: pdfService.Bookmark = this.pdfDocument.getRootBookmark();\n        if (bookmarks.isRootBookmark()) {\n          let hasRemoveBookmark: boolean = this.pdfDocument.removeBookmark(bookmarks);\n          hilog.info(0x0000, 'PdfPage', 'removeBookmark %{public}s!', hasRemoveBookmark ? 'success' : 'fail');\n          let outPdfPath = this.context.filesDir + '/testRemoveBookmark.pdf';\n          let result = this.pdfDocument.saveDocument(outPdfPath);\n          hilog.info(0x0000, 'PdfPage', 'saveRemoveBookmark %{public}s!', result ? 'success' : 'fail');\n        }\n      })\n    }\n  }\n}
