通过message事件刷新卡片内容
在卡片页面中可以通过postCardAction接口触发message事件拉起FormExtensionAbility，然后由FormExtensionAbility刷新卡片内容，下面是这种刷新方式的简单示例。
本文主要介绍动态卡片的事件开发。对于静态卡片，请参见FormLink。
 在卡片页面通过注册Button的onClick点击事件回调，并在回调中调用postCardAction接口触发message事件拉起FormExtensionAbility。卡片页面中使用LocalStorageProp装饰需要刷新的卡片数据。 let storageUpdateByMsg = new LocalStorage();\n\n@Entry(storageUpdateByMsg)\n@Component\nstruct UpdateByMessageCard {\n  @LocalStorageProp('title') title: ResourceStr = $r('app.string.default_title');\n  @LocalStorageProp('detail') detail: ResourceStr = $r('app.string.DescriptionDefault');\n\n  build() {\n    Column() {\n      Column() {\n        Text(this.title)\n          .fontColor('#FFFFFF')\n          .opacity(0.9)\n          .fontSize(14)\n          .margin({ top: '8%', left: '10%' })\n        Text(this.detail)\n          .fontColor('#FFFFFF')\n          .opacity(0.6)\n          .fontSize(12)\n          .margin({ top: '5%', left: '10%' })\n      }.width('100%').height('50%')\n      .alignItems(HorizontalAlign.Start)\n\n      Row() {\n        Button() {\n          Text($r('app.string.update'))\n            .fontColor('#45A6F4')\n            .fontSize(12)\n        }\n        .width(120)\n        .height(32)\n        .margin({ top: '30%', bottom: '10%' })\n        .backgroundColor('#FFFFFF')\n        .borderRadius(16)\n        .onClick(() => {\n          postCardAction(this, {\n            action: 'message',\n            params: { msgTest: 'messageEvent' }\n          });\n        })\n      }.width('100%').height('40%')\n      .justifyContent(FlexAlign.Center)\n    }\n    .width('100%')\n    .height('100%')\n    .alignItems(HorizontalAlign.Start)\n    .backgroundImage($r('app.media.CardEvent'))\n    .backgroundImageSize(ImageSize.Cover)\n  }\n} 在FormExtensionAbility的onFormEvent生命周期中调用updateForm接口刷新卡片。 import { BusinessError } from '@kit.BasicServicesKit';\nimport { formBindingData, FormExtensionAbility, formProvider } from '@kit.FormKit';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\n\nconst TAG: string = 'EntryFormAbility';\nconst DOMAIN_NUMBER: number = 0xFF00;\n\nexport default class EntryFormAbility extends FormExtensionAbility {\n  onFormEvent(formId: string, message: string): void {\n    // Called when a specified message event defined by the form provider is triggered.\n    hilog.info(DOMAIN_NUMBER, TAG, `FormAbility onFormEvent, formId = ${formId}, message: ${JSON.stringify(message)}`);\n\n    class FormDataClass {\n      title: string = 'Title Update.'; // 和卡片布局中对应\n      detail: string = 'Description update success.'; // 和卡片布局中对应\n    }\n\n    let formData = new FormDataClass();\n    let formInfo: formBindingData.FormBindingData = formBindingData.createFormBindingData(formData);\n    formProvider.updateForm(formId, formInfo).then(() => {\n      hilog.info(DOMAIN_NUMBER, TAG, 'FormAbility updateForm success.');\n    }).catch((error: BusinessError) => {\n      hilog.info(DOMAIN_NUMBER, TAG, `Operation updateForm failed. Cause: ${JSON.stringify(error)}`);\n    })\n  }\n  //...\n} 运行效果如下图所示。     初始状态 点击刷新         
