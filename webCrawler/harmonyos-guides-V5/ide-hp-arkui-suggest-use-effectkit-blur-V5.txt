@performance/hp-arkui-suggest-use-effectkit-blur
建议使用effectKit.createEffect实现模糊效果。
通用丢帧场景下，建议优先修改。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@performance/hp-arkui-suggest-use-effectkit-blur\": \"suggestion\",\n  }\n}
选项
该规则无需配置额外选项。
正例
// 导入图片处理模块\nimport image from \"@ohos.multimedia.image\";\n// 导入图像效果模块\nimport effectKit from '@ohos.effectKit';\n\n@Entry\n@Component\nstruct MyComponent{\n  // 是否显示全屏模态页面。静态模糊用\n  @State isShowStaticBlur: boolean = false;\n  // PixelMap实例\n  @State pixelMap: image.PixelMap | undefined = undefined;\n  // ImageSource实例\n  imgSource: image.ImageSource | undefined = undefined;\n\n  // 静态模糊\n  async staticBlur() {\n    // 获得当前Ability的Context\n    let context = getContext(this);\n    // 获取resourceManager对象\n    let resourceMgr = context.resourceManager;\n    // 获rawfile目录下的图片\n    const fileData = await resourceMgr.getRawFileContent('startIcon.png');\n    // 创建ArrayBuffer实例\n    let buffer: ArrayBuffer = fileData.buffer.slice(0);\n    // 创建图片源实例\n    this.imgSource = image.createImageSource(buffer);\n    // 创建像素的属性\n    let opts: image.InitializationOptions = {\n      // 是否可编辑\n      editable: true,\n      // 像素格式。3表示RGBA_8888\n      pixelFormat: 3,\n      // 创建图片大小\n      size: {\n        height: 4,\n        width: 6\n      }\n    };\n    // 创建PixelMap\n    await this.imgSource.createPixelMap(opts).then((pixelMap: image.PixelMap) => {\n      // 模糊半径\n      const blurRadius = 1;\n      // 创建Filter实例\n      let headFilter = effectKit.createEffect(pixelMap);\n      if (headFilter != null) {\n        // 设置静态模糊。将模糊效果添加到效果链表中\n        headFilter.blur(blurRadius);\n        // 获取已添加链表效果的源图像的image.PixelMap\n        headFilter.getEffectPixelMap().then((pixelMap: image.PixelMap) => {\n          this.pixelMap = pixelMap;\n        });\n      }\n    })\n  }\n\n  // 图片设置静态模糊的模态页面\n  @Builder\n  staticBlurBuilder() {\n    Stack() {\n      Image(this.pixelMap)\n        .width('100%')\n        .height('100%')\n        .objectFit(ImageFit.Fill)\n      Button('close')\n        .fontSize(20)\n        .onClick(() => {\n          this.isShowStaticBlur = false;\n        })\n    }\n    .width('100%')\n    .height('100%')\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      Button('静态模糊')\n        .onClick(() => {\n          this.isShowStaticBlur = true;\n          // 设置静态模糊\n          this.staticBlur();\n        })\n        .bindContentCover(this.isShowStaticBlur, this.staticBlurBuilder(), {\n          // 全屏模态转场类型。上下切换动画\n          modalTransition: ModalTransition.DEFAULT\n        })\n    }\n    .width('100%')\n    .height('100%')\n    .justifyContent(FlexAlign.Center)\n  }\n}
反例
@Entry\n@Component\nstruct MyComponent{\n  build() {\n    Column({ space: 10 }) {\n      // 对image进行模糊，未使用effectKit.createEffect\n      Text('Image blur').fontSize(15).fontColor(0xCCCCCC).width('90%')\n      Image('resources/base/media/sss001.jpg').blur(1)\n        .border({ width: 1 }).borderStyle(BorderStyle.Dashed).aspectRatio(1).width('90%').height(40)\n\n      // 对背景进行模糊，未使用effectKit.createEffect\n      Text('backdropBlur').fontSize(15).fontColor(0xCCCCCC).width('90%')\n      Text()\n        .width('90%')\n        .height(40)\n        .fontSize(16)\n        .backdropBlur(3)\n        .backgroundImage('/pages/attrs/image/image.jpg')\n        .backgroundImageSize({ width: 1200, height: 160 })\n    }.width('100%').margin({ top: 5 })\n  }\n}
规则集
plugin:@performance/recommended
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
