Environment：设备环境查询
开发者如果需要应用程序运行的设备的环境参数，以此来作出不同的场景判断，比如多语言，深浅色模式等，需要用到Environment设备环境查询。
Environment是ArkUI框架在应用程序启动时创建的单例对象。它为AppStorage提供了一系列描述应用程序运行状态的属性。Environment的所有属性都是不可变的（即应用不可写入），所有的属性都是简单类型。
Environment提供了读取系统某些环境变量的能力，具体见Environment内置参数，并将其值写入AppStorage里，所以开发者需要通过AppStorage才能获取环境变量的值。
在阅读本文档前，建议提前阅读：AppStorage。
Environment内置参数
使用场景
[h2]从UI中访问Environment参数
 使用Environment.envProp将设备运行的环境变量存入AppStorage中。 // 将设备的语言code存入AppStorage，默认值为en\nEnvironment.envProp('languageCode', 'en'); 可以使用@StorageProp链接到Component中。 @StorageProp('languageCode') lang : string = 'en'; 
设备环境到Component的更新链：Environment --> AppStorage -->Component。
@StorageProp关联的环境参数可以在本地更改，但不能同步回AppStorage中，因为应用对环境变量参数是不可写的，只能在Environment中查询。
// 将设备languageCode存入AppStorage中\nEnvironment.envProp('languageCode', 'en');\n\n@Entry\n@Component\nstruct Index {\n  @StorageProp('languageCode') languageCode: string = 'en';\n\n  build() {\n    Row() {\n      Column() {\n        // 输出当前设备的languageCode\n        Text(this.languageCode)\n      }\n    }\n  }\n}
[h2]应用逻辑使用Environment
// 使用Environment.EnvProp将设备运行languageCode存入AppStorage中；\nEnvironment.envProp('languageCode', 'en');\n// 从AppStorage获取单向绑定的languageCode的变量\nconst lang: SubscribedAbstractProperty<string> = AppStorage.prop('languageCode');\n\nif (lang.get() === 'zh') {\n  console.info('你好');\n} else {\n  console.info('Hello!');\n}
限制条件
Environment和UIContext相关联，需要在UIContext明确的时候才可以调用。可以通过在runScopedTask里明确上下文。如果没有在UIContext明确的地方调用，将导致无法查询到设备环境数据。
// EntryAbility.ets\nimport { UIAbility } from '@kit.AbilityKit';\nimport { window } from '@kit.ArkUI';\n\nexport default class EntryAbility extends UIAbility {\n  onWindowStageCreate(windowStage: window.WindowStage) {\n    windowStage.loadContent('pages/Index');\n    let window = windowStage.getMainWindow()\n    window.then(window => {\n      let uicontext = window.getUIContext()\n      uicontext.runScopedTask(() => {\n        Environment.envProp('languageCode', 'en');\n      })\n    })\n  }\n}
