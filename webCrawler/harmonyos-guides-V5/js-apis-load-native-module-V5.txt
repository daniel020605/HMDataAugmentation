同步方式动态加载native模块
loadNativeModule接口的功能是同步方式动态加载native模块。它的主要目的是在需要某个native模块时才进行加载，从而避免在应用启动时加载不必要的模块。但是使用该接口时会产生加载so耗时，需要开发者自行评估是否会对功能产生影响。
函数说明
loadNativeModule(moduleName: string): Object;
moduleName指的是待加载模块所在的HAP下module.json5中配置的名字。
loadNativeModule只局限于在UI主线程中进行模块加载。
该接口功能不论是加载常量字符串还是变量表达式入参，都需要配置依赖。
loadNativeModule支持的场景
使用示例
HAP加载系统库模块
let hilog: ESObject = loadNativeModule(\"@ohos.hilog\");\nhilog.info(0, \"testTag\", \"loadNativeModule ohos.hilog success\");
HAP加载Native库
libentry.so的index.d.ts文件如下
//index.d.ts\nexport const add: (a: number, b: number) => number;
1.在加载本地so库时，首先需要在oh-package.json5文件中配置dependencies项
{\n    \"dependencies\": {\n        \"libentry.so\": \"file:../src/main/cpp/types/libentry\"\n    }\n}
2.其次，还需要在build-profile.json5中进行配置
{\n    \"buildOption\" : {\n        \"arkOptions\" : {\n            \"runtimeOnly\" : {\n                \"packages\": [\n                    \"libentry.so\"\n                ]\n            }\n        }\n    }\n}
3.用loadNativeModule加载libentry.so，调用函数add
let module: ESObject = loadNativeModule(\"libentry.so\");\nlet sum: number = module.add(1, 2);
