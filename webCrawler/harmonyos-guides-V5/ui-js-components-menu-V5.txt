menu开发指导
提供菜单组件，作为临时性弹出窗口，用于展示用户可执行的操作，具体用法请参考menu。
创建menu组件
在pages/index目录下的hml文件中创建一个menu组件，添加target、type、title属性。
<!-- xxx.hml-->\n<div class=\"container\">\n  <text class=\"title-text\" id=\"textId\">show menu</text>\n  <menu target=\"textId\" type=\"click\" title=\"title\">\n    <option value=\"Item 1\">Item 1</option>\n    <option value=\"Item 2\">Item 2</option>\n    <option value=\"Item 3\">Item 3</option>\n  </menu>\n</div>
/* xxx.css */\n.container{\n  width: 100%;\n  height: 100%; \n  flex-direction: column;\n  background-color: #F1F3F5;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n.title-text{\n  font-size: 35px;\n}
 menu仅支持option子组件。 menu组件不支持focusable、disabled属性。 
设置样式
为menu组件设置样式，例如字体颜色、大小、字符间距等。
<!-- xxx.hml-->\n<div class=\"container\">\n  <text class=\"title-text\" id=\"textId\">show menu</text>\n  <menu target=\"textId\" type=\"click\" title=\"title\">\n    <option value=\"Item 1\">Item 1</option>\n    <option value=\"Item 2\">Item 2</option>\n    <option value=\"Item 3\">Item 3</option>\n  </menu>\n</div>
/* xxx.css */\n.container{\n  width: 100%;\n  height: 100%; \n  flex-direction: column;\n  background-color: #F1F3F5;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n.title-text{\n  font-size: 35px;\n  background-color: #5a5aee;\n  color: white;\n  width: 70%;\n  text-align: center;\n  height: 85px;\n  border-radius: 12px;\n}\nmenu{\n  text-color: blue;\n  font-size: 35px;\n  letter-spacing: 2px;\n}\noption{\n  color: #6a6aef;\n  font-size: 30px;\n}
绑定事件
为menu组件绑定onselected事件（菜单中某个值被点击选中时触发）和oncancel事件（取消操作时触发），点击text组件调用show方法可设置menu组件的坐标。
<!-- xxx.hml-->\n<div class=\"container\">\n  <text  class=\"title-text\" id=\"textId\" onclick=\"textClick\">show menu</text>\n  <menu  title=\"title\" onselected=\"select\" oncancel=\"cancel\" id=\"menuId\">\n    <option value=\"Item 1\">Item 1</option>\n    <option value=\"Item 2\">Item 2</option>\n    <option value=\"Item 3\">Item 3</option>\n  </menu>\n</div>
/* xxx.css */\n.container{\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  background-color: #F1F3F5;\n  width: 100%;\n}\n.title-text{\n  font-size: 35px;\n  background-color: #5a5aee;\n  color: white;\n  width: 70%;\n  text-align: center;\n  height: 85px;\n  border-radius: 12px;\n  margin-top: 500px;\n  margin-left: 15%;\n}\nmenu{\n  text-color: blue;\n  font-size: 35px;\n  letter-spacing: 2px;\n}\noption{\n  color: #6a6aef;\n  font-size: 30px;\n}
// xxx.js\nimport promptAction from '@ohos.promptAction';\nexport default {\n  select(e) {\n    promptAction.showToast({\n      message: e.value\n    })\n  },\n  cancel(){\n    promptAction.showToast({\n      message: \"cancel\"\n    })\n  },\n  textClick() {\n    this.$element(\"menuId\").show({x:175,y:590});\n  },\n}
场景示例
本场景中开发者可点击toggle组件修改文字颜色，选择menu组件修改渐变色块大小。
<!-- xxx.hml-->\n<div class=\"container\">\n    <div class=\"contentToggle\">\n        <toggle class=\"toggle\" for=\"{{item in togglesList}}\" onclick=\"toggleClick({{$idx}})\" checked=\"{{item.checked}}\">{{item.name}}</toggle>\n    </div>\n    <text class=\"size\" style=\"color: {{color}};\">width:{{width}},height:{{height}}</text>\n    <div style=\"width: {{width}}px;height: {{height}}px; background-color: cornflowerblue;\"></div>\n    <text id=\"menuId\" class=\"text\">change size</text>\n    <menu onselected=\"select\" oncancel=\"cancel\" target=\"menuId\">\n        <option value=\"{{item.value}}\" for=\"item in optionList\">{{item.text}}</option>\n    </menu>\n</div>
/* xxx.css */\n.container{\n  flex-direction: column;\n  background-color: #F1F3F5;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n}\n.contentToggle{\n  width: 100%;\n  justify-content: space-around;\n}\n.toggle{\n  padding: 10px;\n  height:80px;\n  font-size: 35px;\n  width: 200px;\n  height: 85px;\n}\n.size{\n  width: 100%;\n  height: 200px;\n  text-align: center;\n  font-size: 40px;\n  text-align: center;\n}\n.text{\n  width: 300px;\n  height: 80px;\n  background-color: #615def;\n  color: white;\n  font-size: 35px;\n  text-align: center;\n  margin-top: 100px;\n}\nmenu{\n  text-color: blue;\n  font-size: 35px;\n  letter-spacing: 2px;\n}\noption{\n  color: #6a6aef;\n  font-size: 30px;\n}
// xxx.js\nexport default {\n  data:{\n    fresh: false,\n    width: 200,\n    height: 200,\n    color: '',\n    optionList:[\n      {text:'200 x 200',value:2},\n      {text:'300 x 300',value:3},\n      {text:'500 x 500',value:5},\n    ],\n    togglesList:[\n      {name:\"red\", checked:false},\n      {name:\"blue\", checked:false},\n      {name: \"black\", checked:false},\n    ],\n  },\n  toggleClick(index) {   \n    for(let i=0;i<this.togglesList.length;i++) {     \n      if (i == index) {        \n      this.color = this.togglesList[index].name;        \n      this.togglesList[i].checked = true;      \n      }else {        \n        this.togglesList[i].checked = false;      \n      }    \n    }  \n  },\n  select(e) {\n    this.width = e.value * 100;\n    this.height = e.value * 100;\n  }\n}
