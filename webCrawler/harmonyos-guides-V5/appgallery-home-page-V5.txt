应用市场首页
本小节将以应用市场首页为例，介绍如何使用自适应布局能力和响应式布局能力适配不同尺寸窗口。
页面设计
一个典型的应用市场首页的UX设计如下所示。
观察应用市场首页的页面设计，不同断点下的页面设计有较多相似的地方。
据此，我们可以将页面分拆为多个组成部分。
 底部/侧边导航栏 标题栏与搜索栏 运营横幅 快捷入口 精品应用 
接下来我们逐一分析各部分的实现。
底部/侧边导航栏
在sm和md断点下，导航栏在底部；在lg断点下，导航栏在左侧。可以通过Tab组件的barPosition和vertical属性控制TabBar的位置，同时还可以通过barWidth和barHeight属性控制TabBar的尺寸。
//BreakpointSystem.ets\nimport mediaQuery from '@ohos.mediaquery'\n\nexport default class BreakpointSystem {\n  private currentBreakpoint: string = 'md'\n  private smListener?: mediaQuery.MediaQueryListener\n  private mdListener?:mediaQuery.MediaQueryListener\n  private lgListener?: mediaQuery.MediaQueryListener\n\n  private updateCurrentBreakpoint(breakpoint: string) {\n    if (this.currentBreakpoint !== breakpoint) {\n      this.currentBreakpoint = breakpoint\n      AppStorage.Set<string>('currentBreakpoint', this.currentBreakpoint)\n    }\n  }\n\n  private isBreakpointSM = (mediaQueryResult:mediaQuery.MediaQueryResult) => {\n    if (mediaQueryResult.matches) {\n      this.updateCurrentBreakpoint('sm')\n    }\n  }\n\n  private isBreakpointMD = (mediaQueryResult:mediaQuery.MediaQueryResult) => {\n    if (mediaQueryResult.matches) {\n      this.updateCurrentBreakpoint('md')\n    }\n  }\n\n  private isBreakpointLG = (mediaQueryResult:mediaQuery.MediaQueryResult) => {\n    if (mediaQueryResult.matches) {\n      this.updateCurrentBreakpoint('lg')\n    }\n  }\n\n  public register() {\n    this.smListener = mediaQuery.matchMediaSync('(320vp<=width<600vp)')\n    this.smListener.on('change', this.isBreakpointSM)\n    this.mdListener = mediaQuery.matchMediaSync('(600vp<=width<840vp)')\n    this.mdListener.on('change', this.isBreakpointMD)\n    this.lgListener = mediaQuery.matchMediaSync('(840vp<=width)')\n    this.lgListener.on('change', this.isBreakpointLG)\n  }\n\n  public unregister() {\n    this.smListener?.off('change', this.isBreakpointSM)\n    this.mdListener?.off('change', this.isBreakpointMD)\n    this.lgListener?.off('change', this.isBreakpointLG)\n  }\n}
import Home from '../common/Home'; //组件请参考相关实例\nimport TabBarItem from '../common/TabBarItem';\nimport BreakpointSystem from '../common/BreakpointSystem'\n\n@Entry\n@Component\nstruct Index {\n  @State currentIndex: number = 0\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = 'md'\n  private breakpointSystem: BreakpointSystem = new BreakpointSystem()\n  private onTabChange = (index: number) => {\n    this.currentIndex = index\n  }\n\n  aboutToAppear() {\n    this.breakpointSystem.register()\n  }\n\n  aboutToDisappear() {\n    this.breakpointSystem.unregister()\n  }\n\n  @Builder\n  tabItem(index: number, title: Resource, icon: Resource, iconSelected: Resource) {\n    TabBarItem({\n      index: index,\n      currentIndex: this.currentIndex,\n      title: title,\n      icon: icon,\n      iconSelected: iconSelected\n    })\n  }\n\n  build() {\n    // 设置TabBar在主轴方向起始或结尾位置\n    Tabs({ barPosition: this.currentBreakpoint === \"lg\" ? BarPosition.Start : BarPosition.End }) {\n      // 首页\n      TabContent() {\n        Home()\n      }\n      .tabBar(this.tabItem(0, $r('app.string.tabBar1'), $r('app.media.ic_home_normal'),\n        $r('app.media.ic_home_actived')))\n\n      TabContent() {\n      }.tabBar(this.tabItem(1, $r('app.string.tabBar2'), $r('app.media.ic_app_normal'), $r('app.media.ic_app_actived')))\n\n      TabContent() {\n      }\n      .tabBar(this.tabItem(2, $r('app.string.tabBar3'), $r('app.media.ic_game_normal'),\n        $r('app.media.ic_mine_actived')))\n\n      TabContent() {\n      }\n      .tabBar(this.tabItem(3, $r('app.string.tabBar4'), $r('app.media.ic_search_normal'),\n        $r('app.media.ic_search_actived')))\n\n      TabContent() {\n      }\n      .tabBar(this.tabItem(4, $r('app.string.tabBar4'), $r('app.media.ic_mine_normal'),\n        $r('app.media.ic_mine_actived')))\n    }\n    .backgroundColor('#F1F3F5')\n    .barMode(BarMode.Fixed)\n    .barWidth(this.currentBreakpoint === \"lg\" ? 96 : '100%')\n    .barHeight(this.currentBreakpoint === \"lg\" ? '60%' : 56)\n    // 设置TabBar放置在水平或垂直方向\n    .vertical(this.currentBreakpoint === \"lg\")\n  }\n}
另外在sm及lg断点下，TabBar中各个Item的图标和文字是按照垂直方向排布的，在md断点下，TabBar中各个Item的图标和文字是按照水平方向排布的。
interface GeneratedObjectLiteralInterface_1 {\n  NORMAL: string;\n  SELECTED: string;\n}\n\nconst TitleColor: GeneratedObjectLiteralInterface_1 = {\n  NORMAL: '#999',\n  SELECTED: '#0A59F7'\n}\n\n@Component\nexport default struct TabBarItem {\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = 'md'\n  @Prop currentIndex: number\n  private index?:number\n  private icon?:Resource\n  private iconSelected?:Resource\n  private title?:Resource\n\n  private getIcon() {\n    return this.currentIndex === this.index ? this.iconSelected : this.icon\n  }\n\n  private getFontColor() {\n    return this.currentIndex === this.index ? TitleColor.SELECTED : TitleColor.NORMAL\n  }\n\n  build() {\n    if (this.currentBreakpoint !== 'md' ) {\n      Column() {\n        Image(this.getIcon())\n          .width(24)\n          .height(24)\n          .margin(5)\n          .objectFit(ImageFit.Contain)\n        Text(this.title)\n          .fontColor(this.getFontColor())\n          .fontSize(12)\n          .fontWeight(500)\n      }.justifyContent(FlexAlign.Center).height('100%').width('100%')\n    } else {\n      Row() {\n        Image(this.getIcon())\n          .width(24)\n          .height(24)\n          .margin(5)\n          .objectFit(ImageFit.Contain)\n        Text(this.title)\n          .fontColor(this.getFontColor())\n          .fontSize(12)\n          .fontWeight(500)\n      }.justifyContent(FlexAlign.Center).height('100%').width('100%')\n    }\n  }\n}
标题栏与搜索栏
标题栏和搜索栏，在sm和md断点下分两行显示，在lg断点下单行显示，可以通过栅格实现。在sm和md断点下，标题栏和搜索栏占满12列，此时会自动换行显示。在lg断点下，标题栏占8列而搜索栏占4列，此时标题栏和搜索栏在同一行中显示。
@Component\nexport default struct IndexHeader {\n\n  @Builder searchBar() {\n    Stack({alignContent: Alignment.End}) {\n      TextInput({ placeholder: $r('app.string.search') })\n        .placeholderColor('#FF000000')\n        .placeholderFont({ size: 16, weight: 400 })\n        .textAlign(TextAlign.Start)\n        .caretColor('#FF000000')\n        .width('100%')\n        .height(40)\n        .fontWeight(400)\n        .padding({ top: 9, bottom: 9 })\n        .fontSize(16)\n        .backgroundColor(Color.White)\n\n      Image($r('app.media.ic_public_search'))\n        .width(16)\n        .height(16)\n        .margin({ right: 20 })\n    }.height(56).width('100%')\n  }\n\n  @Builder titleBar() {\n    Text($r('app.string.tabBar1'))\n      .fontSize(24)\n      .fontWeight(500)\n      .fontColor('#18181A')\n      .textAlign(TextAlign.Start)\n      .height(56)\n      .width('100%')\n  }\n\n  build() {\n    // 借助栅格实现标题栏和搜索栏在不同断点下的不同布局效果。\n    GridRow() {\n      GridCol({ span: { xs: 12, lg: 8 } }) {\n        this.titleBar()\n      }\n      GridCol({ span: { xs: 12, lg: 4 } }) {\n        this.searchBar()\n      }\n    }\n    .width('100%')\n  }\n}
运营横幅
不同断点下的运营横幅，sm断点下显示一张图片，md断点下显示两张图片，lg断点下显示三张图片。可以通过Swiper组件的displayCount属性实现目标效果。
@Component\nexport default struct IndexSwiper {\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = 'md';\n  @Builder swiperItem(imageSrc:Resource) {\n    Image(imageSrc)\n      .width('100%')\n      .aspectRatio(2.5)\n      .objectFit(ImageFit.Fill)\n  }\n\n  build() {\n    Swiper() {\n      this.swiperItem($r('app.media.ic_public_swiper1'))\n      this.swiperItem($r('app.media.ic_public_swiper2'))\n      this.swiperItem($r('app.media.ic_public_swiper3'))\n      // ...\n    }\n    .autoPlay(true)\n    .indicator(false)\n    .itemSpace(10)\n    // 配置不同断点下运行横幅中展示的图片数量\n    .displayCount(this.currentBreakpoint === 'sm' ? 1 : (this.currentBreakpoint === 'md' ? 2 : 3))\n    .width('100%')\n    .padding({ left: 12, right: 12, bottom: 16, top: 16 })\n  }\n}
快捷入口
在不同的断点下，快捷入口的5个图标始终均匀排布，这是典型的均分能力使用场景。图标资源文件获取。
// /model/HomeData   在resourse文件中放置以下资源文件，\ninterface AppItem{\n  id:string;\n  title:Resource;\n  image:Resource;\n}\n\nconst appList:AppItem[] = [\n  { id: '0', title: $r('app.string.public_app1'), image: $r('app.media.ic_public_app1') },\n  { id: '1', title: $r('app.string.public_app2'), image: $r('app.media.ic_public_app2') },\n  { id: '2', title: $r('app.string.public_app3'), image: $r('app.media.ic_public_app3') },\n  { id: '3', title: $r('app.string.public_app4'), image: $r('app.media.ic_public_app4') },\n  { id: '4', title: $r('app.string.public_app5'), image: $r('app.media.ic_public_app5') },\n  { id: '5', title: $r('app.string.public_app6'), image: $r('app.media.ic_public_app6') },\n  { id: '6', title: $r('app.string.public_app7'), image: $r('app.media.ic_public_app7') },\n  { id: '7', title: $r('app.string.public_app8'), image: $r('app.media.ic_public_app8') },\n  { id: '8', title: $r('app.string.public_app9'), image: $r('app.media.ic_public_app9') },\n  { id: '9', title: $r('app.string.public_app10'), image: $r('app.media.ic_public_app10') },\n  { id: '10', title: $r('app.string.public_app1'), image: $r('app.media.ic_public_app1') },\n  { id: '11', title: $r('app.string.public_app1'), image: $r('app.media.ic_public_app1') },\n  { id: '12', title: $r('app.string.public_app2'), image: $r('app.media.ic_public_app2') },\n  { id: '13', title: $r('app.string.public_app3'), image: $r('app.media.ic_public_app3') },\n  { id: '14', title: $r('app.string.public_app4'), image: $r('app.media.ic_public_app4') },\n  { id: '15', title: $r('app.string.public_app5'), image: $r('app.media.ic_public_app5') },\n  { id: '16', title: $r('app.string.public_app6'), image: $r('app.media.ic_public_app6') },\n  { id: '17', title: $r('app.string.public_app7'), image: $r('app.media.ic_public_app7') },\n  { id: '18', title: $r('app.string.public_app8'), image: $r('app.media.ic_public_app8') },\n  { id: '19', title: $r('app.string.public_app9'), image: $r('app.media.ic_public_app9') },\n  { id: '20', title: $r('app.string.public_app10'), image: $r('app.media.ic_public_app10') }\n]\n\nconst gameList:AppItem[] = [\n  { id: '21', title: $r('app.string.public_game1'), image: $r('app.media.ic_public_game1') },\n  { id: '22', title: $r('app.string.public_game2'), image: $r('app.media.ic_public_game2') },\n  { id: '23', title: $r('app.string.public_game3'), image: $r('app.media.ic_public_game3') },\n  { id: '24', title: $r('app.string.public_game4'), image: $r('app.media.ic_public_game4') },\n  { id: '25', title: $r('app.string.public_game5'), image: $r('app.media.ic_public_game5') },\n  { id: '26', title: $r('app.string.public_game6'), image: $r('app.media.ic_public_game6') },\n  { id: '27', title: $r('app.string.public_game7'), image: $r('app.media.ic_public_game7') },\n  { id: '28', title: $r('app.string.public_game8'), image: $r('app.media.ic_public_game8') },\n  { id: '29', title: $r('app.string.public_game9'), image: $r('app.media.ic_public_game9') },\n  { id: '30', title: $r('app.string.public_game10'), image: $r('app.media.ic_public_game10') },\n  { id: '31', title: $r('app.string.public_game1'), image: $r('app.media.ic_public_game1') },\n  { id: '32', title: $r('app.string.public_game2'), image: $r('app.media.ic_public_game2') },\n  { id: '33', title: $r('app.string.public_game3'), image: $r('app.media.ic_public_game3') },\n  { id: '34', title: $r('app.string.public_game4'), image: $r('app.media.ic_public_game4') },\n  { id: '35', title: $r('app.string.public_game5'), image: $r('app.media.ic_public_game5') },\n  { id: '36', title: $r('app.string.public_game6'), image: $r('app.media.ic_public_game6') },\n  { id: '37', title: $r('app.string.public_game7'), image: $r('app.media.ic_public_game7') },\n  { id: '38', title: $r('app.string.public_game8'), image: $r('app.media.ic_public_game8') },\n  { id: '39', title: $r('app.string.public_game9'), image: $r('app.media.ic_public_game9') },\n  { id: '40', title: $r('app.string.public_game10'), image: $r('app.media.ic_public_game10') }\n]\n\nconst entranceIcons:AppItem[]= [\n  { id: '41',title: $r('app.string.home_categories'), image: $r('app.media.ic_home_categories') },\n  { id: '42',title: $r('app.string.home_top'), image: $r('app.media.ic_home_top') },\n  { id: '43',title: $r('app.string.home_fast'), image: $r('app.media.ic_home_fast') },\n  { id: '44',title: $r('app.string.home_flower'), image: $r('app.media.ic_home_flower') },\n  { id: '45',title: $r('app.string.home_education'), image: $r('app.media.ic_home_education') },\n]\n\nexport { entranceIcons, appList, gameList }
//model/HomeDataType\ninterface AllIcons {\n  image: Resource,\n  title: Resource,\n}\n\ninterface AppItem  {\n  id: string,\n  title: Resource,\n  image: Resource\n}\n\nclass MyAppSource implements IDataSource {\n  private dataArray: AppItem[] = []\n  private listeners: DataChangeListener[] = []\n\n  constructor(element: AppItem[]) {\n    for (let index = 0; index < element.length; index++) {\n      this.dataArray.push(element[index])\n    }\n  }\n\n  public totalCount(): number {\n    return this.dataArray.length\n  }\n\n  public getData(index: number): AppItem {\n    return this.dataArray[index]\n  }\n\n  public addData(index: number, data: AppItem): void {\n    this.dataArray.splice(index, 0, data)\n    this.notifyDataAdd(index)\n  }\n\n  public pushData(data: AppItem): void {\n    this.dataArray.push(data)\n    this.notifyDataAdd(this.dataArray.length - 1)\n  }\n\n  registerDataChangeListener(listener: DataChangeListener): void {\n    if (this.listeners.indexOf(listener) < 0) {\n      this.listeners.push(listener)\n    }\n  }\n\n  unregisterDataChangeListener(listener: DataChangeListener): void {\n    const pos = this.listeners.indexOf(listener);\n    if (pos >= 0) {\n      this.listeners.splice(pos, 1)\n    }\n  }\n\n  notifyDataReload(): void {\n    this.listeners.forEach(listener => {\n      listener.onDataReloaded()\n    })\n  }\n\n  notifyDataAdd(index: number): void {\n    this.listeners.forEach(listener => {\n      listener.onDataAdd(index)\n    })\n  }\n\n  notifyDataChange(index: number): void {\n    this.listeners.forEach(listener => {\n      listener.onDataChange(index)\n    })\n  }\n\n  notifyDataDelete(index: number): void {\n    this.listeners.forEach(listener => {\n      listener.onDataDelete(index)\n    })\n  }\n\n  notifyDataMove(from: number, to: number): void {\n    this.listeners.forEach(listener => {\n      listener.onDataMove(from, to)\n    })\n  }\n}\n\nexport { AllIcons, MyAppSource, AppItem }
import { entranceIcons } from '../model/HomeData';\nimport { AllIcons } from '../model/HomeDataType';\n\n@Component\nexport default struct IndexEntrance {\n  build() {\n    // 将justifyContent参数配置为FlexAlign.SpaceEvenly实现均分布局\n    Row() {\n      ForEach(entranceIcons, (icon: AllIcons) => {\n        // 各快捷入口的图标及名称\n        Column() { \n          // ... \n          }\n      })\n    }\n    .width('100%')\n    .height(64)\n    .justifyContent(FlexAlign.SpaceEvenly)\n    .padding({ left: 12, right: 12 })\n  }\n}
精品应用
随着可用显示区域的增加，精品应用中显示的图标数量也不断增加，这是典型的延伸能力使用场景。精品游戏的实现与精品应用类似，不再展开分析。
import { AppItem, MyAppSource } from '../model/HomeDataType';\n\n@Component\nexport default struct IndexApps {\n  private title?: Resource;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = 'md';\n  private apps: AppItem[] = [];\n  @Builder\n  appListHeader() {\n    Row() {\n      Text(this.title)\n        .width(100)\n        .fontSize(16)\n        .textAlign(TextAlign.Start)\n        .fontWeight(500)\n      Blank()\n      Text($r('app.string.more'))\n        .fontSize(14)\n        .textAlign(TextAlign.End)\n        .fontWeight(400)\n        .margin({ right: 2 })\n      Image($r('app.media.ic_public_arrow_right'))\n        .width(12)\n        .height(18)\n        .opacity(0.9)\n        .objectFit(ImageFit.Fill)\n    }\n    .margin({ bottom: 9, top: 9 })\n    .width('100%')\n    .alignItems(VerticalAlign.Bottom)\n  }\n\n  @Builder\n  appListItem(app:AppItem) {\n    Column() {\n      Image(app.image)\n        .width(this.currentBreakpoint === 'lg' ? 80 : 56)\n        .height(this.currentBreakpoint === 'lg' ? 80 : 56)\n        .margin({ bottom: 8 })\n      Text(app.title)\n        .width(this.currentBreakpoint === 'lg' ? 80 : 56)\n        .height(16)\n        .fontSize(12)\n        .textAlign(TextAlign.Center)\n        .fontColor('#18181A')\n        .margin({ bottom: 8 })\n      Text($r('app.string.install'))\n        .width(this.currentBreakpoint === 'lg' ? 80 : 56)\n        .height(28)\n        .fontColor('#0A59F7')\n        .textAlign(TextAlign.Center)\n        .borderRadius(this.currentBreakpoint === 'lg' ? 26 : 20)\n        .fontWeight(500)\n        .fontSize(12)\n        .padding({ top: 6, bottom: 6, left: 8, right: 8 })\n        .backgroundColor('rgba(0,0,0,0.05)')\n    }\n  }\n  build() {\n    Column() {\n      this.appListHeader()\n      // 借助List组件能力，实现延伸能力场景\n      List({ space: this.currentBreakpoint === 'lg' ? 44 : 20}) {\n        LazyForEach(new MyAppSource(this.apps), (app: AppItem)=> {\n          ListItem() {\n            // 每个应用的图标、名称及安装按钮\n            this.appListItem(app)\n          }\n        })\n      }\n      .width('100%')\n      .height(this.currentBreakpoint === 'lg' ? 140 : 120)\n      .listDirection(Axis.Horizontal)\n    }\n    .width('100%')\n    .height(this.currentBreakpoint === 'lg' ? 188 : 164)\n    .padding({ bottom: 8, left: 12, right: 12 })\n  }\n}
运行效果
将上述各页面主要部分组合在一起后，即可完成整体页面开发。
entry/src/main/ets                         // 代码区\n|---model\n|   |---HomeData.ets                       // 主页用到的图片资源\n|   |---HomeDataType.ets                   // 事件监听函数\n|---pages                                  \n|   |---index.ets                          // 首页\n|---common                                    \n|   |---BreakpointSystem.ets               // 媒体查询\n|   |---Home.ets                           // 主容器\n|   |---IndexApps.ets                      // app模块(包含安装，展示图片，更多功能)\n|   |---IndexContent.ets                   // 内容模块\n|   |---IndexEntrance.ets                  // 下一步模块(箭头跳转组件)\n|   |---IndexHeader.ets                    // 头部组件\n|   |---IndexSwiper.ets                    // 轮播图   \n|   |---TabBarItem.ets                     // 导航栏     \nentry/src/main/resources                   // 资源文件
import IndexSwiper from './IndexSwiper';\nimport IndexEntrance from './IndexEntrance';\nimport IndexApps from './IndexApps';\nimport { appList, gameList } from '../model/HomeData';\nimport IndexHeader from './IndexHeader';\n\n@Component\nstruct IndexContent {\n  // ...\n  build() {\n    List() {\n      // 运营横幅\n      ListItem() {\n        IndexSwiper()\n      }\n      // 快捷入口\n      ListItem() {\n        IndexEntrance()\n      }\n      // 精品应用\n      ListItem() {\n        IndexApps({ title: $r('app.string.boutique_application'), apps: appList })\n      }\n      // 精品游戏\n      ListItem() {\n        IndexApps({ title: $r('app.string.boutique_game'), apps: gameList })\n      }\n    }\n    .width(\"100%\")\n  }\n}\n\n@Entry\n@Component\nexport default struct Home {\n  // ...\n  build() {\n    Flex({ direction: FlexDirection.Column, justifyContent: FlexAlign.Start, alignItems: ItemAlign.Start }) {\n      // 标题栏和搜索栏\n      IndexHeader()\n      // 运营横幅、快捷入口、精品应用、精品游戏等\n      IndexContent()\n    }\n    .height('100%')\n    .backgroundColor(\"#F1F3F5\")\n  }\n}
本页面的实际运行效果如下图所示。
