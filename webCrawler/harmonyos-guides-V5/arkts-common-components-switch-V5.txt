切换按钮 (Toggle)
Toggle组件提供状态按钮样式、勾选框样式和开关样式，一般用于两种状态之间的切换。具体用法请参考Toggle。
创建切换按钮
Toggle通过调用接口来创建，接口调用形式如下：
Toggle(options: { type: ToggleType, isOn?: boolean })
其中，ToggleType为开关类型，包括Button、Checkbox和Switch，isOn为切换按钮的状态。
API version 11开始，Checkbox默认样式由圆角方形变为圆形。
接口调用有以下两种形式：
 创建不包含子组件的Toggle。 当ToggleType为Checkbox或者Switch时，用于创建不包含子组件的Toggle： Toggle({ type: ToggleType.Checkbox, isOn: false })\nToggle({ type: ToggleType.Checkbox, isOn: true })  Toggle({ type: ToggleType.Switch, isOn: false })\nToggle({ type: ToggleType.Switch, isOn: true })  创建包含子组件的Toggle。 当ToggleType为Button时，只能包含一个子组件，如果子组件有文本设置，则相应的文本内容会显示在按钮上。 Toggle({ type: ToggleType.Button, isOn: false }) {\n  Text('status button')\n    .fontColor('#182431')\n    .fontSize(12)\n}.width(100)\nToggle({ type: ToggleType.Button, isOn: true }) {\n  Text('status button')\n    .fontColor('#182431')\n    .fontSize(12)\n}.width(100)  
自定义样式
 通过selectedColor属性设置Toggle打开选中后的背景颜色。 Toggle({ type: ToggleType.Button, isOn: true }) {\n  Text('status button')\n  .fontColor('#182431')\n  .fontSize(12)\n}.width(100).selectedColor(Color.Pink)\nToggle({ type: ToggleType.Checkbox, isOn: true })\n  .selectedColor(Color.Pink)\nToggle({ type: ToggleType.Switch, isOn: true })\n  .selectedColor(Color.Pink)  通过switchPointColor属性设置Switch类型的圆形滑块颜色，仅对type为ToggleType.Switch生效。 Toggle({ type: ToggleType.Switch, isOn: false })\n  .switchPointColor(Color.Pink)\nToggle({ type: ToggleType.Switch, isOn: true })\n  .switchPointColor(Color.Pink)  
添加事件
除支持通用事件外，Toggle还用于选中和取消选中后触发某些操作，可以绑定onChange事件来响应操作后的自定义行为。
Toggle({ type: ToggleType.Switch, isOn: false })\n  .onChange((isOn: boolean) => {\n      if(isOn) {\n        // 需要执行的操作\n      }\n  })
场景示例
Toggle用于切换蓝牙开关状态。
// xxx.ets\nimport { promptAction } from '@kit.ArkUI';\n@Entry\n@Component\nstruct ToggleExample {\n  @State BOnSt:promptAction.ShowToastOptions = {'message': 'Bluetooth is on.'}\n  @State BOffSt:promptAction.ShowToastOptions = {'message': 'Bluetooth is off.'}\n  build() {\n    Column() {\n      Row() {\n        Text(\"Bluetooth Mode\")\n          .height(50)\n          .fontSize(16)\n      }\n      Row() {\n        Text(\"Bluetooth\")\n          .height(50)\n          .padding({left: 10})\n          .fontSize(16)\n          .textAlign(TextAlign.Start)\n          .backgroundColor(0xFFFFFF)\n        Toggle({ type: ToggleType.Switch })\n          .margin({left: 200, right: 10})\n          .onChange((isOn: boolean) => {\n            if(isOn) {\n              promptAction.showToast(this.BOnSt)\n            } else {\n              promptAction.showToast(this.BOffSt)\n            }\n          })\n      }\n      .backgroundColor(0xFFFFFF)\n    }\n    .padding(10)\n    .backgroundColor(0xDCDCDC)\n    .width('100%')\n    .height('100%')\n  }\n}
