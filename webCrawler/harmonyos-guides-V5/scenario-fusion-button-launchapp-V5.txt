打开APP Button
场景介绍
本章节将向您介绍如何使用Button组件打开APP功能，可调用对应Button组件打开另一个应用。
效果图展示
单击“打开APP”按钮，出现提示弹窗，单击“允许”，跳转至新的应用界面。
弹窗是否弹出以及弹窗效果与跳转目标APP相关。
开发步骤
导入Scenario Fusion Kit模块以及相关公共模块。import { FunctionalButton, functionalButtonComponentManager } from '@kit.ScenarioFusionKit';\nimport { hilog } from '@kit.PerformanceAnalysisKit'; 在容器中声明FunctionalButton，指定Button的openType，并设置对应的回调函数，代码如下：@Entry\n@Component\nstruct Index {\n  build() {\n    Row() {\n      Column() {\n        // 声明FunctionalButton\n        FunctionalButton({\n          params: {\n            // OpenType.LAUNCH_APP表示Button为打开APP类型\n            openType: functionalButtonComponentManager.OpenType.LAUNCH_APP,\n            label: '打开APP',\n            // OpenType为“functionalButtonComponentManager.OpenType.LAUNCH_APP”时，appParam参数必填\n            appParam: {\n              bundleName: \"xxx\",\n              abilityName: \"xxx\"\n            },\n            // 调整Button样式\n            styleOption: {\n              styleConfig: new functionalButtonComponentManager.ButtonConfig()\n                .fontSize(20)\n                .fontColor(Color.Black)\n            },\n          },\n          // OpenType为“LAUNCH_APP”时，回调必须选择“onLaunchAPP”\n          controller: new functionalButtonComponentManager.FunctionalButtonController().onLaunchApp((err) => {\n            if (err) {\n              // 错误日志处理\n              hilog.error(0x0000, \"testTag\", \"error： %{public}d %{public}s\", err.code, err.message);\n              return;\n            }\n            // 成功日志处理，成功时无返回值\n            hilog.info(0x0000, \"testTag\", \"succeeded in launching app\");\n          })\n        })\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n}  openType参数填写“functionalButtonComponentManager.OpenType.LAUNCH_APP”指定Button为打开APP类型。openType为“functionalButtonComponentManager.OpenType.LAUNCH_APP”时，appParam参数必填。“bundleName”为包名，“abilityName”为Ability名称。controller参数必须对应填写“new functionalButtonComponentManager.FunctionalButtonController().onLaunchApp”。 其他参数请参考：FunctionalButton（Button组件）。  
