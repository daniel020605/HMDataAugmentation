地图截图
本章节将向您介绍如何实现地图截图功能。
地图截图指对当前屏幕显示区域进行截屏，支持对地图、覆盖物、Logo进行屏幕截图。
接口说明
以下是地图截图相关接口，以下功能主要由snapshot提供，更多接口及使用方法请参见接口文档。
接口名
描述
snapshot(): Promise<image.PixelMap>
地图截图。
开发步骤
 导入相关模块。import { MapComponent, mapCommon, map } from '@kit.MapKit';\nimport { AsyncCallback } from '@kit.BasicServicesKit';\nimport { image } from '@kit.ImageKit'; 调用snapshot方法对当前屏幕进行截图。@Entry\n@Component\nstruct HuaweiMapDemo {\n  private mapOptions?: mapCommon.MapOptions;\n  private callback?: AsyncCallback<map.MapComponentController>;\n  private mapController?: map.MapComponentController;\n  @State image?: image.PixelMap = undefined;\n\n  aboutToAppear(): void {\n    // 地图初始化参数，设置地图中心点坐标及层级\n    this.mapOptions = {\n      position: {\n        target: {\n          latitude: 39.9,\n          longitude: 116.4\n        },\n        zoom: 10\n      }\n    };\n\n    // 地图初始化的回调\n    this.callback = async (err, mapController) => {\n      if (!err) {\n        // 获取地图的控制器类，用来操作地图\n        this.mapController = mapController;\n      }\n    };\n  }\n\n  build() {\n    Stack() {\n      Column() {\n        MapComponent({ mapOptions: this.mapOptions, mapCallback: this.callback })\n          .width('100%')\n          .height('50%');\n\n        Scroll(new Scroller()) {\n          Column() {\n            Image(this.image)\n              .objectFit(ImageFit.Auto)\n              .border({ width: 1, color: Color.Red }).width(\"100%\")\n            Button(\"获取截图\")\n              .margin({ left: 10 })\n              .fontSize(12)\n              .onClick(async () => {\n                if (this.mapController) {\n                  let pixelMap = await this.mapController.snapshot();\n                  this.image = pixelMap;\n                }\n              });\n          }\n        }.width('70%').height(\"50%\")\n      }.width('100%')\n    }.height('100%')\n  }\n} 
