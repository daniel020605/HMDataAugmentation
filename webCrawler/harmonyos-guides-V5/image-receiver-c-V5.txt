使用Image_NativeModule完成图片接收器
图像接收类，用于获取组件surface id、接收最新的图片和读取下一张图片、释放ImageReceiver实例。
开发步骤
[h2]添加依赖
在进行应用开发之前，开发者需要打开native工程的src/main/cpp/CMakeLists.txt，在target_link_libraries依赖中添加libohimage.so、libimage_receiver.so、libnative_image.so以及日志依赖libhilog_ndk.z.so。
target_link_libraries(entry PUBLIC libhilog_ndk.z.so libohimage.so libimage_receiver.so libnative_image.so)
[h2]Native接口调用
具体接口说明请参考API文档。
在hello.cpp中实现C Native API接口调用逻辑，示例代码如下：
#include <hilog/log.h>\n#include <multimedia/image_framework/image/image_native.h>\n#include <multimedia/image_framework/image/image_receiver_native.h>\n\n#undef LOG_DOMAIN\n#define LOG_DOMAIN 0x3200\n\n#undef LOG_TAG\n#define LOG_TAG \"MY_TAG\"\n\n#define IMAGE_WIDTH 320\n#define IMAGE_HEIGHT 480\n#define IMAGE_CAPACITY 2\n\nstatic void OnCallback(OH_ImageReceiverNative *receiver)\n{\n    OH_LOG_INFO(LOG_APP, \"ImageReceiverNativeCTest buffer avaliable.\");\n}\n\nstatic void ImageReceiverNativeCTest()\n{\n    // 创建 OH_ImageReceiverOptions 实例\n    OH_ImageReceiverOptions* options = nullptr;\n    Image_ErrorCode errCode = OH_ImageReceiverOptions_Create(&options);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest create image receiver options failed, errCode: %{public}d.\", errCode);\n        return;\n    }\n\n    Image_Size imgSize;\n    imgSize.width = IMAGE_WIDTH;\n    imgSize.height = IMAGE_HEIGHT;\n\n    // 设置 OH_ImageReceiverOptions 的 size 属性\n    errCode = OH_ImageReceiverOptions_SetSize(options, imgSize);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest set image receiver options size failed, errCode: %{public}d.\", errCode);\n        OH_ImageReceiverOptions_Release(options);\n        return;\n    }\n\n    // 设置 OH_ImageReceiverOptions 的 capacity 属性\n    errCode = OH_ImageReceiverOptions_SetCapacity(options, IMAGE_CAPACITY);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest set image receiver options capacity failed, errCode: %{public}d.\", errCode);\n        OH_ImageReceiverOptions_Release(options);\n        return;\n    }\n\n    // 读取 OH_ImageReceiverOptions 的 size 属性\n    Image_Size imgSizeRead;\n    errCode = OH_ImageReceiverOptions_GetSize(options, &imgSizeRead);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest get image receiver options size failed, errCode: %{public}d.\", errCode);\n        OH_ImageReceiverOptions_Release(options);\n        return;\n    }\n\n    // 检查读取到的 size 值是否为设定值\n    if (imgSizeRead.width != IMAGE_WIDTH || imgSizeRead.height != IMAGE_HEIGHT) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest get image receiver options size failed, width: %{public}d, height: %{public}d.\", imgSizeRead.width, imgSizeRead.height);\n        OH_ImageReceiverOptions_Release(options);\n        return;\n    }\n\n    // 读取 OH_ImageReceiverOptions 的 capacity 属性\n    int32_t capacity = 0；\n    errCode = OH_ImageReceiverOptions_GetCapacity(options, &capacity);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest get image receiver options capacity failed, errCode: %{public}d.\", errCode);\n        OH_ImageReceiverOptions_Release(options);\n        return;\n    }\n\n    // 检查读取到的 capacity 值是否为设定值\n    if (capacity != IMAGE_CAPACITY) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest get image receiver options capacity failed, capacity: %{public}d.\", capacity);\n        OH_ImageReceiverOptions_Release(options);\n        return;\n    }\n\n    // 创建 OH_ImageReceiverNative 实例\n    OH_ImageReceiverNative* receiver = nullptr;\n    errCode = OH_ImageReceiverNative_Create(options, &receiver);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest create image receiver failed, errCode: %{public}d.\", errCode);\n        OH_ImageReceiverOptions_Release(options);\n        return;\n    }\n\n    // 注册一个回调事件，每当接收到新的图片，该回调事件就会响应。\n    uint64_t surfaceID = 0;\n    errCode = OH_ImageReceiverNative_On(receiver, OnCallback);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest image receiver on failed, errCode: %{public}d.\", errCode);\n        OH_ImageReceiverOptions_Release(options);\n        OH_ImageReceiverNative_Release(receiver);\n        return;\n    }\n\n    // 读取 OH_ImageReceiverNative 的 surfaceID 属性\n    uint64_t surfaceID = 0;\n    errCode = OH_ImageReceiverNative_GetReceivingSurfaceId(receiver, &surfaceID);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest get image receiver surfaceID failed, errCode: %{public}d.\", errCode);\n        OH_ImageReceiverOptions_Release(options);\n        OH_ImageReceiverNative_Release(receiver);\n        return;\n    }\n    OH_LOG_INFO(LOG_APP, \"ImageReceiverNativeCTest get image receiver surfaceID: %{public}llu.\", surfaceID);\n\n    // 读取 OH_ImageReceiverNative 的 size 属性\n    errCode = OH_ImageReceiverNative_GetSize(receiver, &imgSizeRead);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest get image receiver size failed, errCode: %{public}d.\", errCode);\n        OH_ImageReceiverOptions_Release(options);\n        OH_ImageReceiverNative_Release(receiver);\n        return;\n    }\n    OH_LOG_INFO(LOG_APP, \"ImageReceiverNativeCTest get image receiver size: width = %{public}d, height = %{public}d.\", imgSizeRead.width, imgSizeRead.height);\n\n    // 读取 OH_ImageReceiverNative 的 capacity 属性\n    errCode = OH_ImageReceiverNative_GetCapacity(receiver, &capacity);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest get image receiver capacity failed, errCode: %{public}d.\", errCode);\n        OH_ImageReceiverOptions_Release(options);\n        OH_ImageReceiverNative_Release(receiver);\n        return;\n    }\n    OH_LOG_INFO(LOG_APP, \"ImageReceiverNativeCTest get image receiver capacity: %{public}d.\", capacity);\n\n    // 读取 OH_ImageReceiverNative 的下一个图片对象\n    OH_ImageNative* image = nullptr;\n    errCode = OH_ImageReceiverNative_ReadNextImage(receiver, &image);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest get image receiver next image failed, errCode: %{public}d.\", errCode);\n        OH_ImageReceiverOptions_Release(options);\n        OH_ImageReceiverNative_Release(receiver);\n        return;\n    }\n\n    // 释放 OH_ImageNative 实例\n    errCode = OH_ImageNative_Release(image);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest release image native failed, errCode: %{public}d.\", errCode);\n    }\n\n    // 读取 OH_ImageReceiverNative 最新的图片对象\n    errCode = OH_ImageReceiverNative_ReadLatestImage(receiver, &image);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest get image receiver latest image failed, errCode: %{public}d.\", errCode);\n        OH_ImageReceiverOptions_Release(options);\n        OH_ImageReceiverNative_Release(receiver);\n        return;\n    }\n\n    // 释放 OH_ImageNative 实例\n    errCode = OH_ImageNative_Release(image);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest release image native failed, errCode: %{public}d.\", errCode);\n    }\n\n    // 释放 OH_ImageReceiverOptions 实例\n    errCode = OH_ImageReceiverOptions_Release(options);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest release image receiver options failed, errCode: %{public}d.\", errCode);\n    }\n\n    // 关闭被 OH_ImageReceiverNative_On 开启的回调事件。\n    errCode = OH_ImageReceiverNative_Off(receiver);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest image receiver off failed, errCode: %{public}d.\", errCode);\n    }\n\n    // 释放 OH_ImageReceiverOptions 实例\n    errCode = OH_ImageReceiverNative_Release(receiver);\n    if (errCode != IMAGE_SUCCESS) {\n        OH_LOG_ERROR(LOG_APP, \"ImageReceiverNativeCTest release image receiver failed, errCode: %{public}d.\", errCode);\n    }\n}
