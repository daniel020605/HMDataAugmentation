实践说明
示例：配置工程级和模块级的自定义参数并通过切换product来展示不同的message。
新建工程并创建一个har模块
在工程级别的build-profile.json5使用以下配置，目的是为了实现在所有模块中都可以使用到productMessage自定义参数。
通过切换不同的product从而使用到对应的productMessage值。
{\n  \"app\": {\n    \"products\": [\n      {\n        \"name\": \"default\",\n        \"signingConfig\": \"default\",\n        \"compatibleSdkVersion\": \"5.0.0(12)\",\n        \"runtimeOS\": \"HarmonyOS\",\n        \"buildOption\": {\n          \"arkOptions\": {\n            // 工程级自定义参数\n            \"buildProfileFields\": {\n              \"productMessage\": 'defaultMessage'\n            }\n          }\n        }\n      },\n      {\n        \"name\": \"mirror\",\n        \"signingConfig\": \"default\",\n        \"compatibleSdkVersion\": \"5.0.0(12)\",\n        \"runtimeOS\": \"HarmonyOS\",\n        \"buildOption\": {\n          \"arkOptions\": {\n            // 工程级自定义参数\n            \"buildProfileFields\": {\n              \"productMessage\": 'mirrorMessage'\n            }\n          }\n        }\n      },\n      {\n        \"name\": \"product\",\n        \"signingConfig\": \"default\",\n        \"compatibleSdkVersion\": \"5.0.0(12)\",\n        \"runtimeOS\": \"HarmonyOS\",\n        \"buildOption\": {\n          \"arkOptions\": {\n            // 工程级自定义参数\n            \"buildProfileFields\": {\n              \"productMessage\": 'productMessage'\n            }\n          }\n        }\n      }\n    ],\n    \"buildModeSet\": [\n      {\n        \"name\": \"debug\",\n      },\n      {\n        \"name\": \"release\"\n      }\n    ]\n  },\n  \"modules\": [\n    {\n      \"name\": \"entry\",\n      \"srcPath\": \"./entry\",\n      \"targets\": [\n        {\n          \"name\": \"default\",\n          \"applyToProducts\": [\n            \"default\",\n            \"product\",\n            \"mirror\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"har\",\n      \"srcPath\": \"./har\"\n    }\n  ]\n}
{\n  \"apiType\": \"stageMode\",\n  \"buildOption\": {\n    \"arkOptions\": {\n      // har模块的自定义参数\n      \"buildProfileFields\": {\n        \"targetMessage1\": 'this is target buildProfileValue1',\n        \"targetMessage2\": 'this is target buildProfileValue2'\n      }\n    }\n  },\n  \"buildOptionSet\": [\n    {\n      \"name\": \"release\",\n      \"arkOptions\": {\n        \"obfuscation\": {\n          \"ruleOptions\": {\n            \"enable\": true,\n            \"files\": [\n              \"./obfuscation-rules.txt\"\n            ]\n          },\n          \"consumerFiles\": [\n            \"./consumer-rules.txt\"\n          ]\n        }\n      },\n    },\n  ],\n  \"targets\": [\n    {\n      \"name\": \"default\"\n    }\n  ]\n}
在har模块的MainPage.ets中添加以下代码。
import BuildProfile from \"../../../../BuildProfile\"\n\n@Preview\n@Component\nexport struct MainPage {\n  // 默认赋值为工程级别BuildProfile自定义参数配置的productMessage\n  @State message: string = BuildProfile.productMessage\n  build() {\n    Row() {\n      Column() {\n        Flex({ direction: FlexDirection.Row, alignItems: ItemAlign.Start, justifyContent: FlexAlign.SpaceAround }) {\n          Button(\"Button 1\").width(\"40%\")\n            .onClick(() => {\n              // 点击展示自定义字段harMessage1\n              this.message = BuildProfile.targetMessage1;\n            })\n          Button(\"Button 2\").width(\"40%\")\n            .onClick(() => {\n              // 点击展示自定义字段harMessage2\n              this.message = BuildProfile.targetMessage2;\n            })\n        }.margin(20)\n        .width(315)\n        Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Start, justifyContent: FlexAlign.SpaceBetween }) {\n          Text(this.message)\n            .textAlign(TextAlign.Start)\n            .fontSize(12)\n            .border({ width: 1 })\n            .padding(10)\n            .width('100%')\n        }.height(600).width(350).padding({ left: 35, right: 35})\n      }\n    }\n  }\n}
在hap的oh-package.json5中引用本地的har模块。
{\n  \"name\": \"entry\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Please describe the basic information.\",\n  \"main\": \"\",\n  \"author\": \"\",\n  \"license\": \"\",\n  \"dependencies\": {\n    \"har\": \"file:../har\"\n  }\n}
在hap的Index.ets文件中用引用该har包并且使用MainPage方法。
import { MainPage } from \"har\"\n\n@Entry\n@Component\nstruct Index {\n  build() {\n    Row() {\n      MainPage()\n    }\n  }\n}
执行预览或签名后推包到设备调试
点击har模块执行以下按钮。
default模式下初始化的message为defaultMessage。
通过切换不同的product可以使用不同的自定义参数用来初始化message。
切换product为mirror。
可以观察到初始化参数为mirrorMessage：
点击不同的Button可以改变message为对应的自定义参数：
