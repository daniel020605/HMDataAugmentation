跨设备互通NDK开发指导
跨设备互通提供跨设备的相机、扫描、图库访问能力，平板或2in1设备可以调用手机的相机、扫描、图库等功能。
场景介绍
您通过此能力实现跨设备交互，可以使用其他设备的相机、扫描和图库功能。
约束与限制
需同时满足以下条件，才能使用该功能：
 设备限制  本端设备：HarmonyOS版本为HarmonyOS NEXT及以上的平板或2in1设备。 远端设备：HarmonyOS版本为HarmonyOS NEXT及以上、具有相机能力的手机或平板设备。  使用限制  双端设备需要登录同一华为账号。 双端设备需要打开WLAN和蓝牙开关。条件允许时，建议双端设备接入同一个局域网，可提升唤醒相机的速度。  
接口说明
在开发具体功能前，请先查阅参考文档。
接口名
描述
HMS_ServiceCollaboration_GetCollaborationDeviceInfos
获取跨设备互通可用的设备信息。
HMS_ServiceCollaboration_StartCollaboration
拉起跨设备互通能力。
HMS_ServiceCollaboration_StopCollaboration
取消跨设备互通能力。
开发步骤
1.引入头文件
#include \"service_collaboration/service_collaboration_api.h\"
find_library(\n    # Sets the name of the path variable.\n    service_collaboration-lib\n    # Specifies the name of the NDK library that\n    # you want CMake to locate.\n    libservice_collaboration_ndk.z.so\n)\ntarget_link_libraries(entry PUBLIC\n    ${service_collaboration-lib}\n)
#include \"service_collaboration/service_collaboration_api.h\"\n#include <thread>\n\nstatic int32_t OnEventProc(ServiceCollaborationEventCode code, uint32_t extraCode)\n{\n    return 0;\n}\nstatic int32_t OnDataCallbackProc(\n    ServiceCollaborationEventCode code, ServiceCollaborationDataType dataType, uint32_t dataSize, char* data)\n{\n    return 0;\n}\nint main(int argc, char* argv[])\n{\n    int two = 2;\n    int three = 3;\n    int filter = 1;\n    const int size = 3;\n    int shouldCancel = 0;\n    \n    // 构建所需跨设备互通能力，并调用HMS_ServiceCollaboration_GetCollaborationDeviceInfos接口获取设备信息\n    ServiceCollaborationFilterType serviceFilterTypes[size] = {TAKE_PHOTO, SCAN_DOCUMENT, IMAGE_PICKER};\n    ServiceCollaboration_CollaborationDeviceInfoSets* info = HMS_ServiceCollaboration_GetCollaborationDeviceInfos(3, serviceFilterTypes);\n    // 构建callback回调\n    ServiceCollaboration_SelectInfo taskInfo = { TAKE_PHOTO, { 0 } };\n    for (uint32_t i = 0; i < info->size; i++) {\n        ServiceCollaboration_CollaborationDeviceInfo *deviceInfo =\n            (ServiceCollaboration_CollaborationDeviceInfo *)&(info->deviceInfoSets[i]);\n        if (filter == 1) {\n            taskInfo.serviceFilterType = TAKE_PHOTO;\n        }\n        if (filter == two) {\n            taskInfo.serviceFilterType = SCAN_DOCUMENT;\n        }\n        if (filter == three) {\n            taskInfo.serviceFilterType = IMAGE_PICKER;\n        }\n        std::memcpy(taskInfo.deviceNetworkId, deviceInfo->deviceNetworkId, COLLABORATIONDEVICEINFO_DEVICENETWORKID_MAXLENGTH-1);\n    }\n    ServiceCollaborationCallback callback = {.OnEvent = OnEventProc, .OnDataCallback = OnDataCallbackProc};\n    // 传入拍照参数、callback回调并调用HMS_ServiceCollaboration_StartCollaboration接口\n    uint32_t id = HMS_ServiceCollaboration_StartCollaboration(&taskInfo, &callback);\n    std::this_thread::sleep_for(std::chrono::seconds(three));\n    if (shouldCancel) {\n        // 三秒后主动调用HMS_ServiceCollaboration_StopCollaboration关闭跨设备互通\n        int32_t ret = HMS_ServiceCollaboration_StopCollaboration(id);\n    }\n}
