播放音量管理
播放音量的管理主要包括对系统音量的管理和对音频流音量的管理。系统音量与音频流音量分别是指HarmonyOS系统的总音量和指定音频流的音量，其中音频流音量的大小受制于系统音量，管理两者的接口不同。
系统音量
管理系统音量的接口是AudioVolumeManager，在使用之前，需要使用getVolumeManager()获取AudioVolumeManager实例。
通过AudioVolumeManager只能获取音量信息及监听音量变化，不能主动调节系统音量。如果应用需要调节系统音量，可以使用音量面板调节系统音量。
import { audio } from '@kit.AudioKit';\n\nlet audioManager = audio.getAudioManager();\nlet audioVolumeManager = audioManager.getVolumeManager();
[h2]监听系统音量变化
通过设置监听事件，可以监听系统音量的变化：
import { audio } from '@kit.AudioKit';\n\naudioVolumeManager.on('volumeChange', (volumeEvent: audio.VolumeEvent) => {\n  console.info(`VolumeType of stream: ${volumeEvent.volumeType} `);\n  console.info(`Volume level: ${volumeEvent.volume} `);\n  console.info(`Whether to updateUI: ${volumeEvent.updateUi} `);\n});
[h2]使用音量面板调节系统音量
应用无法直接调节系统音量，可以通过系统音量面板，让用户通过界面操作来调节音量。当用户通过应用内音量面板调节音量时，系统会展示音量提示界面，显性地提示用户系统音量发生改变。
系统提供了ArkTS组件AVVolumePanel（音量面板），应用可以创建该组件，具体样例和介绍请查看AVVolumePanel参考文档。
音频流音量
管理音频流音量的接口是AVPlayer或AudioRenderer的setVolume()方法，使用AVPlayer设置音频流音量的示例代码如下：
let volume = 1.0;  // 指定的音量大小，取值范围为[0.00-1.00]，1表示最大音量\navPlayer.setVolume(volume);
使用AudioRenderer设置音频流音量的示例代码如下：
import { BusinessError } from '@kit.BasicServicesKit';\n\naudioRenderer.setVolume(0.5).then(() => {  // 音量范围为[0.0-1.0]\n  console.info('Invoke setVolume succeeded.');\n}).catch((err: BusinessError) => {  \n  console.error(`Invoke setVolume failed, code is ${err.code}, message is ${err.message}`);\n});
