配置文件
config.yaml 是 ohpm-repo 的重要文件，可以在其中修改默认参数配置，启动插件和扩展功能。ohpm-repo 私仓解压目录中的 conf 目录下带有一个默认配置文件 config.yaml，ohpm-repo 执行 install 命令时默认读取该文件。
ohpm-repo成功启动后修改配置文件方法：
首次启动ohpm-repo时执行install命令时已指定配置文件：找到指定的配置文件进行文件内容修改，然后重新执行install指定修改后的配置文件，再执行start启动ohpm-repo。首次启动ohpm-repo时执行install命令未指定配置文件：默认使用ohpm-repo压缩包解压路径下conf目录中的配置文件，修改该文件内容，然后重新执行install和start操作。
默认配置
##### server configuration section #####\nlisten: localhost:8088        # 建议修改为具体的ip/域名\n# listen:\n# - localhost:8088            # 监听本机环回地址\n# - http://localhost:8088     # 监听本机环回地址\n# - 0.0.0.0:8088              # 监听本机所有地址 (INADDR_ANY)\n# 协议可配置 http 或者 https，默认为 http\n# port: 1-65535(Window系统)/ 1024-65535(Linux或Mac系统）\n\n# 可选 (listen 为 https 协议时必须配置)\nhttps_key: ''                 # https 服务使用的 key 的路径  (不配置默认为'')\nhttps_cert: ''                # https 服务使用的 crt 的路径  (不配置默认为'')\n\n##### server deploy root section #####\ndeploy_root: ''                # 安装根目录 (不配置默认为 `<现有用户home目录>/ohpm-repo`)，只支持绝对路径，且路径目录必须存在\n\n##### server numeric limit section #####\nmax_package_size: 300          # 上传包大小限制，单位是MB (0, 300]，不配置默认为 300\nmax_extract_size: 800          # 压缩包解压后大小限制，单位是MB ，不配置默认为 800\nmax_extract_file_num: 30000    # 压缩包解压后文件个数限制，默认为30000个\nuser_rate_limit: 100           # 用户访问频率控制，单位是次/s (0, 10000]，不配置默认为 100\nfetch_timeout: 60              # 请求/响应的超时时间，单位是秒 (0, 3600]，不配置默认为 60\nkeep_alive_timeout: 60         # TCP 保持连接的超时时间，单位是秒 (0, 3600]，不配置默认为 60\napi_timeout: 60                # api超时时间，单位是秒(0, 3600]，不配置默认为 60\nupload_lock_hour: 24           # 下架某一三方包所有版本后，限时禁止同名三方包上传，单位是小时 (0, 168]，不配置，默认为 24\nupload_max_times: 100          # 单用户24小时内上传次数限制 (0, 100000]，不配置默认为 100\noperation_log_retention: 100   # 数据库中操作日志保留时间，单位是天，不配置默认为 100\n##### metadata storage section #####\n## 数据存储类型 filedb 和 mysql 二选一，不可都配置\ndb:                         # 必须用 yaml 数组形式写法\n  type: filedb\n  config:                   # 如果想修改存储路径且保留旧的数据，则需要把旧路径下的数据文件迁移至新路径\n    path: ./db              # 本地数据存储路径，不配置默认为<deploy_root>/db;\n\n#db:                        # 必须用yaml数组形式写法\n#  type: mysql\n#  config:\n#    host: \"localhost\"      # 数据库主机地址\n#    port: 3306             # 数据库端口 (0,65535]\n#    username: tctAdmin         # 数据库的用户名\n#    password: \"password\"   # 数据库的用户密码（请配置明文, 最终在部署目录中会转换为密文）\n#    database: \"repo\"       # 数据库名\n\n##### storage section #####\n## 文件存储类型fs,sftp 和 custom 三选一，不可多选。\n\nstore:                               # 必须用 yaml 数组形式写法\n  type: fs\n  config:                            # 上传资源后如若要修改存储路径，则需要把旧路径下的数据迁移至新路径中\n    path: ./storage                  # 已上架三方库存储路径，不配置默认为 <deploy_root>/storage;\n    #server: http://localhost:8088   # 仓库下载链接地址，不配置取默认值\n\n# 文件存储类型为 sftp 时，最多配置三个 sftp\n#store:                               # 必须用 yaml 数组形式写法\n#  type: sftp                         # 当且仅当 db 的类型为 mysql 时，store 的类型才能为 sftp\n#  config:\n#    location:\n#      -\n#        name: test_one_sftp          # 主机名字名字不能与其他sftp配置重复\n#        host: \"localhost\"            # 主机地址\n#        port: 22                     # 主机端口 (0,65535]\n#        read_username: \"read\"        # 主机有读权限的用户名字\n#        read_password: \"password\"    # 主机有读权限的用户密码（请配置明文, 最终在部署目录中会转换为密文）\n#        write_username: \"write\"      # 主机有写权限的用户名字\n#        write_password: \"password\"   # 主机有写权限的用户密码（请配置明文, 最终在部署目录中会转换为密文）\n#        path: /source22              # 相对 sftp 根目录的文件路径，仅限/开头，且路径文件夹必须存在\n#      -\n#        name: test_two_sftp\n#        host: \"localhost\"\n#        port: 24\n#        read_username: \"read\"\n#        read_password: \"password\"\n#        write_username: \"write\"\n#        write_password: \"password\"\n#        path: /source24\n#    #server: http://localhost:8088   # 仓库下载链接地址，不配置取默认值\n\n#store:\n#  type: custom                                            # custom是自定义存储插件类型，自定义存储插件开发流程见指导文档\n#  config:\n#    export_name: CustomStorage                            # 插件export的类名\n#    plugin_path: plugins/CustomStorage.js                 # 插件的绝对路径或者相对于ohpm-repo软件包的路径，建议将插件放在软件包的plugins目录下\n#    custom_field: \"test\"                                  # 自定义字段，通过引入libs/common/getStorageConfigInfo.js的getStorageConfigInfo方法获取自定义字段的值\n#    #server: http://localhost:8088                        # 仓库下载链接地址，不配置取默认值\n\n##### 是否使用反向代理 #####\n# 可选项:true,false, 默认：false。如果使用反向代理，需要配置为true，客户端IP地址将从请求头中的x-forwarded-for字段获取\nuse_reverse_proxy: false\n\n##### uplink section #####\nuplink_cache_path: ./uplink      # 缓存路径，不配置默认为 <deploy_root>/uplink\nuplink_cache_time: 168           # 远程包 metadata 缓存时间，单位为小时，默认 168 小时，取值范围为 (0, 8760]\n\n##### log section #####\nlogs_path: ./logs                # 日志路径，不配置默认为 <deploy_root>/logs\n\n##### log level section #####\n# 日志级别: 级别由低到高分别是 all、trace、debug、info、warn、error、fatal、mark、off\n# run，operate 和 access 不配置或者配置错误，默认为 info\nloglevel_run: info\nloglevel_operate: info\nloglevel_access: info\n\n##### auth plugin section #####\n# 可选项，自定义认证插件配置\n#auth_plugin:\n#  name: CustomAuth              # 认证插件的名字\n#  path: plugins/CustomAuth.js   # 插件的绝对路径或者相对于ohpm-repo软件包的路径，建议将插件放在软件包的plugins目录下\n\n##### compatibleSdkVersion等兼容性字段检测日志等级 #####\n# 可选值：close、info、warn、error，默认：warn\ncompability_log_level: warn\n\n##### 是否允许下架被其他组件依赖的包 #####\n# 可选项:true,false, 默认：false\nallow_remove_depended_packages: false\n\n##### 是否使用文件上传新接口 #####\n# 可选项:true,false, 默认：true\nallow_new_file_upload_api: true
配置项说明
[h2]listen
格式为三段式，即 <proto>://<host>:<port>，其中 <proto> 可以不填，默认为 http，如：
监听本机回环地址（默认）： listen: localhost:8088\n# 或 listen: http://localhost:8088 监听具体地址（建议）： listen: https://<ohpm-repo部署机器ip>:8088 监听所有地址（当选择监听所有地址时，配置项 store 中 server 值必须配置）： listen: 0.0.0.0:8088\n# 或 listen: http://0.0.0.0:8088 
listen值建议监听具体的地址。proto 支持 http 和 https 协议，支持缺省，缺省时默认为 http。为了确保ohpm-repo链接的安全，建议选择使用 https 协议，如果配置为 https 协议，则需要完善 https 相关配置。
[h2]https
当配置 listen 时选择使用 https 协议，则需要配置 https_key 和 https_cert：
https_key：ssl 证书私钥文件。https_cert：ssl 证书文件。
为了确保ohpm-repo链接的安全，建议选择使用 https 协议，可以使用如下命令，在当前命令行所在目录生成 https 协议使用的证书私钥文件和证书文件（需要提前安装安全套接字层密码库Openssl）：
openssl genrsa -out server.key 4096\nopenssl req -new -x509 -days 3650 -key server.key -out server.crt
参考配置如下：
https_key: ./ssl/server.key\nhttps_cert: ./ssl/server.crt
[h2]deploy_root
ohpm-repo的部署目录，存储运行时生成的文件数据。
如果 <deploy_root> 字段为空，则默认路径为： windows系统: ~/AppData/Roaming/Huawei/ohpm-repo 其他操作系统：~/ohpm-repo 如果<deploy_root>字段不为空，则路径必须为绝对路径，且路径所指向文件夹必须存在。 该路径不允许配置为ohpm-repo安装包解压根目录。
参考配置如下：
deploy_root: ''
[h2]server
服务相关配置，具体为：
max_package_size: 上传包大小限制，单位为 MB， 默认 300 MB，取值范围为 (0, 300] 。max_extract_size: 压缩包解压后大小限制，单位为 MB，不配置默认为800MB。max_extract_file_num: 压缩包解压后文件个数限制，默认为 30000个。user_rate_limit: 用户访问频率控制，单位为次/s，默认 100 次/s，取值范围为 (0, 10000]。fetch_timeout: 当使用 uplink 时，请求 uplink 数据的请求/响应超时时间，单位为秒，默认 60 秒，取值范围为 (0, 3600]。keep_alive_timeout: TCP 保持连接的超时时间，单位为秒，默认 60 秒，取值范围为 (0, 3600]。api_timeout: 接口请求与响应超时时间，单位为秒，默认60秒，取值范围(0, 3600]。upload_lock_hour: 下架某个三方包所有版本后，限时禁止同名三方包上传，单位为小时，默认 24 小时，取值范围为 (0, 168]。upload_max_times: 单用户 24 小时内上传次数限制，默认 100 次，取值范围为 (0, 100000]。operation_log_retention：数据库中操作日志保留时间，单位是天，默认为 100。
参考配置如下：
max_package_size: 300\nmax_extract_size: 800\nmax_extract_file_num: 30000\nuser_rate_limit: 100\nfetch_timeout: 60\nkeep_alive_timeout: 60\napi_timeout: 60\nupload_lock_hour: 24\nupload_max_times: 100\noperation_log_retention: 100   
db是元数据存储的配置项，store是文件存储的配置项。db支持fileDB本地存储和mysql数据库存储；store支持file storage存储，sftp存储和custom storage 自定义插件存储。db和store不能随意搭配，需要符合表1的匹配规范：
db：元数据存储
与db所适配的store：三方包文件存储
filedb
file storage
mysql(ohpm-repo 1.1.0开始支持）
file storage，sftp storage(ohpm-repo 1.1.0开始支持），custom storage(ohpm-repo 2.2.0开始支持）
[h2]db
ohpm-repo运行过程产生的用户信息，运行状态等元数据存储配置，支持本地磁盘存储filedb和 mysql 数据库存储。
本地磁盘存储
默认使用本地磁盘存储，配置如下：
type: 存储插件名称，为 filedbconfig: 插件配置，具体为：path: 数据库文件存储地址，默认值为 ./db，支持相对和绝对路径配置，当配置为相对路径时，则以deploy_root为根目录。 
如果想修改数据库文件存储路径同时保留旧的数据，则需要把旧路径下的数据文件迁移至新路径。
参考配置如下：
db:                \n  type: filedb     \n  config:\n    path: ./db     
Mysql存储
type: 插件名称，配置为 mysqlconfig: 插件配置，具体为：host: 数据库主机地址。port: 数据库端口。username: 数据库的用户名。password: 数据库的用户密码（请配置明文, 最终在部署目录中会转换为密文）。database: 数据库名。 
参考配置如下：
db:                         \n  type: mysql\n  config:\n    host: \"localhost\"\n    port: 3306\n    username: \"tctAdmin\"\n    password: \"password\"\n    database: \"repo\"
为了避免潜在的安全风险，建议使用非最高权限的数据库账户进行连接。
[h2]store
三方库及其元数据等资源文件存储配置，支持本地磁盘存储，sftp存储和自定义插件存储。
本地磁盘存储
默认使用本地磁盘存储文件，具体配置为：
type: 插件名称，为 fs。config: 插件配置，具体为：path: 存储根目录路径，默认为 ./storage，支持相对和绝对路径配置，当配置为相对路径时，则以 deploy_root 为根目录。server: 仓库内容的下载地址，当 listen 的 host 为 0.0.0.0且本机存在多个网络接口时，必须配置。server的格式如下：<listen的proto>://<host>:<listen的port>；当配置项 listen 的 host 不为 0.0.0.0 时，则server默认取 listen 的完整格式，例如 listen 为 127.0.0.1:8088，故 server 默认值为 http://127.0.0.1:8088；当配置项 listen 的 host 为 0.0.0.0时，如果本机仅存在一个网络接口，则 sever 中的 host 默认为 本机网络接口的ipv4地址；如果本机存在多个个网络接口，则 sever 中的 host 默认为本机获取到的第一个网络接口的ipv4地址，建议手动修改 host 为指定的本机 ip/域名，例如 listen 为 0.0.0.0:8088，故 server 需配置为  http://<本机ip/域名>:8088；如果需要通过反向代理来访问ohpm-repo服务，则该字段须配置为反向代理服务器的域名地址，且需要配置use_reverse_proxy值为true。  
上传资源后如若要修改存储路径，则需要把旧路径下的数据迁移至新路径中。
参考配置如下：
store:\n  type: fs\n  config:\n    path: ./storage\n    #server: http://localhost:8088
sftp 存储
支持使用 sftp 存储文件，仅当数据存储为 mysql 存储时才能使用 sftp 存储，具体配置为：
type: 插件名称，其名称为 sftp。config: 插件配置。location: 支持配置最多 3 个 sftp 服务，必须用 yaml 的数组形式写法，详细配置如下；name: sftp 服务名，名字不能与其他 sftp 配置重复。host: sftp 服务主机地址。port：sftp 服务端口。read_username：有读权限的用户名。read_password：有读权限的用户密码（请配置明文, 最终在部署目录中会转换为密文)。write_username：有写权限的用户名。write_password：有写权限的用户密码（请配置明文, 最终在部署目录中会转换为密文)。path：相对 sftp 根目录的文件路径，仅限/开头，且路径所指向的文件夹必须存在。 server: 仓库内容的下载地址，当 listen 的 host 为 0.0.0.0且本机存在多个网络接口时，必须配置。server的格式如下：<listen的proto>://<host>:<listen的port>当配置项 listen 的 host 不为 0.0.0.0 时，则server默认取 listen 的完整格式，例如 listen 为 127.0.0.1:8088，故 server 默认值为 http://127.0.0.1:8088；当配置项 listen 的 host 为 0.0.0.0时，如果本机仅存在一个网络接口，则 sever 中的 host 默认为 本机网络接口的ipv4地址；如果本机存在多个个网络接口，则 sever 中的 host 默认为本机获取到的第一个网络接口的ipv4地址，建议手动修改 host 为指定的本机 ip/域名，例如 listen 为 0.0.0.0:8088，故 server 需配置为  http://<本机ip/域名>:8088；如果需要通过反向代理来访问ohpm-repo服务，则该字段须配置为反向代理服务器的域名地址，且需要配置use_reverse_proxy值为true。  
参考配置如下：
store:                               \n  type: sftp                         \n  config:\n    location:\n      - \n        name: test_one_sftp          \n        host: \"localhost\"           \n        port: 22                     \n        read_username: \"read\"   \n        read_password: \"password\" \n        write_username: \"write\"   \n        write_password: \"password\" \n        path: /source22\n      -\n        name: test_two_sftp\n        host: \"localhost\"\n        port: 24\n        read_username: \"read\"\n        read_password: \"password\"\n        write_username: \"write\"\n        write_password: \"password\"\n        path: /source24\n    #server: http://localhost:8088
custom存储
使用自定义插件存储，具体配置为：
type: 插件名称，为 custom。custom是自定义存储插件类型，自定义存储插件开发流程见官方文档。config: 插件配置，具体为：export_name：待书写插件export的类名。plugin_path：插件的绝对路径或者相对于ohpm-repo软件包的路径，建议将插件放在软件包的plugins目录下。custom_field：自定义字段，通过引入ohpm-repo解压包中libs/common/getStorageConfigInfo.js的getStorageConfigInfo方法获取自定义字段的值。server: 本地仓库下载地址：当配置项 listen 的 host 不为 0.0.0.0 时，则默认取 listen 的完整格式，例如 listen 为 127.0.0.1:8088，故 server 默认值为 http://127.0.0.1:8088；如果配置项 listen 的 host 为 0.0.0.0，则 sever 中的 host 默认为 localhost，如 http://localhost:8088。建议手动修改 host 为本机的 ip/域名，例如 listen 为 0.0.0.0:8088，故 server 需配置为  http://<本机ip/域名>:8088；如果需要通过反向代理来访问ohpm-repo服务，则该字段须配置为反向代理服务器的域名地址。多实例部署ohpm-repo时必须配置反向代理服务器，且需要配置use_reverse_proxy值为true。  
参考配置如下：
store:\n  type: custom                                            \n  config:\n    export_name: \"MyStorage\"                              \n    plugin_path: \"plugins/storagePlugin/MyStorage\"        \n    custom_field: \"test\"                                  \n    #server: http://localhost:8088
[h2]use_reverse_proxy
use_reverse_proxy: 是否使用反向代理选项。可选项：true/false， 默认：false。如果使用反向代理，必须配置为true，客户端IP地址将从请求头中的x-forwarded-for字段获取。
use_reverse_proxy: false
当use_reverse_proxy配置为true时，必须在反向代理配置时刷新x-forwarded-for值（如果存在多级代理，只需要在最外层代理配置刷新），如果不刷新将存在x-forwarded-for数据被篡改风险，反向代理配置刷新x-forwarded-for命令如下：
proxy_set_header x-forwarded-for $remote_addr
[h2]uplink
uplink_cache_path：远程包缓存路径，默认路径为 ./uplink，支持相对和绝对路径配置，当配置为相对路径时，则以deploy_root 为基准目录。uplink_cache_time：远程包 metadata 缓存时间，单位为小时，默认 168 小时，取值范围为 (0, 8760]。
参考配置如下：
uplink_cache_path: ./uplink\nuplink_cache_time: 168
[h2]logs
logs_path: 日志存储，默认路径为 ./logs，支持相对路径和绝对路径配置，当配置为相对路径时，以 deploy_root 为基准目录。
参考配置如下：
logs_path: ./logs 
[h2]loglevel
loglevel 自定义配置，具体配置为：
loglevel_run：run 日志文件的存储级别，默认级别为 info，输出的日志信息级别高于设定的日志级别才会存储到 run 日志文件中。loglevel_operate：operate 日志文件的存储级别，默认级别为 info，输出的日志信息级别高于设定的日志级别才会存储到 operate 日志文件中。loglevel_access：access 日志文件的存储级别，默认级别为 info，输出的日志信息级别高于设定的日志级别才会存储到 access 日志文件中。
日志级别由低到高分别是all、trace、debug、info、warn、error、fatal、mark 和 off。run、operate 和 access，日志级别不配置或者配置错误，默认为 info。
参考配置如下：
loglevel_run: info\nloglevel_operate: info\nloglevel_access: info
[h2]auth_plugin
ohpm-repo 从 2.3.0 版本开始支持自定义认证插件（需配套使用1.8.0及以上版本ohpm命令行工具），允许您开发定制化的认证插件来对接您自己的用户信息系统。自定义认证插件开发流程见认证插件说明文档。
参数说明：
name: 插件名称，自定义插件文件 CustomAuth.js 中定义的实现类名称，如果实现类为 CustomAuth，故此处值为：CustomAuth 。path: 编译后插件文件 CustomAuth.js 的存储位置。支持绝对路径和相对路径，相对路径的基准为ohpm-repo解压根目录。
参考配置如下：
#auth_plugin:\n#  name: CustomAuth              # 认证插件的名字\n#  path: plugins/CustomAuth.js   # 插件的绝对路径或者相对于ohpm-repo软件包的路径，建议将插件放在软件包的plugins目录下
[h2]compability_log_level
compability_log_level: compatibleSdkVersion等兼容性字段检测日志等级，可选值：close、info、warn、error，默认为warn，参考配置如下：
compability_log_level: warn
[h2]allow_remove_depended_packages
allow_remove_depended_packages: 是否允许下架被其他组件依赖的包，可选项：true，false，默认为false，参考配置如下：
allow_remove_depended_packages: false
[h2]allow_new_file_upload_api
allow_new_file_upload_api: 是否使用新的文件上传接口（新上传接口将使用流处理大文件，优化上传的性能），可选项：true，false，默认为true，参考配置如下：
allow_new_file_upload_api: true
关于 deploy_root
deploy_root 为ohpm-repo的部署目录，通过配置文件中字段 <deploy_root> 可进行配置。
