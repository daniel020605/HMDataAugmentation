@typescript-eslint/explicit-function-return-type
函数和类方法需要显式的定义返回类型。
该规则仅支持对.js/.ts文件进行检查。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@typescript-eslint/explicit-function-return-type\": \"error\"\n  }\n}
选项
详情请参考@typescript-eslint/explicit-function-return-type选项。
正例
// No return value should be expected (void)\nfunction test(): void {\n  return;\n}\n\n// A return value of type number\nconst fn = function (): number {\n  return Number.MAX_VALUE;\n};\n\n// A return value of type string\nconst arrowFn = (): string => 'test';\n\nclass Test {\n  // No return value should be expected (void)\n  public method(): void {\n    return;\n  }\n}\n\nexport { test, fn, arrowFn, Test };
反例
// Should indicate that no value is returned (void)\nfunction test() {\n  return;\n}\n\n// Should indicate that a number is returned\nconst fn = function () {\n  return Number.MAX_VALUE;\n};\n\n// Should indicate that a string is returned\nconst arrowFn = () => 'test';\n\nclass Test {\n  // Should indicate that no value is returned (void)\n  public method() {\n    return;\n  }\n}\n\nexport { test, fn, arrowFn, Test };
规则集
plugin:@typescript-eslint/recommended\nplugin:@typescript-eslint/all
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
