DRM系统管理(C/C++)
DRM系统管理（MediaKeySystem）支持MediaKeySystem实例管理、设备DRM证书申请与处理、会话实例管理、离线媒体密钥管理、获取DRM度量统计信息、设备属性等。在使用DRM Kit功能时，先查询设备是否支持对应DRM解决方案的DRM功能。在DRM Kit里DRM解决方案以插件形式存在，所以也叫DRM插件。
开发步骤
详细的API说明请参考DRM API参考。
 导入NDK相关接口，导入方法如下。  #include \"multimedia/drm_framework/native_drm_common.h\"\n #include \"multimedia/drm_framework/native_drm_err.h\"\n #include \"multimedia/drm_framework/native_mediakeysession.h\"\n #include \"multimedia/drm_framework/native_mediakeysystem.h\" 在CMake脚本中链接Drm NDK动态库。  target_link_libraries(PUBLIC libnative_drm.so) 查询设备是否支持对应DRM解决方案名称、媒体类型、安全保护级别的DRM解决方案。  bool isSupported = OH_MediaKeySystem_IsSupported3(\"com.wiseplay.drm\", \"video/avc\", CONTENT_PROTECTION_LEVEL_SW_CRYPTO);\n if (isSupported != true) {\n     printf(\"The device does not support the content protection level.\");\n } 
4.（可选）获取设备支持的DRM解决方案的名称和唯一标识的列表。
 uint32_t count = 1; // count是当前设备实际支持的DRM插件的个数，用户根据实际情况设置\n DRM_MediaKeySystemDescription descriptions[1];\n memset(descriptions, 0, sizeof(descriptions));\n Drm_ErrCode ret = OH_MediaKeySystem_GetMediaKeySystems(descriptions, &count);\n if (ret != DRM_ERR_OK) {\n     printf(\"OH_MediaKeySystem_GetMediaKeySystems failed.\");\n }
 创建MediaKeySystem实例。  MediaKeySystem *mediaKeySystem = NULL;\n Drm_ErrCode ret = OH_MediaKeySystem_Create(\"com.wiseplay.drm\", &mediaKeySystem);\n if (ret != DRM_ERR_OK) {\n     printf(\"OH_MediaKeySystem_Create failed.\");\n } 
6.（可选）声明MediaKeySystem事件监听回调。
  // 适用于多个MediaKeySystem实例的场景\n static Drm_ErrCode SystemCallBack(DRM_EventType eventType, uint8_t *info, int32_t infoLen, char *extra)\n {\n     printf(\"SystemCallBack\");\n }\n // 适用于单个MediaKeySystem实例的场景。\n static Drm_ErrCode SystemCallBackWithObj(MediaKeySystem *mediaKeySystem, DRM_EventType eventType,\n uint8_t *info, int32_t infoLen, char *extra)\n {\n     printf(\"TestSystemCallBackWithObj\");\n }
7.（可选）设置MediaKeySystem事件监听回调。
  // 适用于多个MediaKeySystem实例的场景\n Drm_ErrCode ret = OH_MediaKeySystem_SetMediaKeySystemCallback(mediaKeySystem, SystemCallBack);\n if (ret != DRM_ERR_OK) {\n     printf(\"OH_MediaKeySystem_SetMediaKeySystemCallback failed.\");\n }\n\n // 适用于单个MediaKeySystem实例的场景。\n ret = OH_MediaKeySystem_SetCallback(mediaKeySystem, SystemCallBackWithObj);\n if (ret != DRM_ERR_OK) {\n     printf(\"OH_MediaKeySystem_SetCallback failed.\");\n }
 创建MediaKeySession会话实例。  MediaKeySession *mediaKeySession = nullptr;\n DRM_ContentProtectionLevel contentProtectionLevel = CONTENT_PROTECTION_LEVEL_SW_CRYPTO;\n ret = OH_MediaKeySystem_CreateMediaKeySession(mediaKeySystem, &contentProtectionLevel, &mediaKeySession);\n if (ret != DRM_ERR_OK || mediaKeySession == nullptr) {\n     printf(\"OH_MediaKeySystem_CreateMediaKeySession failed.\");\n } 检查设备DRM证书状态，设备DRM证书不存在或状态异常，则生成设备DRM证书请求，处理设备DRM证书响应。  unsigned char request[12288] = { 0x00 };  // 设备DRM证书request最大长度为12288，按实际大小申请\n int32_t requestLen = 12288;\n // DRM服务URL的最大长度为2048\n char defaultUrl[2048] = { 0x00 };\n int32_t defaultUrlLen = 2048;\n DRM_CertificateStatus certStatus = CERT_STATUS_INVALID;\n // 检查设备DRM证书状态\n ret = OH_MediaKeySystem_GetCertificateStatus(mediaKeySystem, &certStatus);\n if (ret == DRM_ERR_OK && certStatus == CERT_STATUS_NOT_PROVISIONED) {\n     ret = OH_MediaKeySystem_GenerateKeySystemRequest(mediaKeySystem, request, &requestLen, defaultUrl,\n         defaultUrlLen);\n     /* \n       应用通过网络请求，将设备DRM证书请求信息传到DRM服务获取设备DRM证书请求响应keySystemResponse，\n       再将设备DRM证书请求响应设置到设备上，请根据实际值和长度传入\n     */\n     unsigned char KeySystemResponse[12288] = {0x00};\n     ret = OH_MediaKeySystem_ProcessKeySystemResponse(mediaKeySystem, KeySystemResponse, sizeof(KeySystemResponse));\n     if (ret != DRM_ERR_OK) {\n         printf(\"OH_MediaKeySystem_ProcessKeySystemResponse failed.\");\n     }\n } (可选)获取离线媒体密钥标识，获取离线媒体密钥状态、清理离线媒体密钥。 
 DRM_OfflineMediakeyIdArray offlineMediaKeyIds;\n ret = OH_MediaKeySystem_GetOfflineMediaKeyIds(mediaKeySystem, &offlineMediaKeyIds);\n if (ret != DRM_ERR_OK) {\n     printf(\"OH_MediaKeySystem_GetOfflineMediaKeyIds failed.\");\n }\n DRM_OfflineMediaKeyStatus OfflineMediaKeyStatus = OFFLINE_MEDIA_KEY_STATUS_UNKNOWN;\n ret = OH_MediaKeySystem_GetOfflineMediaKeyStatus(mediaKeySystem, offlineMediaKeyIds.ids[0], offlineMediaKeyIds.idsLen[0], &OfflineMediaKeyStatus);\n if (ret != DRM_ERR_OK) {\n     printf(\"OH_MediaKeySystem_GetOfflineMediaKeyStatus failed.\");\n }\n ret = OH_MediaKeySystem_ClearOfflineMediaKeys(mediaKeySystem, offlineMediaKeyIds.ids[0], offlineMediaKeyIds.idsLen[0]);\n if (ret != DRM_ERR_OK) {\n     printf(\"OH_MediaKeySystem_ClearOfflineMediaKeys failed.\");\n }
 (可选)设置和获取DRM配置属性信息。 
不同的DRM方案的配置属性信息可能存在差别，支持的属性名包含：\"vendor\"、\"version\"、\"description\"、\"algorithms\"、\"maxSessionNum\"、\"currentHDCPLevel\"。需解决方案支持属性值设置能力才能设置DRM配置属性信息。
 ret = OH_MediaKeySystem_SetConfigurationString(mediaKeySystem, \"version\", \"2.0\"); // 设置字符串类型的配置信息\n if (ret == DRM_ERR_OK) {\n     printf(\"MediaKeySystem_SetConfigurationString success\");\n } else {\n     printf(\"MediaKeySystem_SetConfigurationString failed. %d \", ret);\n }\n char value[32];\n int32_t valueLen = 32;\n // 获取字符串类型的配置信息\n ret = OH_MediaKeySystem_GetConfigurationString(mediaKeySystem, \"version\", value, valueLen);\n if (ret == DRM_ERR_OK) {\n     printf(\"OH_MediaKeySystem_GetConfigurationString success\");\n } else {\n     printf(\"OH_MediaKeySystem_GetConfigurationString failed. %d \", ret);\n }\n // 设置字符数组类型的配置信息，请根据实际数据和长度传入\n uint8_t description[4] = {0x00, 0x00, 0x00, 0x00};\n ret = OH_MediaKeySystem_SetConfigurationByteArray(mediaKeySystem, \"description\", description, sizeof(description)/sizeof(uint8_t));\n if (ret == DRM_ERR_OK) {\n     printf(\"OH_MediaKeySystem_SetConfigurationByteArray success \");\n } else {\n     printf(\"OH_MediaKeySystem_SetConfigurationByteArray failed. %d \", ret);\n }\n  // 获取字符数组类型的配置信息，根据DRM解决方案实际情况填入\n uint8_t descriptionValue[32];\n int32_t descriptionValueLen = 32;\n ret = OH_MediaKeySystem_GetConfigurationByteArray(mediaKeySystem, \"description\", descriptionValue, &descriptionValueLen);\n if (ret == DRM_ERR_OK) {\n     printf(\"OH_MediaKeySystem_GetConfigurationByteArray success \");\n } else {\n     printf(\"OH_MediaKeySystem_GetConfigurationByteArray failed. %d \", ret);\n }
 （可选）获取设备支持的最大内容保护级别。 
 DRM_ContentProtectionLevel contentProtectionLevel = CONTENT_PROTECTION_LEVEL_UNKNOWN;\n ret = OH_MediaKeySystem_GetMaxContentProtectionLevel(mediaKeySystem, &contentProtectionLevel);\n if (ret != DRM_ERR_OK) {\n     printf(\"OH_MediaKeySystem_GetMaxContentProtectionLevel failed.\");\n }
 销毁MediaKeySession实例。 
 ret = OH_MediaKeySession_Destroy(mediaKeySession);\n if (ret != DRM_ERR_OK) {\n     printf(\"OH_MediaKeySession_Destroy failed.\");\n }
 销毁MediaKeySystem实例。 
 ret = OH_MediaKeySystem_Destroy(mediaKeySystem);\n if (ret != DRM_ERR_OK) {\n     printf(\"OH_MediaKeySystem_Destroy failed.\");\n }
