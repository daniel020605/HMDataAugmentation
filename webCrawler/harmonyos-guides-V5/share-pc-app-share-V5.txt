2in1应用发起系统分享
场景介绍
在2in1设备上分享框通过Popup形式展示，效果如图所示：
宿主应用可以分享一段文本、一个文件或一条备忘录到其他应用。宿主应用可以分享多个内容，如文本、图片等到其他应用。
开发步骤
导入相关模块。import { common } from '@kit.AbilityKit';\nimport { systemShare } from '@kit.ShareKit';\nimport { uniformTypeDescriptor as utd } from '@kit.ArkData'; 构造分享数据，可添加多条分享记录。// 构造ShareData，需配置一条有效数据信息\nlet data: systemShare.SharedData = new systemShare.SharedData({\n  utd: utd.UniformDataType.PLAIN_TEXT,\n  content: 'Hello HarmonyOS'\n});\n// 额外再添加一条记录\ndata.addRecord({\n  utd: utd.UniformDataType.PNG,\n  uri: 'file://.../test.png'\n});  沙箱路径可通过fileUri.getUriFromPath方法获取文件URI。  启动分享面板，必须要配置分享面板显示的位置信息或关联的组件ID，面板将以Popup形式展示。// 构建ShareController\nlet controller: systemShare.ShareController = new systemShare.ShareController(data);\n// 获取UIAbility上下文对象\nlet context: common.UIAbilityContext = getContext(this) as common.UIAbilityContext;\n// 注册分享面板关闭监听\ncontroller.on('dismiss', () => {\n  console.info('Share panel closed');\n  // 分享结束，可处理其他业务。\n});\n\n// 进行分享面板显示\n// 方法一：配置分享面板关联的控件ID \ncontroller.show(context, {\n  anchor: 'shareButtonId'\n});\n// 方法二：配置分享面板显示的坐标\ncontroller.show(context, {\n  anchor: {\n    // 必选， 锚点坐标\n    windowOffset: {x: 100, y: 100},\n    // 可选，组件的宽高，配置后会综合计算组件的大小\n    size: {width: 0, height: 0}\n  }\n}); 
