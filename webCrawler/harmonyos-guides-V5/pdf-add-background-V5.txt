添加、删除背景
对指定页面添加背景图片或背景颜色，并设置大小、旋转、透明度和位置等属性，支持图片格式：PNG、BMP、JPEG。
接口说明
接口名
描述
addBackground(info: BackgroundInfo, startIndex: number, endIndex: number, oddPages: boolean, evenPages: boolean): void
插入PDF文档背景。
removeBackground(): boolean
删除PDF文档背景。
addBackground方法属于耗时业务，需要遍历每一页去添加背景，添加页面较多时建议放到线程里去处理。
示例代码
 调用loadDocument方法，加载PDF文档。 实例化背景BackgroundInfo类，并设置相关属性，包括大小、旋转、透明度和位置等。 保存PDF文档到应用沙箱。 
import { pdfService } from '@kit.PDFKit';\nimport { common } from '@kit.AbilityKit';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\n\n@Entry\n@Component\nstruct PdfPage {\n  private pdfDocument: pdfService.PdfDocument = new pdfService.PdfDocument();\n  private context = getContext() as common.UIAbilityContext;\n\n  build() {\n    Column() {\n      Button('addBackground').onClick(async () => {\n        // 确保沙箱目录有input.pdf文档\n        let filePath = this.context.filesDir + '/input.pdf';\n        let res = this.pdfDocument.loadDocument(filePath);\n        if (res === pdfService.ParseResult.PARSE_SUCCESS) {\n          let bginfo: pdfService.BackgroundInfo = new pdfService.BackgroundInfo();\n          // 确保沙箱目录有img.jpg文档\n          bginfo.imagePath = this.context.filesDir + '/img.jpg';\n          bginfo.backgroundColor = 50;\n          bginfo.isOnTop = true;\n          bginfo.rotation = 45;\n          bginfo.scale = 0.5;\n          bginfo.opacity = 0.3;\n          bginfo.verticalAlignment = pdfService.BackgroundAlignment.BACKGROUND_ALIGNMENT_TOP;\n          bginfo.horizontalAlignment = pdfService.BackgroundAlignment.BACKGROUND_ALIGNMENT_LEFT;\n          bginfo.horizontalSpace = 1.0;\n          bginfo.verticalSpace = 1.0;\n          this.pdfDocument.addBackground(bginfo, 0, 2, true, true);\n          let outPdfPath = this.context.filesDir + '/testAddBackground.pdf';\n          let result = this.pdfDocument.saveDocument(outPdfPath);\n          hilog.info(0x0000, 'PdfPage', 'addBackground %{public}s!', result ? 'success' : 'fail');\n        }\n        this.pdfDocument.releaseDocument();\n      })\n      Button('removeBackground').onClick(async () => {\n        let filePath = this.context.filesDir + '/testAddBackground.pdf';\n        let res = this.pdfDocument.loadDocument(filePath);\n        if (res === pdfService.ParseResult.PARSE_SUCCESS && this.pdfDocument.hasBackground()) {\n          let removeResult = this.pdfDocument.removeBackground();\n          if (removeResult) {\n            let outPdfPath = this.context.filesDir + '/removeBackground.pdf';\n            let result = this.pdfDocument.saveDocument(outPdfPath);\n            hilog.info(0x0000, 'PdfPage', 'removeBackground %{public}s!', result ? 'success' : 'fail');\n          }\n        }\n        this.pdfDocument.releaseDocument();\n      })\n    }\n  }\n}
