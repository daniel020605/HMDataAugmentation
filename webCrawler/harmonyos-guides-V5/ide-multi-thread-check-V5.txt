方舟运行时检测
方舟多线程检测
在JS运行时环境中，多线程的安全问题是一个重要的考虑因素。由于JavaScript本身是单线程的，对JS对象的任何操作都必须在创建该JS线程的原始线程上进行。如果违反了这一规则，就会导致多线程安全问题。以下是关于如何判断和处理这些问题的一些详细说明。
[h2]原理介绍
单线程执行JavaScript是单线程执行的语言，这意味着它一次只能在一个线程上执行代码。任何JavaScript对象都只能在创建它们的线程上进行操作。 N-API（Node-API）接口N-API接口直接涉及到JavaScript对象的操作。绝大多数N-API接口（约95%）只能在创建这些对象的JavaScript线程上调用。 
多线程检测机制多线程检测机制会检测当前线程和正在使用的JS虚拟机环境（vm/env）中的JS线程ID是否一致。如果不一致，就表明虚拟机环境被跨线程使用，存在多线程安全问题。 
[h2]常见多线程安全问题
非JS线程使用N-API接口非JavaScript线程尝试调用N-API接口，可能会导致未定义的行为或崩溃。 
N-API接口使用其他线程的env一个线程尝试使用另一个线程创建的env（JavaScript环境），这也会导致多线程安全问题。  
如何判断是否发生了多线程安全问题
Fatal: ecma_vm cannot run in multi-thread! thread:3096 currentThread:3550
其中，thread:3096 表示创建并拥有这个JavaScript环境的线程ID。currentThread:3550 表示当前正在尝试操作这个JavaScript环境的线程ID。
当前线程号为3550，而使用的JavaScript线程是由3096线程创建的，这表明虚拟机环境（vm/env）被跨线程使用，从而导致了多线程安全问题。
[h2]使用约束
方舟多线程检测通过命令行参数开启，点击桌面图标无效。
[h2]使能方舟多线程检测
可通过以下两种方式使能方舟多线程检测。
方式一点击Run > Edit Configurations > Diagnostics，勾选Multi Thread Check。  
方式二通过命令行开启。 aa start -a {abilityName} -b {bundleName} -R 
[h2]启用方舟多线程检测
运行或调试当前应用。当程序出现多线程安全问题时，会弹出Crash log信息，点击信息中的链接即可跳转至引起多线程安全问题的代码处。 
方舟native模块加载异常信息增强
在进行ArkTs项目开发中可能存在需要加载native模块的场景，开启方舟native模块加载异常信息增强功能后，可以丰富ArkTs项目中因加载native模块导致的报错信息，以便更准确地进行native问题定位。
[h2]使能方舟native模块加载异常信息增强
可以通过以下两种方式使能方舟native模块加载异常信息增强。
方式一点击Run > Edit Configurations > Diagnostics，勾选Enhanced Error Info。  
方式二通过命令行开启。 aa start {abilityName} {bundleName} -E 
[h2]启用方舟native模块加载异常信息增强
运行或调试当前应用。当程序出现因native模块加载导致的报错信息时，会显示更详细准确的错误信息。
