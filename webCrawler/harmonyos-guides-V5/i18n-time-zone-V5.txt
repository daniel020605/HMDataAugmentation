时区
使用场景
全球各国家和地区的经度不同，地方时间也有所不同，因此划分了不同的时区。例如英国采用0时区，中国采用东8时区，中国时间要比英国快8个小时，中国北京中午12:00是英国伦敦凌晨4点。时区模块主要用于获取时区列表，同时，应用可基于获取的时区列表实现自身业务逻辑，如双时钟应用。
开发步骤
[h2]时区相关功能
导入模块。 import { i18n } from '@kit.LocalizationKit'; 开发实例，包括获取特定时区、计算固定和实际时区偏移量、获取和遍历时区列表等。 // 获取巴西时区\nlet timezone = i18n.getTimeZone(\"America/Sao_Paulo\"); // 传入特定时区，创建时区类\nlet timezoneId = timezone.getID();// America/Sao_Paulo\n\n// 获取城市Id对应的时区对象\nlet aucklandTimezone = i18n.TimeZone.getTimezoneFromCity(\"Auckland\");\nlet aucklandTzId = aucklandTimezone.getID(); // Pacific/Auckland\n\n// 时区的本地化名称\nlet timeZoneName = timezone.getDisplayName(\"zh-Hans\", true); // 巴西利亚标准时间\n\n// 本地化城市名称\nlet cityDisplayName = i18n.TimeZone.getCityDisplayName(\"Auckland\", \"zh-Hans\") // 奥克兰 (新西兰)\n\n// 时区的固定偏移量\nlet rawOffset = timezone.getRawOffset(); // -10800000\n\n// 时区的实际偏移量(固定偏移量+夏令时)\nlet offset = timezone.getOffset(1234567890);// -10800000\n\n// 系统支持的时区Id列表\nlet ids = i18n.TimeZone.getAvailableIDs(); // [\"America/Adak\", \"Asia/Hovd\", \"America/Sao_Paulo\", \"Asia/Jerusalem\", \"Europe/London\",...]\n\n// 系统支持的时区城市Id列表\nlet cityIdArray = i18n.TimeZone.getAvailableZoneCityIDs();  // [\"Auckland\", \"Magadan\", \"Lord Howe Island\",...]\n// 遍历时区城市Id列表\nlet timezoneList: Array<object> = [];  // 呈现给用户的时区列表\nclass Item {\n    cityDisplayName : string = \"\";\n    timezoneId : string = \"\";\n    offset : string = \"\";\n    cityId : string = \"\"\n}\nfor (let i =0 ; i < cityIdArray.length ; i++) {\n    let cityId = cityIdArray[i];\n    let timezone = i18n.TimeZone.getTimezoneFromCity(cityId); // 城市Id对应的时区对象\n    let cityDisplayName = i18n.TimeZone.getCityDisplayName(cityId, \"zh-CN\"); // 本地化城市名称\n    let timestamp = (new Date()).getTime()\n    let item : Item = {\n        cityDisplayName : cityDisplayName,\n        timezoneId : timezone.getID(),\n        offset : 'GMT'+ (timezone.getOffset(timestamp) / 3600*1000),\n        cityId : cityId \n    }\n    timezoneList.push(item);\n }\n\n// 指定地理坐标所在的时区对象数组\nlet timezoneArray = i18n.TimeZone.getTimezonesByLocation(-43.1, -22.5)\nfor (let i =0;i < timezoneArray.length; i++) {\n    let tzId = timezoneArray[i].getID(); // America/Sao_Paulo\n} 
[h2]双时钟应用
导入模块。 import { i18n } from '@kit.LocalizationKit'; 选择时区列表中的时区放入应用偏好时区列表中。 let timezone1 = i18n.getTimeZone(\"America/Sao_Paulo\");\nlet timezone2 = i18n.getTimeZone();\nlet appPreferredTimeZoneList: Array<i18n.TimeZone> = [] // 应用偏好时区列表\nappPreferredTimeZoneList.push(timezone1);\nappPreferredTimeZoneList.push(timezone2); 遍历应用偏好时区列表，获取各时区时间。 let locale = i18n.System.getSystemLocale();\nfor (let i = 0 ; i < appPreferredTimeZoneList.length ; i++) {\n    let timezone = appPreferredTimeZoneList[i].getID();\n    let calendar = i18n.getCalendar(locale);\n    calendar.setTimeZone(timezone); //设置日历对象的时区\n    //获取年月日时分秒\n    let year = calendar.get(\"year\"); \n    let month = calendar.get(\"month\");\n    let day = calendar.get(\"date\");\n    let hour = calendar.get(\"hour\");\n    let minute = calendar.get(\"minute\");\n    let second = calendar.get(\"second\");\n} 
