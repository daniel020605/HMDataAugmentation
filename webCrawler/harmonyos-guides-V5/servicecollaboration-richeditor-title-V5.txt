跨设备互通（RichEditor控件）
富文本控件已经集成跨设备互通能力，通过使用富文本控件RichEditor的右键菜单即可使用跨设备互通能力。跨设备互通提供跨设备的相机、扫描、图库访问能力，平板或2in1设备可以调用手机的相机、扫描、图库等功能。
开发步骤
添加RichEditor富文本组件，即可在富文本组件中右键中选择其他设备进行导入，通过onWillChange属性对回传的照片进行处理。@Entry\n@Component\nstruct Index {\n  controller: RichEditorController = new RichEditorController()\n  options: RichEditorOptions = { controller: this.controller }\n\n  build() {\n    Column() {\n      Column() {\n        RichEditor(this.options)\n          .onWillChange((value: RichEditorChangeValue) => {\n            if (value.replacedImageSpans[0].imageStyle.objectFit != 0) {\n              return true;\n            }\n            for(let item of value.replacedImageSpans) {\n              this.controller.addImageSpan(item.valuePixelMap, {\n                imageStyle: {\n                  size: [\"500px\", \"500px\"],\n                  layoutStyle: {\n                    borderRadius: '10px',\n                  }\n                }\n              })\n            }\n            return false;\n          })\n          .borderWidth(1)\n          .borderColor(Color.Green)\n          .width(\"100%\")\n          .height(\"100%\")\n      }\n      .borderWidth(1)\n      .borderColor(Color.Red)\n      .width(\"100%\")\n      .height(\"70%\")\n    }\n  }\n} 
使用效果如下图：
关闭富文本跨设备互通能力
如果需要关闭富文本右键菜单跨设备互通能力，可通过editMenuOptions属性自定义菜单内容去除跨设备互通菜单项即可规避，示例如下：
@Entry\n@Component\nstruct Index {\n  controller: RichEditorController = new RichEditorController()\n  options: RichEditorOptions = { controller: this.controller }\n\n  build() {\n    Column() {\n      Column() {\n        RichEditor(this.options)\n          .editMenuOptions({\n            onCreateMenu: (menuItems: Array<TextMenuItem>) => {\n              if (menuItems.length === 0) {\n                return menuItems;\n              }\n              let newMenuItems: TextMenuItem[] = [];\n              menuItems.forEach((item, index) => {\n                if(!item.id.equals(TextMenuItemId.COLLABORATION_SERVICE)) {\n                  newMenuItems.push(item);\n                }\n              })\n              return newMenuItems;\n            },\n            onMenuItemClick: (menuItem: TextMenuItem, textRange: TextRange) => {\n              return false;\n            }\n          })\n          .borderWidth(1)\n          .borderColor(Color.Green)\n          .width(\"100%\")\n          .height(\"100%\")\n      }\n      .borderWidth(1)\n      .borderColor(Color.Red)\n      .width(\"100%\")\n      .height(\"70%\")\n    }\n  }\n}
