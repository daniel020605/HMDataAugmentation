设备输入(ArkTS)
在开发相机应用时，需要先参考开发准备申请相关权限。
相机应用可通过调用和控制相机设备，完成预览、拍照和录像等基础操作。
开发步骤
详细的API说明请参考Camera API参考。
 导入camera接口，接口中提供了相机相关的属性和方法，导入方法如下。 import { camera } from '@kit.CameraKit';\nimport { BusinessError } from '@kit.BasicServicesKit';     在相机设备输入之前需要先完成相机管理，详细开发步骤请参考相机管理。   通过cameraManager类中的createCameraInput方法创建相机输入流。 async function createInput(cameraDevice: camera.CameraDevice, cameraManager: camera.CameraManager): Promise<camera.CameraInput | undefined> {\n  // 创建相机输入流\n  let cameraInput: camera.CameraInput | undefined = undefined;\n  try {\n    cameraInput = cameraManager.createCameraInput(cameraDevice);\n  } catch (error) {\n    let err = error as BusinessError;\n    console.error('Failed to createCameraInput errorCode = ' + err.code);\n  }\n  if (cameraInput === undefined) {\n    return undefined;\n  }\n  // 监听cameraInput错误信息\n  cameraInput.on('error', cameraDevice, (error: BusinessError) => {\n    console.error(`Camera input error code: ${error.code}`);\n  });\n  // 打开相机\n  await cameraInput.open();\n  return cameraInput;\n} 通过getSupportedSceneModes方法，获取当前相机设备支持的模式列表，列表中存储了相机设备支持的所有模式SceneMode。 function getSupportedSceneMode(cameraDevice: camera.CameraDevice, cameraManager: camera.CameraManager): Array<camera.SceneMode> {\n  // 获取相机设备支持的模式列表\n  let sceneModeArray: Array<camera.SceneMode> = cameraManager.getSupportedSceneModes(cameraDevice);\n  if (sceneModeArray != undefined && sceneModeArray.length > 0) {\n    for (let index = 0; index < sceneModeArray.length; index++) {\n      console.info('Camera SceneMode : ' + sceneModeArray[index]);  \n  }\n    return sceneModeArray;\n  } else {\n      console.error(\"cameraManager.getSupportedSceneModes error\");\n      return [];\n  }\n} 通过getSupportedOutputCapability方法，获取当前相机设备支持的所有输出流，如预览流、拍照流、录像流等。输出流在CameraOutputCapability中的各个profile字段中，根据相机设备指定模式SceneMode的不同，需要添加不同类型的输出流。 async function getSupportedOutputCapability(cameraDevice: camera.CameraDevice, cameraManager: camera.CameraManager, sceneMode: camera.SceneMode): Promise<camera.CameraOutputCapability | undefined> {\n   // 获取相机设备支持的输出流能力\n   let cameraOutputCapability: camera.CameraOutputCapability = cameraManager.getSupportedOutputCapability(cameraDevice, sceneMode);\n   if (!cameraOutputCapability) {\n     console.error(\"cameraManager.getSupportedOutputCapability error\");\n     return undefined;\n   }\n   console.info(\"outputCapability: \" + JSON.stringify(cameraOutputCapability));\n   // 以NORMAL_PHOTO模式为例，需要添加预览流、拍照流\n   // previewProfiles属性为获取当前设备支持的预览输出流\n   let previewProfilesArray: Array<camera.Profile> = cameraOutputCapability.previewProfiles;\n   if (!previewProfilesArray) {\n     console.error(\"createOutput previewProfilesArray == null || undefined\");\n   }\n   //photoProfiles属性为获取当前设备支持的拍照输出流\n   let photoProfilesArray: Array<camera.Profile> = cameraOutputCapability.photoProfiles;\n   if (!photoProfilesArray) {\n     console.error(\"createOutput photoProfilesArray == null || undefined\");\n   }\n   return cameraOutputCapability;\n}  
