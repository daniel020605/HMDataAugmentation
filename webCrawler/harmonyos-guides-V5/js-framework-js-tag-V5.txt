js标签配置
js标签中包含了实例名称、页面路由和窗口样式信息。
name、pages和window等标签配置需在配置文件（config.json）中的“js”标签中完成设置。
pages
定义每个页面的路由信息，每个页面由页面路径和页面名组成，页面的文件名就是页面名。比如：
{\n    ...\n    \"pages\": [\n        \"pages/index/index\",\n        \"pages/detail/detail\"\n    ]\n    ...\n}
pages列表中第一个页面是应用的首页，即entry入口。 页面文件名不能使用组件名称，比如：text.hml、button.hml等。 
window
window用于定义与显示窗口相关的配置。对于屏幕适配问题，有2种配置方法：
指定designWidth（屏幕逻辑宽度），所有与大小相关的样式（例如width、font-size）均以designWidth和实际屏幕宽度的比例进行缩放，例如在designWidth为720时，如果设置width为100px时，在实际宽度为1440物理像素的屏幕上，width实际渲染像素为200物理像素。 设置autoDesignWidth为true，此时designWidth字段将会被忽略，渲染组件和布局时按屏幕密度进行缩放。屏幕逻辑宽度由设备宽度和屏幕密度自动计算得出，在不同设备上可能不同，请使用相对布局来适配多种设备。例如：在466*466分辨率，320dpi的设备上，屏幕密度为2（以160dpi为基准），1px等于渲染出的2物理像素。   组件样式中<length>类型的默认值，按屏幕密度进行计算和绘制，如：在屏幕密度为2（以160dpi为基准）的设备上，默认<length>为1px时，设备上实际渲染出2物理像素。 autoDesignWidth、designWidth的设置不影响默认值计算方式和绘制结果。   
720
示例如下：
{\n    ...\n    \"window\": {\n        \"designWidth\": 720,\n        \"autoDesignWidth\": false\n    }\n    ...\n}
示例
{\n  \"app\": {\n    \"bundleName\": \"com.example.player\",\n    \"version\": {\n        \"code\": 1,\n        \"name\": \"1.0\"\n    },\n    \"vendor\": \"example\"\n  }\n  \"module\": {\n      ...\n      \"js\": [\n      {\n          \"name\": \"default\",\n          \"pages\": [\n              \"pages/index/index\",\n              \"pages/detail/detail\"\n          ],\n          \"window\": {\n              \"designWidth\": 720,\n              \"autoDesignWidth\": false\n          }\n      }\n      ],\n      \"abilities\": [\n      {\n          ...\n      }\n    ]\n  }\n}
