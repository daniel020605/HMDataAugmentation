@performance/hp-arkui-reduce-pangesture-distance
建议设置合理的拖动距离。
应用内点击响应时延场景下，建议优先修改。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@performance/hp-arkui-reduce-pangesture-distance\": \"suggestion\",\n  }\n}
选项
该规则无需配置额外选项。
正例
import { hiTraceMeter } from '@kit.PerformanceAnalysisKit'\n\n@Entry\n@Component\nstruct PanGestureExample {\n  @State offsetX: number = 0\n  @State offsetY: number = 0\n  @State positionX: number = 0\n  @State positionY: number = 0\n  private panOption: PanGestureOptions = new PanGestureOptions({ direction: PanDirection.Left | PanDirection.Right })\n\n  build() {\n    Column() {\n      Column() {\n        Text('PanGesture offset:\\nX: ' + this.offsetX + '\\n' + 'Y: ' + this.offsetY)\n      }\n      .height(200)\n      .width(300)\n      .padding(20)\n      .border({ width: 3 })\n      .margin(50)\n      .translate({ x: this.offsetX, y: this.offsetY, z: 0 }) // 以组件左上角为坐标原点进行移动\n      // 左右拖动触发该手势事件\n      .gesture(\n        PanGesture(this.panOption)\n          .onActionStart((event: GestureEvent) => {\n            console.info('Pan start')\n            hiTraceMeter.startTrace(\"PanGesture\", 1)\n          })\n          .onActionUpdate((event: GestureEvent) => {\n            if (event) {\n              this.offsetX = this.positionX + event.offsetX\n              this.offsetY = this.positionY + event.offsetY\n            }\n          })\n          .onActionEnd(() => {\n            this.positionX = this.offsetX\n            this.positionY = this.offsetY\n            console.info('Pan end')\n            hiTraceMeter.finishTrace(\"PanGesture\", 1)\n          })\n      )\n\n      Button('修改PanGesture触发条件')\n        .onClick(() => {\n          // 设定的距离在阈值10以内\n          this.panOption.setDistance(4)\n        })\n    }\n  }\n}
反例
import { hiTraceMeter } from '@kit.PerformanceAnalysisKit'\n\n@Entry\n@Component\nstruct PanGestureExample {\n  @State offsetX: number = 0\n  @State offsetY: number = 0\n  @State positionX: number = 0\n  @State positionY: number = 0\n  private panOption: PanGestureOptions = new PanGestureOptions({ direction: PanDirection.Left | PanDirection.Right })\n\n  build() {\n    Column() {\n      Column() {\n        Text('PanGesture offset:\\nX: ' + this.offsetX + '\\n' + 'Y: ' + this.offsetY)\n      }\n      .height(200)\n      .width(300)\n      .padding(20)\n      .border({ width: 3 })\n      .margin(50)\n      .translate({ x: this.offsetX, y: this.offsetY, z: 0 })\n      // 左右拖动触发该手势事件\n      .gesture(\n        PanGesture(this.panOption)\n          .onActionStart((event: GestureEvent) => {\n            console.info('Pan start')\n            hiTraceMeter.startTrace(\"PanGesture\", 1)\n          })\n          .onActionUpdate((event: GestureEvent) => {\n            if (event) {\n              this.offsetX = this.positionX + event.offsetX\n              this.offsetY = this.positionY + event.offsetY\n            }\n          })\n          .onActionEnd(() => {\n            this.positionX = this.offsetX\n            this.positionY = this.offsetY\n            console.info('Pan end')\n            hiTraceMeter.finishTrace(\"PanGesture\", 1)\n          })\n      )\n\n      Button('修改PanGesture触发条件')\n        .onClick(() => {\n          // 设定的距离超过阈值10\n          this.panOption.setDistance(100)\n        })\n    }\n  }\n}
规则集
plugin:@performance/all
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
