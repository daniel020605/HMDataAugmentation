自定义组件成员属性访问限定符使用限制
在状态管理V1中，当组件开发者封装了自定义组件后，由于组件没有明确的输入输出标识，使得调用方无法按照统一的标准判断传入哪些变量作为组件入参。在状态管理V1中，可以使用private限定符来限制当前变量不允许被进行外部初始化。
当组件开发者不希望状态变量被外部初始化时，可以添加private限定符，提醒组件调用方不要初始化该状态变量。但是外部初始化也需要遵循装饰器自身的规则，具体规则见使用限制。
ArkTS会对自定义组件的成员变量使用的访问限定符private/public/protected进行校验，当不按规范使用访问限定符private/public/protected时，会产生对应的日志信息。
在阅读本文档前，建议提前阅读：状态管理概述。
从API version 12开始，支持自定义组件成员属性访问限定符使用限制的规则。
使用限制
@State/@Prop/@Provide/@BuilderParam/常规成员变量(不涉及更新的普通变量)的初始化规则为可以被外部初始化，也可以使用本地值进行初始化。当组件开发者不希望当前变量被外部初始化时，可以使用private进行修饰，此时会有编译告警日志提示。 @StorageLink/@StorageProp/@LocalStorageLink/@LocalStorageProp/@Consume变量的初始化规则为不可以被外部初始化，当组件开发者希望当前变量被外部初始化而使用public修饰时，这和装饰器本身的初始化规则是相违背的，会有编译告警日志提示。 @Link/@ObjectLink变量的初始化规则为必须被外部初始化，禁止本地初始化。当组件开发者使用private对变量进行修饰时，这和装饰器本身的初始化规则相矛盾，会有编译告警日志提示。 由于struct没有继承能力，上述所有的这些变量使用protected修饰时，会有编译告警日志提示。 @Require含义是当前被@Require装饰的变量必须被外部初始化，当@Require和private同时装饰@State/@Prop/@Provide/@BuilderParam/常规成员变量(不涉及更新的普通变量)时，他们的含义是自相矛盾的，会有编译告警日志提示。 
使用场景
1.当成员变量被private访问限定符和@State/@Prop/@Provide/@BuilderParam装饰器同时修饰，并且通过父组件进行初始化赋值，ArkTS会进行校验并产生告警日志。
【反例】
@Entry\n@Component\nstruct AccessRestrictions {\n  @Builder\n  buildTest() {\n    Text(\"Parent builder\")\n  }\n\n  build() {\n    Column() {\n      ComponentsChild({\n        state_value: \"Hello\",\n        prop_value: \"Hello\",\n        provide_value: \"Hello\",\n        builder_value: this.buildTest,\n        regular_value: \"Hello\"\n      })\n    }\n    .width('100%')\n  }\n}\n\n@Component\nstruct ComponentsChild {\n  // 此处使用private修饰符时会出现告警日志\n  @State private state_value: string = \"Hello\";\n  // 此处使用private修饰符时会出现告警日志\n  @Prop private prop_value: string = \"Hello\";\n  // 此处使用private修饰符时会出现告警日志\n  @Provide private provide_value: string = \"Hello\";\n  // 此处使用private修饰符时会出现告警日志\n  @BuilderParam private builder_value: () => void = this.buildTest;\n  // 此处使用private修饰符时会出现告警日志\n  private regular_value: string = \"Hello\";\n\n  @Builder\n  buildTest() {\n    Text(\"Child builder\")\n  }\n\n  build() {\n    Column() {\n      Text(\"Hello\")\n        .fontSize(50)\n        .fontWeight(FontWeight.Bold)\n    }\n  }\n}
编译告警日志如下：
Property 'state_value' is private and can not be initialized through the component constructor.\nProperty 'prop_value' is private and can not be initialized through the component constructor.\nProperty 'provide_value' is private and can not be initialized through the component constructor.\nProperty 'builder_value' is private and can not be initialized through the component constructor.\nProperty 'regular_value' is private and can not be initialized through the component constructor.
【正例】
@Entry\n@Component\nstruct AccessRestrictions {\n  @Builder\n  buildTest() {\n    Text(\"Parent builder\")\n  }\n\n  build() {\n    Column() {\n      ComponentsChild({\n        state_value: \"Hello\",\n        prop_value: \"Hello\",\n        provide_value: \"Hello\",\n        builder_value: this.buildTest,\n        regular_value: \"Hello\"\n      })\n    }\n    .width('100%')\n  }\n}\n\n@Component\nstruct ComponentsChild {\n  @State state_value: string = \"Hello\";\n  @Prop prop_value: string = \"Hello\";\n  @Provide provide_value: string = \"Hello\";\n  @BuilderParam builder_value: () => void = this.buildTest;\n  regular_value: string = \"Hello\";\n\n  @Builder\n  buildTest() {\n    Text(\"Child builder\")\n  }\n\n  build() {\n    Column() {\n      Text(\"Hello\")\n        .fontSize(50)\n        .fontWeight(FontWeight.Bold)\n    }\n  }\n}
2.当成员变量被public访问限定符和@StorageLink/@StorageProp/@LocalStorageLink/@LocalStorageProp/@Consume装饰器同时修饰，并且通过父组件进行初始化赋值，ArkTS会进行校验并产生告警日志。
【反例】
@Entry\n@Component\nstruct AccessRestrictions {\n  @Provide consume_value: string = \"Hello\";\n  build() {\n    Column() {\n      ComponentChild()\n    }\n    .width('100%')\n  }\n}\n\n@Component\nstruct ComponentChild {\n  // 此处使用public修饰符时会出现告警日志\n  @LocalStorageProp(\"sessionLocalProp\") public local_prop_value: string = \"Hello\";\n  // 此处使用public修饰符时会出现告警日志\n  @LocalStorageLink(\"sessionLocalLink\") public local_link_value: string = \"Hello\";\n  // 此处使用public修饰符时会出现告警日志\n  @StorageProp(\"sessionProp\") public storage_prop_value: string = \"Hello\";\n  // 此处使用public修饰符时会出现告警日志\n  @StorageLink(\"sessionLink\") public storage_link_value: string = \"Hello\";\n  // 此处使用public修饰符时会出现告警日志\n  @Consume public consume_value: string;\n  \n  build() {\n    Column() {\n      Text(\"Hello\")\n        .fontSize(50)\n        .fontWeight(FontWeight.Bold)\n    }\n  }\n}
编译告警日志如下：
Property 'local_prop_value' can not be decorated with both @LocalStorageProp and public.\nProperty 'local_link_value' can not be decorated with both @LocalStorageLink and public.\nProperty 'storage_prop_value' can not be decorated with both @StorageProp and public.\nProperty 'storage_link_value' can not be decorated with both @StorageLink and public.\nProperty 'consume_value' can not be decorated with both @Consume and public.
【正例】
@Entry\n@Component\nstruct AccessRestrictions {\n  @Provide consume_value: string = \"Hello\";\n  build() {\n    Column() {\n      ComponentChild()\n    }\n    .width('100%')\n  }\n}\n\n@Component\nstruct ComponentChild {\n  @LocalStorageProp(\"sessionLocalProp\") local_prop_value: string = \"Hello\";\n  @LocalStorageLink(\"sessionLocalLink\") local_link_value: string = \"Hello\";\n  @StorageProp(\"sessionProp\") storage_prop_value: string = \"Hello\";\n  @StorageLink(\"sessionLink\") storage_link_value: string = \"Hello\";\n  @Consume consume_value: string;\n  build() {\n    Column() {\n      Text(\"Hello\")\n        .fontSize(50)\n        .fontWeight(FontWeight.Bold)\n    }\n  }\n}
3.当成员变量被private访问限定符和@Link/@ObjectLink装饰器同时修饰，并且通过父组件进行初始化赋值，ArkTS会进行校验并产生告警日志。
【反例】
@Entry\n@Component\nstruct AccessRestrictions {\n  @State link_value: string = \"Hello\";\n  @State objectLink_value: ComponentObj = new ComponentObj();\n  build() {\n    Column() {\n      ComponentChild({link_value: this.link_value, objectLink_value: this.objectLink_value})\n    }\n    .width('100%')\n  }\n}\n\n@Observed\nclass ComponentObj {\n  count: number = 0;\n}\n@Component\nstruct ComponentChild {\n  // 此处使用private修饰符时会出现告警日志\n  @Link private link_value: string;\n  // 此处使用private修饰符时会出现告警日志\n  @ObjectLink private objectLink_value: ComponentObj;\n  build() {\n    Column() {\n      Text(\"Hello\")\n        .fontSize(50)\n        .fontWeight(FontWeight.Bold)\n    }\n  }\n}
编译告警日志如下：
Property 'link_value' can not be decorated with both @Link and private.\nProperty 'objectLink_value' can not be decorated with both @ObjectLink and private.
【正例】
@Entry\n@Component\nstruct AccessRestrictions {\n  @State link_value: string = \"Hello\";\n  @State objectLink_value: ComponentObj = new ComponentObj();\n  build() {\n    Column() {\n      ComponentChild({link_value: this.link_value, objectLink_value: this.objectLink_value})\n    }\n    .width('100%')\n  }\n}\n\n@Observed\nclass ComponentObj {\n  count: number = 0;\n}\n@Component\nstruct ComponentChild {\n  @Link link_value: string;\n  @ObjectLink objectLink_value: ComponentObj;\n  build() {\n    Column() {\n      Text(\"Hello\")\n        .fontSize(50)\n        .fontWeight(FontWeight.Bold)\n    }\n  }\n}
4.当成员变量被protected访问限定符修饰，并且通过父组件进行初始化赋值，ArkTS会进行校验并产生告警日志。
【反例】
@Entry\n@Component\nstruct AccessRestrictions {\n  build() {\n    Column() {\n      ComponentChild({regular_value: \"Hello\"})\n    }\n    .width('100%')\n  }\n}\n\n@Component\nstruct ComponentChild {\n  // 此处使用protected修饰符时会出现告警日志\n  protected regular_value: string = \"Hello\";\n  build() {\n    Column() {\n      Text(\"Hello\")\n        .fontSize(50)\n        .fontWeight(FontWeight.Bold)\n    }\n  }\n}
编译告警日志如下：
The member attributes of a struct can not be protected.
【正例】
@Entry\n@Component\nstruct AccessRestrictions {\n  build() {\n    Column() {\n      ComponentChild({regular_value: \"Hello\"})\n    }\n    .width('100%')\n  }\n}\n\n@Component\nstruct ComponentChild {\n  regular_value: string = \"Hello\";\n  build() {\n    Column() {\n      Text(\"Hello\")\n        .fontSize(50)\n        .fontWeight(FontWeight.Bold)\n    }\n  }\n}
5.当成员变量被private访问限定符、@Require和@State/@Prop/@Provide/@BuilderParam装饰器同时修饰，并且通过父组件进行初始化赋值，ArkTS会进行校验并产生告警日志。
【反例】
@Entry\n@Component\nstruct AccessRestrictions {\n  build() {\n    Column() {\n      ComponentChild({prop_value: \"Hello\"})\n    }\n    .width('100%')\n  }\n}\n@Component\nstruct ComponentChild {\n  // 此处使用private修饰符时会出现告警日志\n  @Require @Prop private prop_value: string = \"Hello\";\n  build() {\n    Column() {\n      Text(\"Hello\")\n        .fontSize(50)\n        .fontWeight(FontWeight.Bold)\n    }\n  }\n}
编译告警日志如下：
Property 'prop_value' can not be decorated with both @Require and private.\nProperty 'prop_value' is private and can not be initialized through the component constructor.
【正例】
@Entry\n@Component\nstruct AccessRestrictions {\n  build() {\n    Column() {\n      ComponentChild({prop_value: \"Hello\"})\n    }\n    .width('100%')\n  }\n}\n@Component\nstruct ComponentChild {\n  @Require @Prop prop_value: string = \"Hello\";\n  build() {\n    Column() {\n      Text(\"Hello\")\n        .fontSize(50)\n        .fontWeight(FontWeight.Bold)\n    }\n  }\n}
