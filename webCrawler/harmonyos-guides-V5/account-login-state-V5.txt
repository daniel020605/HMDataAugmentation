订阅华为账号的登录/登出事件
场景介绍
应用在前台时可以订阅Account Kit提供的华为账号登录/登出广播事件，来感知华为账号的登录状态，实现用户登录/登出应用的逻辑。应用也可通过getHuaweiIDState实时查询华为账号登录状态。
事件说明
以下是华为账号登录/登出发送的广播事件。
事件名称
描述
COMMON_EVENT_DISTRIBUTED_ACCOUNT_LOGIN
表示分布式账号登录成功的动作。华为账号登录成功也会发这个广播事件。
COMMON_EVENT_DISTRIBUTED_ACCOUNT_LOGOUT
表示分布式账号登出成功的动作。华为账号登出成功也会发这个广播事件。
开发前提
在进行代码开发前，请先确认您已完成配置Client ID工作。该场景无需申请scope权限。
开发步骤
 导入commonEventManager模块及相关公共模块。import { hilog } from '@kit.PerformanceAnalysisKit';\nimport { BusinessError, commonEventManager } from '@kit.BasicServicesKit'; 创建订阅者，并处理订阅结果。//订阅者信息。\nconst subscribeInfo: commonEventManager.CommonEventSubscribeInfo = {\n  events: [commonEventManager.Support.COMMON_EVENT_DISTRIBUTED_ACCOUNT_LOGIN,commonEventManager.Support.COMMON_EVENT_DISTRIBUTED_ACCOUNT_LOGOUT]\n};\nlet subscriber: commonEventManager.CommonEventSubscriber;\n\n//创建订阅者\ncommonEventManager.createSubscriber(subscribeInfo)\n  .then((commonEventSubscriber: commonEventManager.CommonEventSubscriber) => {\n    subscriber = commonEventSubscriber;\n    //订阅公共事件\n    commonEventManager.subscribe(subscriber,\n      (error: BusinessError, data: commonEventManager.CommonEventData) => {\n        if (error) {\n          hilog.error(0x0000, 'testTag',\n            `Failed to subscribe , code is ${error.code}, message is ${error.message}`);\n        } else {\n          if (data.event === commonEventManager.Support.COMMON_EVENT_DISTRIBUTED_ACCOUNT_LOGIN) {\n            // 订阅到华为账号登录事件\n          }\n          if (data.event === commonEventManager.Support.COMMON_EVENT_DISTRIBUTED_ACCOUNT_LOGOUT) {\n            // 订阅到华为账号登出事件\n          }\n        }\n      });\n  })\n  .catch((err: BusinessError) => {\n    hilog.error(0x0000, 'testTag', `Failed to createSubscriber. Code: ${err.code}, message: ${err.message}`);\n  }); 
