高亮显示PDF文档
PDF文档在预览时，可以对页面的矩形区域或文本设置高亮显示，高亮颜色可以自定义。
setHighlightText可以同时高亮多个不同的文本。
接口说明
接口名
描述
setHighlightText(pageIndex: number, textArray: string[], color: number): void
高亮指定文本。
setHighlightText和searchKey功能互斥。
示例代码
 加载PDF文档。 调用PdfView预览组件，渲染显示。 在按钮【setHighlightText】里，调用setHighlightText方法，设置单个或多个要高亮的文本。 
import { pdfService, PdfView, pdfViewManager } from '@kit.PDFKit';\nimport { common } from '@kit.AbilityKit';\n\n@Entry\n@Component\nstruct PdfPage {\n  private controller: pdfViewManager.PdfController = new pdfViewManager.PdfController();\n  private context = getContext() as common.UIAbilityContext;\n  private loadResult: pdfService.ParseResult = pdfService.ParseResult.PARSE_ERROR_FORMAT;\n\n  aboutToAppear(): void {\n    // 确保沙箱目录有input.pdf文档\n    let filePath = this.context.filesDir + '/input.pdf';\n    (async () => {\n      this.loadResult = await this.controller.loadDocument(filePath);      \n    })()\n  }\n\n  build() {\n    Column() {\n      Row() {\n        // 设置文本的高亮显示风格\n        Button('setHighlightText').onClick(async () => {\n          if (this.loadResult === pdfService.ParseResult.PARSE_SUCCESS) {            \n            this.controller.setHighlightText(0, ['白皮书'], 0xAAF9CC00);\n          }\n        })\n      }\n\n      // 加载PdfView组件进行预览\n      PdfView({\n        controller: this.controller,\n        pageFit: pdfService.PageFit.FIT_WIDTH,\n        showScroll: true\n      })\n        .id('pdfview_app_view')\n        .layoutWeight(1);\n    }\n    .width('100%').height('100%')\n  }\n}
