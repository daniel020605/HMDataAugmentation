创建PageAbility
通过DevEco Studio开发平台创建PageAbility时，DevEco Studio会在app.js/app.ets中默认生成onCreate()和onDestroy()方法，其他方法需要开发者自行实现。接口说明参见前述章节，创建PageAbility示例如下：
import featureAbility from '@ohos.ability.featureAbility';\nimport hilog from '@ohos.hilog';\n\nconst TAG: string = 'MainAbility';\nconst domain: number = 0xFF00;\n\nclass MainAbility {\n  onCreate() {\n    // 获取context并调用相关方法\n    let context = featureAbility.getContext();\n    context.getBundleName((data, bundleName) => {\n      hilog.info(domain, TAG, 'ability bundleName:' ,bundleName);\n    });\n    hilog.info(domain, TAG, 'Application onCreate');\n  }\n\n  onDestroy() {\n    hilog.info(domain, TAG, 'Application onDestroy');\n  }\n\n  onShow(): void {\n    hilog.info(domain, TAG, 'Application onShow');\n  }\n\n  onHide(): void {\n    hilog.info(domain, TAG, 'Application onHide');\n  }\n\n  onActive(): void {\n    hilog.info(domain, TAG, 'Application onActive');\n  }\n\n  onInactive(): void {\n    hilog.info(domain, TAG, 'Application onInactive');\n  }\n\n  onNewWant() {\n    hilog.info(domain, TAG, 'Application onNewWant');\n  }\n}\n\nexport default new MainAbility();
PageAbility创建成功后，其abilities相关的配置项在config.json中体现，一个名字为EntryAbility的config.json配置文件示例如下：
{\n  ...\n  \"module\": {\n    ...\n    \"abilities\": [\n      {\n        \"skills\": [\n          {\n            \"entities\": [\n              \"entity.system.home\"\n            ],\n            \"actions\": [\n              \"action.system.home\"\n            ]\n          }\n        ],\n        \"orientation\": \"unspecified\",\n        \"formsEnabled\": false,\n        \"name\": \".MainAbility\",\n        \"srcLanguage\": \"ets\",\n        \"srcPath\": \"MainAbility\",\n        \"icon\": \"$media:icon\",\n        \"description\": \"$string:MainAbility_desc\",\n        \"label\": \"$string:MainAbility_label\",\n        \"type\": \"page\",\n        \"visible\": true,\n        \"launchType\": \"singleton\"\n      },\n      ...\n    ]\n    ...\n  }\n}
FA模型中，可以通过featureAbility的getContext接口获取应用上下文，进而使用上下文提供的能力。
 表1 featureAbility接口说明
通过getContext获取应用上下文并获取分布式目录的示例如下：
import featureAbility from '@ohos.ability.featureAbility';\nimport fs from '@ohos.file.fs';\nimport promptAction from '@ohos.promptAction';\nimport hilog from '@ohos.hilog';\n\nconst TAG: string = 'PagePageAbilityFirst';\nconst domain: number = 0xFF00;
(async (): Promise<void> => {\n  let dir: string;\n  try {\n    hilog.info(domain, TAG, 'Begin to getOrCreateDistributedDir');\n    dir = await featureAbility.getContext().getOrCreateDistributedDir();\n    promptAction.showToast({\n      message: dir\n    });\n    hilog.info(domain, TAG, 'distribute dir is ' + dir);\n    let fd: number;\n    let path = dir + '/a.txt';\n    fd = fs.openSync(path, fs.OpenMode.READ_WRITE).fd;\n    fs.close(fd);\n  } catch (error) {\n    hilog.error(domain, TAG, 'getOrCreateDistributedDir failed with : ' + error);\n  }\n})()
