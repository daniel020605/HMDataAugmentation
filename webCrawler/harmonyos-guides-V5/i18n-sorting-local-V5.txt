本地习惯排序
使用场景
在用户使用到排序的场景下，提供符合用户使用习惯的排序方法展示内容。例如，设置中“系统和语言”的语言列表，列表需要按照当地用户习惯进行排序。
开发步骤
多语言列表按照本地习惯进行排序，通过Collator类的compare接口实现，具体开发步骤如下。
 导入模块。 import { intl } from '@kit.LocalizationKit'; 创建collator排序对象。 构造函数支持通过CollatorOptions设置不同的排序格式，具体请参考表1。 let collator = new intl.Collator(locale: string | Array<string>, options?: CollatorOptions); 比较字符串。 let compareResult = collator.compare(first: string, second: string);\n// compareResult 为负数，表示第一个参数排在第二个参数之前\n// compareResult 为0，表示第一个参数与第二个参数排序不分先后\n// compareResult 为正数，表示第一个参数排在第二个参数之后 
排序格式选项
表1 CollatorOptions各参数取值和显示效果
开发实例
// 导入模块\nimport { intl } from '@kit.LocalizationKit';\n\n// 创建排序对象\nlet options: intl.CollatorOptions = {\n    localeMatcher: \"lookup\", \n    usage: \"sort\",\n    sensitivity: \"case\" // 区分大小写\n};\nlet collator = new intl.Collator(\"zh-CN\", options);\n\n// 区分大小写排序\nlet array = [\"app\", \"App\", \"Apple\", \"ANIMAL\", \"animal\", \"apple\", \"APPLE\"];\narray.sort((a, b) => {\n    return collator.compare(a, b);\n})\nconsole.log(\"result: \", array);  // animal ANIMAL app App apple Apple APPLE\n\n// 中文拼音排序\narray = [\"苹果\", \"梨\", \"香蕉\", \"石榴\", \"甘蔗\", \"葡萄\", \"橘子\"];\narray.sort((a, b) => {\n    return collator.compare(a, b);\n})\nconsole.log(\"result: \", array);  // 甘蔗,橘子,梨,苹果,葡萄,石榴,香蕉\n\n// 按笔画排序\noptions = {\n    localeMatcher: \"lookup\", \n    usage: \"sort\",\n    collation: \"stroke\"\n};\ncollator = new intl.Collator(\"zh-CN\", options);\narray = [\"苹果\", \"梨\", \"香蕉\", \"石榴\", \"甘蔗\", \"葡萄\", \"橘子\"];\narray.sort((a, b) => {\n    return collator.compare(a, b);\n})\nconsole.log(\"result: \", array);  // 甘蔗,石榴,苹果,香蕉,梨,葡萄,橘子\n\n// 搜索匹配的字符串\noptions = {\n    usage: \"search\",\n    sensitivity: \"base\"\n};\ncollator = new intl.Collator(\"tr\", options);\nlet sourceArray = ['Türkiye', 'TüRkiye', 'salt', 'bright'];\nlet s = 'türkiye';\nlet matches = sourceArray.filter(item => collator.compare(item, s) === 0);\nconsole.log(matches.toString());  // Türkiye,TüRkiye
