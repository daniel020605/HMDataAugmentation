流量管理
简介
流量管理提供了基于物理网络的数据流量统计能力，支持基于网卡/UID 的流量统计。
流量管理主要实现功能有：
 支持基于网卡/UID 的实时流量统计。 支持基于网卡/UID 的历史流量统计。 支持基于网卡/UID 的流量变化订阅。 
为了保证应用的运行效率，大部分 API 调用都是异步的，对于异步调用的 API 均提供了 callback 和 Promise 两种方式，以下示例均采用 Promise 函数，更多方式可以查阅API 参考。
以下分别介绍具体开发方式。
接口说明
完整的 JS API 说明以及实例代码请参考：statistics 链接。
获取网卡/UID 的实时流量统计数据
 获取指定网卡实时流量数据。 获取蜂窝实时流量数据。 获取所有网卡实时流量数据。 获取指定应用实时流量数据。 获取指定socket实时流量数据。 
// 从@kit.NetworkKit中导入statistics命名空间\nimport { statistics, socket } from '@kit.NetworkKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\n\n// 获取指定网卡实时下行流量数据。\nstatistics.getIfaceRxBytes(\"wlan0\").then((stats: number) => {\n  console.log(JSON.stringify(stats));\n});\n\n// 获取指定网卡实时上行流量数据。\nstatistics.getIfaceTxBytes(\"wlan0\").then((stats: number) => {\n  console.log(JSON.stringify(stats));\n});\n\n// 获取蜂窝实时下行流量数据。\nstatistics.getCellularRxBytes().then((stats: number) => {\n  console.log(JSON.stringify(stats));\n});\n\n// 获取蜂窝实时上行流量数据。\nstatistics.getCellularTxBytes().then((stats: number) => {\n  console.log(JSON.stringify(stats));\n});\n\n// 获取所有网卡实时下行流量数据。\nstatistics.getAllRxBytes().then((stats: number) => {\n  console.log(JSON.stringify(stats));\n});\n\n// 获取所有网卡实时上行流量数据。\nstatistics.getAllTxBytes().then((stats: number) => {\n  console.log(JSON.stringify(stats));\n});\n\n// 获取指定应用实时下行流量数据。\nlet uid = 20010038;\nstatistics.getUidRxBytes(uid).then((stats: number) => {\n  console.log(JSON.stringify(stats));\n});\n\n// 获取指定应用实时上行流量数据。\nlet uids = 20010038;\nstatistics.getUidTxBytes(uids).then((stats: number) => {\n  console.log(JSON.stringify(stats));\n});\n\n// 获取指定socket实时下行流量数据。\nlet tcp: socket.TCPSocket = socket.constructTCPSocketInstance();\ntcp.getSocketFd().then((sockfd: number) => {\n  statistics.getSockfdRxBytes(sockfd).then((stats: number) => {\n    console.log(JSON.stringify(stats));\n  }).catch((err: BusinessError) => {\n    console.error(JSON.stringify(err));\n  });\n});\n\n// 获取指定socket实时上行流量数据。\ntcp.getSocketFd().then((sockfd: number) => {\n  statistics.getSockfdTxBytes(sockfd).then((stats: number) => {\n    console.log(JSON.stringify(stats));\n  }).catch((err: BusinessError) => {\n    console.error(JSON.stringify(err));\n  });\n});
