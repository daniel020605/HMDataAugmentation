@typescript-eslint/member-delimiter-style
要求接口和类型别名中的成员之间使用特定的分隔符。
支持定义的分隔符有三种：分号、逗号、无分隔符。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@typescript-eslint/member-delimiter-style\": \"error\"\n  }\n}
选项
详情请参考@typescript-eslint/member-delimiter-style选项。
正例
// 默认接口/类型别名定义为多行的场景下，每个成员应以分号 (;) 分隔。 最后一个成员必须有一个分隔符。\n// 默认接口/类型别名定义为单行的场景下，每个成员应以分号 (;) 分隔。最后一个成员不能有分隔符。\n// 接口/类型别名中的任何换行符都会使其成为多行。\nexport interface Foo1 {\n  name: string;\n\n  greet(): string;\n}\n\nexport interface Foo2 { name: string }
反例
// missing semicolon delimiter\nexport interface Foo {\n  name: string\n  greet(): string\n}\n\n// using incorrect delimiter\nexport interface Bar {\n  name: string,\n  greet(): string,\n}\n\n// missing last member delimiter\nexport interface Baz {\n  name: string;\n  greet(): string\n}
规则集
plugin:@typescript-eslint/all
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
