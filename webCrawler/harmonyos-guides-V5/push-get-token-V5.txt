获取Push Token
场景介绍
Push Kit在您获取Push Token时进行了推送服务权益校验，请您在进行开发前先阅读开通推送服务章节，完成相关配置。
Push Token标识了每台设备上每个应用，开发者调用getToken()接口向Push Kit服务端请求Push Token，获取到之后使用Push Token来推送消息。
Push Token一般情况不会变化，仅下列场景Push Token会发生变化：
 卸载应用后重新安装。 设备恢复出厂设置。 应用显式调用deleteToken()接口后重新调用getToken()接口。 应用显式调用deleteAAID()接口后重新调用getToken()接口。 
因此，建议您在应用启动时调用getToken()接口，若设备的Push Token发生变化，及时上报到您的应用服务器更新Push Token。
注意事项
 请勿使用Push Token跟踪标记用户。 应用不要固定判断Push Token长度，因为Push Token长度可能会变化。 禁止应用频繁申请Push Token。建议应用每次启动时获取Push Token。 只有在AppGallery Connect平台开通推送服务后，getToken方法才会返回Push Token。 
接口说明
接口返回值有两种返回形式：Callback和Promise回调。下表中仅展示Promise回调形式的接口，Promise和Callback只是返回值方式不一样，功能相同。
接口名
描述
getToken(): Promise<string>
以Promise形式获取Push Token。
deleteToken(): Promise<void>
以Promise形式删除Push Token。
获取Push Token
 导入pushService模块及相关公共模块。import { pushService } from '@kit.PushKit';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\nimport { UIAbility, AbilityConstant, Want } from '@kit.AbilityKit';  建议在您的UIAbility（例如EntryAbility）的onCreate()方法中调用getToken()接口获取Push Token并上报到您的服务端，方便您的服务端向终端推送消息。代码示例：export default class EntryAbility extends UIAbility {\n  // 入参 want 与 launchParam 并未使用，为初始化项目时自带参数\n  async onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): Promise<void> {\n    // 获取Push Token\n    try {\n      const pushToken: string = await pushService.getToken();\n      hilog.info(0x0000, 'testTag', 'Succeeded in getting push token');\n    } catch (err) {\n      let e: BusinessError = err as BusinessError;\n      hilog.error(0x0000, 'testTag', 'Failed to get push token: %{public}d %{public}s', e.code, e.message);\n    }\n    // 上报Push Token并上报到您的服务端\n  }\n}  
若您获取Push Token时发生APP身份验证失败错误（1000900010），请参考ArkTS API错误码排查。
删除Push Token
删除Push Token后，本应用下的所有Push Kit历史数据会一并删除。非必要情况，请您不要主动调用deleteToken()接口。
 导入pushService模块import { pushService } from '@kit.PushKit';  调用PushService.deleteToken()接口删除Push Token。代码示例：import { pushService } from '@kit.PushKit';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\nimport { UIAbility } from '@kit.AbilityKit';\n\nexport default class EntryAbility extends UIAbility {\n  async myDeletePushToken() {\n    try {\n      await pushService.deleteToken();\n      hilog.info(0x0000, 'testTag', 'Succeeded in deleting push token');\n    } catch (err) {\n      let e: BusinessError = err as BusinessError;\n      hilog.error(0x0000, 'testTag', 'Failed to delete push token: %{public}d %{public}s', e.code, e.message);\n    }\n  }\n}  
