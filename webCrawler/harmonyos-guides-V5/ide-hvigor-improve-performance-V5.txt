提高hvigor构建性能
构建性能对生产力至关重要，完成构建所需时间越长，开发效率就越低。构建花费时间越少，您对新问题的反应效率就越快，并且可以频繁地进行验证。
这意味着投入一些精力使您的构建尽可能快，是有意义的。本节提供了几种加快构建速度的方法，此外，您还将找到有关导致构建性能下降的原因以及如何避免这种情况的详细信息。
启用守护进程
请参考hvigor守护进程启用守护进程。
启用并行执行
大部分工程都包含了多个子工程，其中一些子工程是相互独立的，也就是说，它们之间没有状态共享。在大多数情况下，通过并行构建可以有效地减少多个子工程的整体构建时间。然而，在特定的情况下，如子工程之间存在大量的依赖关系，可能无法显著缩短构建时间。节省的具体时间取决于您的工程结构和子工程之间的依赖关系。
默认情况下，hvigor会开启并行执行。您可以通过parallel标志控制是否启用并行：
// 启用并行执行\nhvigorw <task> --parallel\n// 关闭并行执行\nhvigorw <task> --no-parallel
您也可以配置hvigor-config.json5中execution.parallel选项来控制是否启用并行执行。
启用增量构建
增量构建是hvigor执行任务的一种优化，如果在两次执行任务工程中，执行任务的输入和输出没有更改，hvigor会跳过该任务的执行。
hvigor自定义任务要与增量构建兼容，需指定输入和输出，有关更多的增量构建，请查看增量构建章节。
hvigor默认启用增量构建，您可以使用以下标志设置增量构建开关：
// 启用增量构建\nhvigorw <task> --incremental\n// 关闭增量构建\nhvigorw <task> --no-incremental
您也可以配置hvigor-config.json5中execution.incremental选项来控制是否启用增量构建。开启增量构建后，您应该会在增量执行场景下看到显著的性能改进。
增加守护进程内存大小
请参考hvigor守护进程增加守护进程内存大小。
构建能力分析
在任何更改之前，请使用分析构建能力来检查您的构建。正确的构建检查可以帮助您了解：
构建您的项目需要多长时间您的构建哪部分很慢
检查提供了一个比较点，您可以更好的了解本节建议对构建时长的影响。该能力已集成在DevEco Studio中，您可参考分析构建性能章节获取更多能力信息。
