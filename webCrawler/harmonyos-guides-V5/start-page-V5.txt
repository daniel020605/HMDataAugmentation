启动指定页面
当PageAbility的启动模式设置为单例时（具体设置方法和典型场景示例见PageAbility的启动模式，缺省情况下是单实例模式），若PageAbility已被拉起，再次启动PageAbility会触发onNewWant回调（即非首次拉起）。应用开发者可以通过want传递启动参数，例如开发者希望指定页面启动PageAbility，可以通过want中的parameters参数传递pages信息，具体示例代码如下：
调用方PageAbility的app.ets中或者page中，使用startAbility再次拉起PageAbility，通过want中的uri参数传递页面信息：
import featureAbility from '@ohos.ability.featureAbility';\nimport Want from '@ohos.app.ability.Want';\nimport hilog from '@ohos.hilog';\n\nconst TAG: string = 'PagePageAbilityFirst';\nconst domain: number = 0xFF00;
(async (): Promise<void> => {\n  let wantInfo: Want = {\n    bundleName: 'com.samples.famodelabilitydevelop',\n    abilityName: 'com.samples.famodelabilitydevelop.PageAbilitySingleton',\n    parameters: { page: 'pages/second' }\n  };\n  featureAbility.startAbility({ want: wantInfo }).then((data) => {\n    hilog.debug(domain, TAG, `restartAbility success : ${data}`);\n  });\n})()
在目标端PageAbility的onNewWant回调中获取包含页面信息的want参数：
// GlobalContext.ts 构造单例对象\nexport class GlobalContext {\n  private constructor() {\n  }\n\n  private static instance: GlobalContext;\n  private _objects = new Map<string, Object>();\n\n  public static getContext(): GlobalContext {\n    if (!GlobalContext.instance) {\n      GlobalContext.instance = new GlobalContext();\n    }\n    return GlobalContext.instance;\n  }\n\n  getObject(value: string): Object | undefined {\n    return this._objects.get(value);\n  }\n\n  setObject(key: string, objectClass: Object): void {\n    this._objects.set(key, objectClass);\n  }\n}
import Want from '@ohos.app.ability.Want';\nimport featureAbility from '@ohos.ability.featureAbility';\nimport { GlobalContext } from '../utils/GlobalContext';\n\nclass PageAbilitySingleton {\n  onNewWant(want: Want) {\n    featureAbility.getWant().then((want) => {\n      GlobalContext.getContext().setObject('newWant', want);\n    })\n  }\n}\n\nexport default new PageAbilitySingleton();
在目标端页面的自定义组件中获取包含页面信息的want参数并根据uri做路由处理：
import Want from '@ohos.app.ability.Want';\nimport router from '@ohos.router';\nimport { GlobalContext } from '../../utils/GlobalContext';\n\n@Entry\n@Component\nstruct First {\n  onPageShow() {\n    let newWant = GlobalContext.getContext().getObject('newWant') as Want;\n    if (newWant) {\n      if (newWant.parameters) {\n        if (newWant.parameters.page) {\n          router.pushUrl({ url: newWant.parameters.page as string});\n          GlobalContext.getContext().setObject(\"newWant\", undefined)\n        }\n      }\n    }\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Text('singleton_first_title')\n          .fontSize(24)\n          .fontWeight(FontWeight.Bold)\n          .textAlign(TextAlign.Start)\n          .margin({ top: 12, bottom: 11, right: 24, left: 24 })\n      }\n      .width('100%')\n      .height(56)\n      .justifyContent(FlexAlign.Start)\n\n      Image('pic_empty')\n        .width(120)\n        .height(120)\n        .margin({ top: 224 })\n\n      Text('no_content')\n        .fontSize(14)\n        .margin({ top: 8, bottom: 317, right: 152, left: 152 })\n        .fontColor('text_color')\n        .opacity(0.4)\n    }\n    .width('100%')\n    .height('100%')\n    .backgroundColor('backGrounding')\n  }\n}
当PageAbility的启动模式设置为多实例模式或为首次启动单例模式的PageAbility时（具体设置方法和典型场景示例见PageAbility的启动模式），在调用方PageAbility中，通过want中的parameters参数传递要启动的指定页面的pages信息，调用startAbility()方法启动PageAbility。被调用方可以在onCreate中使用featureAbility的getWant方法获取want，再通过调用router.pushUrl实现启动指定页面。
调用方的页面中实现按钮点击触发startAbility方法启动目标端PageAbility，startAbility方法的入参want中携带指定页面信息，示例代码如下：
import featureAbility from '@ohos.ability.featureAbility';\nimport Want from '@ohos.app.ability.Want';\nimport { BusinessError } from '@ohos.base';\nimport fs from '@ohos.file.fs';\nimport promptAction from '@ohos.promptAction';\nimport worker from '@ohos.worker';\nimport hilog from '@ohos.hilog';\n\nconst TAG: string = 'PagePageAbilityFirst';\nconst domain: number = 0xFF00;\n\n@Entry\n@Component\nstruct PagePageAbilityFirst {\n  build() {\n    Column() {\n      //...\n      List({ initialIndex: 0 }) {\n        //...\n        ListItem() {\n          Flex({ justifyContent: FlexAlign.SpaceBetween, alignContent: FlexAlign.Center }) {\n          //...\n          }\n          .onClick(() => {\n            let want: Want = {\n              bundleName: 'com.samples.famodelabilitydevelop',\n              abilityName: 'com.samples.famodelabilitydevelop.PageAbilityStandard',\n              parameters: { page: 'pages/first' }\n            };\n            featureAbility.startAbility({ want: want }).then((data) => {\n              hilog.info(domain, TAG, `startAbility finish:${data}`);\n            }).catch((err: BusinessError) => {\n              hilog.info(domain, TAG, `startAbility failed errcode:${err.code}`);\n            })\n          })\n        }\n        //...\n        ListItem() {\n          Flex({ justifyContent: FlexAlign.SpaceBetween, alignContent: FlexAlign.Center }) {\n          //...\n          }\n          .onClick(() => {\n            let want: Want = {\n              bundleName: 'com.samples.famodelabilitydevelop',\n              abilityName: 'com.samples.famodelabilitydevelop.PageAbilityStandard',\n              parameters: { page: 'pages/second' }\n            };\n            featureAbility.startAbility({ want: want }).then((data) => {\n              hilog.info(domain, TAG, `startAbility finish:${data}`);\n            }).catch((err: BusinessError) => {\n              hilog.info(domain, TAG, `startAbility failed errcode:${err.code}`);\n            })\n          })\n        }\n        //...\n      }\n      //...\n    }\n    //...\n  }\n}
目标端PageAbility的onCreate生命周期回调中通过featureAbility的getWant方法获取want，并对参数进行解析，实现指定页面拉起：
import featureAbility from '@ohos.ability.featureAbility';\nimport router from '@ohos.router';\n\nclass PageAbilityStandard {\n  onCreate() {\n    featureAbility.getWant().then((want) => {\n      if (want.parameters) {\n        if (want.parameters.page) {\n          router.pushUrl({ url: want.parameters.page as string });\n        }\n      }\n    })\n  }\n}\n\nexport default new PageAbilityStandard();
