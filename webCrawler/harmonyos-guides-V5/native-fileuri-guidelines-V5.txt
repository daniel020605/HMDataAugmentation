FileUri开发指导(C/C++)
场景介绍
FileUri提供了关于文件URI的基本操作，对外提供了URI与沙箱路径之间互相转换、远端URI判定、获取URI所在目录路径的URI等接口，方便用户将文件URI与沙箱路径相互转换。
基本概念
结果集：满足使用场景正确的路径或者URI。
约束限制
 转换或者判断URI类型之前必须保证传入的参数正确有效。 为保证数据的准确性，在转换或者判断过程中只允许处理一个对象。 
接口说明
接口的详细说明，请参考API参考
开发步骤
在CMake脚本中链接动态库
CMakeLists.txt中添加以下lib。
target_link_libraries(sample PUBLIC libohfileuri.so)
添加头文件
#include <filemanagement/file_uri/oh_file_uri.h>
 调用OH_FileUri_GetUriFromPath接口，在接口中malloc的内存需要在使用完后释放，因此需要free对应的内存。示例代码如下所示：  #include <cstring>\n\n void OH_FileUri_GetUriFromPathExample() {\n     char *path = \"/data/storage/el2/base/files/test.txt\";\n     unsigned int length = strlen(path);\n     char *uriResult = NULL;\n     FileManagement_ErrCode ret = OH_FileUri_GetUriFromPath(path, length ,&uriResult); \n     if (ret == 0 && uriResult !=NULL) {\n         printf(\"pathUri=%s\", uriResult); // 应用a获取到的URI为：file://com.example.demo/data/storage/el2/base/files/test.txt\n     }\n     if (uriResult != NULL) {\n         free(uriResult);\n     }\n }     调用OH_FileUri_GetPathFromUri通过URi转成对应的PATH，在接口中malloc的内存需要在使用完后释放，因此需要free对应的内存。示例代码如下所示：  #include <cstring>\n\n void OH_FileUri_GetPathFromUriExample() {\n     char *uri = \"file://com.example.demo/data/storage/el2/base/files/test.txt\";\n     unsigned int length = strlen(uri);\n     char *pathResult = NULL;\n     FileManagement_ErrCode ret = OH_FileUri_GetPathFromUri(uri, length, &pathResult);\n     if (ret == 0 && pathResult != NULL) {\n         printf(\"pathResult=%s\", pathResult); // PathResult值为：/data/storage/el2/base/files/test.txt\n     }\n     if (pathResult != NULL) {\n         free(pathResult);\n     }\n } 调用OH_FileUri_GetFullDirectoryUri获取URI所在路径的URI，在接口中malloc的内存需要在使用完后释放，因此需要free对应的内存。示例代码如下所示：  #include <cstring>\n \n void OH_FileUri_GetFullDirectoryUriExample() {\n     char *uri = \"file://com.example.demo/data/storage/el2/base/files/test.txt\";\n     unsigned int length = strlen(uri);\n     char *uriResult = NULL;\n     FileManagement_ErrCode ret = OH_FileUri_GetFullDirectoryUri(uri, length, &uriResult);\n     if (ret == 0 && uriResult != NULL) {\n         printf(\"pathUri=%s\",uriResult);//URI所在路径的URI：file://com.example.demo/data/storage/el2/base/files/\n     }\n     if (uriResult != NULL) {\n         free(uriResult);\n     }\n } 可以调用OH_FileUri_IsValidUri接口进行URI格式验证。 示例代码如下所示：  #include <cstring>\n \n void OH_FileUri_IsValidUriExample() {\n     char *uri = \"file://com.example.demo/data/storage/el2/base/files/test.txt\";\n     unsigned int length = strlen(uri);\n     bool falgs = OH_FileUri_IsValidUri(uri, length);\n     printf(\"The URI is valid? falgs=%d\", falgs);\n } 调用OH_FileUri_GetFileName获取URI中的文件名称，在接口中malloc的内存需要在使用完后释放，因此需要free对应的内存。示例代码如下所示：  #include <cstring>\n \n void OH_FileUri_GetFileNameExample() {\n     char *uri = \"file://com.example.demo/data/storage/el2/base/files/test.txt\";\n     unsigned int length = strlen(uri);\n     char *uriResult = NULL;\n     FileManagement_ErrCode ret = OH_FileUri_GetFileName(uri, length, &uriResult);\n     if (ret == 0 && uriResult != NULL) {\n         printf(\"pathUri=%s\",uriResult);//获取到URI中的文件名：test.txt\n     }\n     if (uriResult != NULL) {\n         free(uriResult);\n     }\n } 
