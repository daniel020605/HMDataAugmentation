内存分析及优化
应用在开发过程中，可能会因为API使用错误、变量未及时释放、异常频繁创建/释放内存等情况引发各种内存问题。
DevEco Profiler提供了基础的内存场景分析Allocation，您可以使用Allocation来分析应用或元服务在运行时的内存分配及使用情况，识别和定位内存泄漏、内存抖动以及内存溢出等问题，对应用或元服务的内存使用进行优化。
在设备连接完成后，可按照如下方法查看内存分析结果：
请参考模块级build-profile.json5文件，增加strip字段并赋值为false。采集函数栈解析符号需要附带符号表信息，无符号表信息可能采集不到函数名称，因此请录制模板前按照下图进行配置。 创建Allocation分析任务并录制相关数据，操作方法可参考性能问题定位：深度录制，或在会话区选择Open File，导入历史数据。  在任务分析窗口，可以通过“Ctrl+鼠标滚轮”缩放时间轴，通过“Shift+鼠标滚轮”左右移动时间轴。或使用快捷键W/S放大或缩小时间轴，使用A键/D键可以左右移动时间轴。将鼠标悬停在泳道任意位置，可以通过M键添加单点时间标签。鼠标框选要关注的时间段，可以通过“Shift+M”添加时间段时间标签。在任务分析窗口，可以通过“ctrl+, ”向前选中单点时间标签，通过“ctrl+. ”向后选中单点时间标签。在任务分析窗口，可以通过“ctrl+[ ”向前选中时间段时间标签，通过“ctrl+]”向后选中时间段时间标签。Allocation分析支持离线符号解析能力，请参见离线符号解析。  Allocation分析任务支持在录制前单击指定要录制的泳道：Memory泳道：显示当前进程的物理内存使用情况，其度量方式包含： PSS：进程独占内存和按比例分配共享库占用内存之和。  RSS：进程独占内存和相关共享库占用内存之和。  USS：进程独占内存。 默认只显示PSS的统计图，如需要查看USS或RSS，需要在Memory泳道的右上角点选相关数据类型。  展开Memory泳道，子泳道展示的是按照内存类型将进程PSS值拆分开的各个维度的内存信息，类型包含ArkTS Heap/Native Heap/GL/Graph/Gurad/AnonPage Other/FilePage Other/Dev/Stack/.hap/.so/.ttf。默认展示其中的五个子泳道，如要显示其他子泳道，可以点击主泳道的options标签并勾选其他泳道来查看。   ArkTS Heap：ArkTS堆的内存占用。Native Heap：Native层（主要是应用依赖的so库的C/C++代码）使用new/malloc分配的堆内存。GL：应用：纹理内存，RS：纹理+图形渲染内存。Graph：该进程按去重规则统计的dma内存占用，包括直接通过接口申请的dma buffer和通过allocator_host申请的dma buffer。Gurad：保护段所占内存。AnonPage Other：其他有匿名页所占内存（非heap、anon:native_heap、anon:ArkTS heap开头的匿名页）。FilePage Other：其他没有被映射到文件的页所占内存。Dev：进程加载的以/dev开头的文件所占内存。Stack：栈内存。.hap：进程加载的.hap文件所占内存.so：进程加载的.so动态库所占内存。.ttf：进程加载的.tff字体文件所占内存。  ArkTS Allocation泳道：显示方舟虚拟机上的内存分配信息。该泳道默认不展示，如需录制该泳道数据，在录制前单击左上角菜单栏图标，勾选ArkTS Allocation泳道。由于隐私安全政策，已上架应用市场的应用不支持录制此泳道。建议避免同时录制ArkTS Allocation及Native Allocation泳道，避免影响分析准确性。Native Allocation泳道：显示具体的Native内存分配情况，包括静态统计数据、分配栈、每层函数栈消耗的Native内存等信息。由于隐私安全政策，已上架应用市场的应用不支持录制此泳道。单击Native Allocation泳道的“options”下拉列表，可以设置是否为统计模式、统计间隔、最小跟踪内存、回栈模式、JS回栈、JS回栈深度和Native回栈深度。默认采用统计模式，统计间隔只在统计模式下才需要设置，可设置范围为1s~3600s，默认为10s，默认最小跟踪内存为1024Bytes。FP回栈模式下需要设置JS回栈深度和Native回栈深度，DWARF回栈模式下仅需要设置回栈深度。默认Native回栈深度为10层，JS回栈深度可配置范围为0-128，默认10层。设置完成后，在录制期间小于此大小的内存分配将被忽略，最大回栈深度将达到设置的值。  设置的最小跟踪内存数值越小、回栈深度越大，对应用造成的影响就越大，可能会导致DevEco Profiler卡顿。请根据应用实际的调测情况进行合理设置。统计模式用于不关注单次分配、关注应用较长时间的内存变化情况的场景，将指定的采样间隔内的数据做合并统计，以达到降低处理数据量，提高录制效率和时长的目的。设置的Sampling Interval为近似值，即尽可能地在接近这个时间内做统计汇总，存在一定的偏差，偏差不超过1s，这个偏差不会对内存分配的正确性产生影响。     在任务录制过程中，单击分析窗口左上角的可启动内存回收机制。当方舟虚拟机的调优对象的某个程序/进程占用的部分内存空间在后续的操作中不再被该对象访问时，内存回收机制会自动将这部分空间归还给系统，降低程序错误概率，减少不必要的内存损耗。   在目标泳道上长按鼠标左键并拖拽，框选要展示分析的时间段。Details区域中显示此时间段内指定类型的内存分析统计信息： Memory泳道：主泳道的详情区域显示当前框选时间段内各采样点的应用内存PSS总和以及各种内存页面状态的内存占用总和。 子泳道的详情区域显示该泳道所代表的内存类型的框选时间段内各采样点的PSS总和以及各种内存页面状态的实际占用情况。 Graph字段统计方式为：计算/proc/process_dmabuf_info节点下该进程使用的内存大小。    ArkTS Allocation泳道：显示被选择进程所使用的所有ArkTS内存总和，框选后展示此时段内录制到的所有方舟实例的对象分配信息。框选子泳道后显示当前框选时段内运行对象的内存使用情况，包括层级、对象自身内存大小、对象关联内存大小等。“Details”区域中带标识的对象，表示其可以通过窗口访问。每个时段内已释放的内存大小在柱子上置灰，未释放的内存保持绿色。  Native Allocation泳道：框选子泳道后显示具体的内存分配，包括静态统计数据、分配栈等。Statistics页签中显示该段时间内的静态分配情况，包括分配方式（Malloc或Mmap）、总分配内存大小、总分配次数、尚未释放的内存大小、尚未释放次数、已释放的内存大小、已释放次数。点击任意对象上的跳转按钮，可跳转至此类对象的详细占用/分配信息。当前统计模式下不支持跳转。 Call Trees页签显示线程的内存分配栈情况，包括函数地址或符号、分配大小、占比以及函数栈帧的类别等。单击任一行栈帧，“More”区域将显示经过该栈帧的分配内存最大的调用栈。Allocations List显示内存分配的详细信息，包括内存块起始地址、时间戳、当前活动状态、大小、调用的库、调用库的具体函数、事件类型（与Statistics页签的分配方式对应）等。 统计模式（Statistics Mode）下不存在Allocations List信息。  选择任一对象，右侧会展示与该对象相关的所有库和调用者。    （可选）根据分析结果，双击可能存在问题的调用栈，跳转至相关代码。开发者可根据实际需要进行优化。 Release应用暂不支持跳转到用户侧Native代码。  
