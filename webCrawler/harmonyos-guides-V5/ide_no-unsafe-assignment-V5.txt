@typescript-eslint/no-unsafe-assignment
禁止将“any”类型的值赋值给变量和属性。
该规则仅支持对.js/.ts文件进行检查。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@typescript-eslint/no-unsafe-assignment\": \"error\"\n  }\n}
选项
该规则无需配置额外选项。
正例
let [x] = ['1'];\n[x] = ['1'] as [string];\nconsole.info([x].toString());\n\n// generic position examples\nexport const a1: Set<string> = new Set<string>();\nexport const a2: Map<string, string> = new Map<string, string>();\nexport const a3: Set<string[]> = new Set<string[]>();\nexport const a4: Set<Set<Set<string>>> = new Set<Set<Set<string>>>();
反例
let [x] = ['1'];\n[x] = ['1'] as [any];\n[x] = '1' as any;\nconsole.info([x].toString());\n\n// generic position examples\nexport const a1: Set<string> = new Set<any>();\nexport const a2: Map<string, string> = new Map<any, string>();\nexport const a3: Set<string[]> = new Set<any[]>();\nexport const a4: Set<Set<Set<string>>> = new Set<Set<Set<any>>>();
规则集
plugin:@typescript-eslint/recommended\nplugin:@typescript-eslint/all
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
