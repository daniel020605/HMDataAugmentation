气泡
场景介绍
本章节将向您介绍如何在地图的指定位置添加气泡。
您可以通过气泡在道路上指定位置显示测速、拥堵情况。气泡支持功能：
 支持设置四个方向的图标（传入的图标宽高需要相同）。 支持设置图标碰撞规则。 支持设置当前气泡的候选坐标段，通过计算使气泡在最佳的线段位置上。 支持设置图标动画。 支持添加点击事件。 
接口说明
添加气泡功能主要由BubbleParams、addBubble和Bubble提供，更多接口及使用方法请参见接口文档。
接口名
描述
BubbleParams
气泡参数。
addBubble(params: mapCommon.BubbleParams): Promise<Bubble>
在地图上添加气泡。
Bubble
气泡，支持更新和查询相关属性。
开发步骤
[h2]添加气泡
 导入相关模块。import { MapComponent, mapCommon, map } from '@kit.MapKit';\nimport { AsyncCallback } from '@kit.BasicServicesKit'; 添加气泡，在Callback方法中创建初始化参数并新建气泡。@Entry\n@Component\nstruct BubbleDemo {\n  private mapOptions?: mapCommon.MapOptions;\n  private mapController?: map.MapComponentController;\n  private callback?: AsyncCallback<map.MapComponentController>;\n  private bubble?: map.Bubble;\n\n  aboutToAppear(): void {\n    this.mapOptions = {\n      position: {\n        target: {\n            latitude: 39.918,\n            longitude: 116.397\n        },\n        zoom: 14\n      }\n    };\n\n    this.callback = async (err, mapController) => {\n      if (!err) {\n        this.mapController = mapController;\n        let bubbleOptions: mapCommon.BubbleParams = {\n           // 气泡位置\n           positions: [[{ latitude: 39.918, longitude: 116.397 }]],\n           // 设置图标，必须提供4个方向的图标，图标存放在resources/rawfile\n           icons: [\n              'speed_limit_10.png',\n              'speed_limit_20.png',\n              'speed_limit_30.png',\n              'speed_limit_40.png'\n           ],\n           // 定义气泡的显示属性，为true时，在被碰撞后仍能显示\n           forceVisible: true,\n           // 定义气泡碰撞优先级，数值越大，优先级越低\n           priority: 3,\n           // 定义气泡展示的最小层级\n           minZoom: 2,\n           // 定义气泡展示的最大层级\n           maxZoom: 20,\n           // 定义气泡是否可见\n           visible: true,\n           // 定义气泡叠加层级属性\n           zIndex: 1\n        }\n        // 添加气泡\n        this.bubble = await this.mapController.addBubble(bubbleOptions);\n      }\n    };\n  }\n\n  build() {\n    Stack() {\n      Column() {\n        MapComponent({ mapOptions: this.mapOptions, mapCallback: this.callback });\n      }.width('100%')\n    }.height('100%')\n  }\n}  
[h2]设置监听气泡点击事件
this.mapController?.on(\"bubbleClick\", (bubble) => {\n  console.info(`on-BubbleClick bubble = ${bubble.getId()}`);\n});
[h2]气泡动画
Bubble调用setAnimation(animation: Animation)设置动画。
Bubble调用startAnimation启动动画。
let animation: map.ScaleAnimation = new map.ScaleAnimation(1, 3, 1, 3);\n// 设置动画单次的时长\nanimation.setDuration(3000);\n// 设置动画开始监听\nlet callbackStart = () => {\n  console.info(\"animationStart\", `callback`);\n};\nanimation.on(\"animationStart\", callbackStart);\n// 设置动画结束监听\nlet callbackEnd = () => {\n  console.info(\"animationEnd\", `callback`);\n};\nanimation.on(\"animationEnd\", callbackEnd);\n// 设置动画执行完成的状态\nanimation.setFillMode(map.AnimationFillMode.BACKWARDS);\n// 设置动画重复的方式\nanimation.setRepeatMode(map.AnimationRepeatMode.REVERSE);\n// 设置动画插值器\nanimation.setInterpolator(Curve.Linear);\n// 设置动画的重复次数\nanimation.setRepeatCount(100);\nthis.bubble.setAnimation(animation);\nthis.bubble.startAnimation();
