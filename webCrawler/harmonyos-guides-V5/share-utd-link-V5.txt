分享链接
分享App Linking直达应用
使用App Linking分享应用，目标设备接收后可直达应用，参见：使用App Linking实现应用间跳转。
[h2]开发步骤
开通App Linking服务，并完成相关配置，App Linking需经过调试。参见：调试App Linking。在应用配置文件（src/main/module.json5）的skills配置中增加关联配置。参见：声明应用关联的网站域名。使用App Linking发起系统分享。import { systemShare } from '@kit.ShareKit';\nimport { uniformTypeDescriptor as utd } from '@kit.ArkData';\nimport { common } from '@kit.AbilityKit';\nimport { image } from '@kit.ImageKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\n\n@Component\nexport default struct Index {\n  private async share() {\n    // 生成应用图标缩略图\n    const contextFaker: Context = getContext(this);\n    let thumbnailPath = contextFaker.filesDir + '/exampleImage.jpg'; // 仅为示例 请替换正确的文件路径\n    const imageSourceApi: image.ImageSource = image.createImageSource(thumbnailPath);\n    let opts: image.InitializationOptions = { size: { height: 6, width: 6 } }\n    const pixelMap: image.PixelMap = await imageSourceApi.createPixelMap(opts);\n    const imagePackerApi: image.ImagePacker = image.createImagePacker();\n    const buffer: ArrayBuffer = await imagePackerApi.packing(pixelMap, {\n      // 当前只支持'image/jpeg','image/webp'和'image/png'类型图片.\n      format: 'image/jpeg',\n      // JPEG编码中设定输出图片质量的参数,取值范围为0-100.\n      // 建议适当压缩,图片过大无法拉起分享.\n      quality: 30\n    });\n    // 构造ShareData，需配置一条有效数据信息\n    let shareData: systemShare.SharedData = new systemShare.SharedData({\n      utd: utd.UniformDataType.HYPERLINK,\n      // App Linking链接 仅为示例\n      content: 'https://sharekitdemo.drcn.agconnect.link/ZB3p',\n      title: '应用名称', // 不传title时 显示链接\n      description: '应用描述', // 不传则不显示描述内容\n      thumbnail: new Uint8Array(buffer) // 推荐传入应用图标 不传则显示默认html图标\n    });\n    // 进行分享面板显示\n    let controller: systemShare.ShareController = new systemShare.ShareController(shareData);\n    let context: common.UIAbilityContext = getContext(this) as common.UIAbilityContext;\n    controller.show(context, {\n      previewMode: systemShare.SharePreviewMode.DEFAULT,\n      selectionMode: systemShare.SelectionMode.SINGLE\n    }).then(() => {\n      console.info('ShareController show success.');\n    }).catch((error: BusinessError) => {\n      console.error(`ShareController show error. code: ${error.code}, message: ${error.message}`);\n    });\n  }\n\n  build() {\n    Button('分享')\n      .onClick(() => this.share())\n  }\n} 目标应用处理App Linking。参见：拉起方实现跳转指导。import { common, OpenLinkOptions } from '@kit.AbilityKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\n\n@Entry\n@Component\nstruct Index {\n  build() {\n    Button('start link', { type: ButtonType.Capsule, stateEffect: true })\n      .width('87%')\n      .height('5%')\n      .margin({ bottom: '12vp' })\n      .onClick(() => {\n        let context: common.UIAbilityContext = getContext(this) as common.UIAbilityContext;\n        let link: string = \"https://www.example.com/programs?action=showall\";\n        let openLinkOptions: OpenLinkOptions = {\n          appLinkingOnly: false\n        };\n        context.openLink(link, openLinkOptions)\n          .then(() => {\n            console.info('openlink success.');\n          })\n          .catch((error: BusinessError) => {\n            console.error(`openlink failed. code: ${error.code}, message: ${error.message}`);\n          });\n      })\n  }\n} 完整示例代码请参见：samplecode-分享App Linking直达应用。 
分享普通链接直达浏览器
普通链接分享支持将网页链接到目标设备/目标应用。
目标设备接收时，通过浏览器直接打开链接。目标应用接收时，可便捷地处理链接内容。例如：将一个链接分享给畅连，发送给畅连好友。
[h2]开发步骤
导入相关模块。import { systemShare } from '@kit.ShareKit';\nimport { uniformTypeDescriptor as utd } from '@kit.ArkData';\nimport { common } from '@kit.AbilityKit';\nimport { BusinessError } from '@kit.BasicServicesKit'; 构造分享数据。// 构造ShareData，需配置一条有效数据信息\nlet shareData: systemShare.SharedData = new systemShare.SharedData({\n  utd: utd.UniformDataType.HYPERLINK,\n  content: 'https://www.vmall.com/index.html?cid=128688', // 仅为示例 使用时请替换为自己的链接\n  title: '华为商城',\n  description: 'Pura 70 Ultra',\n  // thumbnail: new Uint8Array() // 推荐传入适合的缩略图 不传则显示默认html图标 \n}); 额外增加一条数据。shareData.addRecord({\n  utd: utd.UniformDataType.HYPERLINK,\n  content: 'https://www.vmall.com/index.html?cid=128688', // 仅为示例 使用时请替换为自己的链接\n  title: '测试链接',\n  description: '测试描述',\n}); 启动分享面板。// 进行分享面板显示\nlet controller: systemShare.ShareController = new systemShare.ShareController(shareData);\nlet context = getContext(this) as common.UIAbilityContext;\ncontroller.show(context, {\n  selectionMode: systemShare.SelectionMode.SINGLE,\n  previewMode: systemShare.SharePreviewMode.DEFAULT,\n}).then(() => {\n  console.info('ShareController show success.');\n}).catch((error: BusinessError) => {\n  console.error(`ShareController show error. code: ${error.code}, message: ${error.message}`);\n}); 完整示例代码请参见：samplecode-分享普通链接直达浏览器。 
