@performance/hp-arkui-wrap-waterflow-if-else-footer（已下线）
建议使用容器包裹waterflow中footer的if-else逻辑。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@performance/hp-arkui-wrap-waterflow-if-else-footer\": \"suggestion\",\n  }\n}
选项
该规则无需配置额外选项。
正例
// 源码文件，请以工程实际为准\nimport { MyDataSource } from './MyDataSource';\n\n@Entry\n@Component\nstruct MyComponent{\n  private datasource: MyDataSource = new MyDataSource();\n  private showFooterStatus = 2;\n\n  aboutToAppear() {\n    for (let i = 0; i <= 20; i++) {\n      this.datasource.pushData(i)\n    }\n  }\n\n  build() {\n    Column({ space: 2 }) {\n      WaterFlow({ footer: (): void => this.itemFoot() }) {\n        LazyForEach(this.datasource, (item: number) => {\n          FlowItem() {\n            ReusableFlowItem({ item: item })\n\n          }.onAppear(() => {\n            if (item + 20 == this.datasource.totalCount()) {\n              for (let i = 0; i < 100; i++) {\n                this.datasource.AddLastItem()\n              }\n            }\n          })\n\n          .width('100%')\n        }, (item: string) => item)\n      }\n      .columnsTemplate('1fr 1fr 1fr 1fr')\n      .columnsGap(10)\n      .rowsGap(5)\n      .width('100%')\n      .height('50%')\n    }\n  }\n\n  @Builder\n  itemFoot() {\n    //  外层加了一个column容器控制\n    Column() {\n      if (this.showFooterStatus == 1) {\n        // Code to show try again\n      } else if (this.showFooterStatus == 2) {\n        // Code to show end\n      } else {\n        // Code to show footer loading\n      }\n    }\n  }\n}\n\n@Component\n@Reusable\nstruct ReusableFlowItem {\n  @State item: number = 0\n\n  aboutToReuse(params: Record<string, ESObject>) {\n    this.item = params.item;\n  }\n\n  build() {\n    Column() {\n      Text('N' + this.item)\n        .fontSize(12)\n        .height('16')\n      Image('res/waterFlowTest (' + this.item % 5 + ').jpg')\n        .objectFit(ImageFit.Fill)\n        .width('100%')\n        .layoutWeight(1)\n    }\n  }\n}
反例
// 源码文件，请以工程实际为准\nimport { MyDataSource } from './MyDataSource';\n\n@Entry\n@Component\nstruct MyComponent{\n  private datasource: MyDataSource = new MyDataSource();\n  private showFooterStatus = 2;\n\n  aboutToAppear() {\n    for (let i = 0; i <= 20; i++) {\n      this.datasource.pushData(i)\n    }\n  }\n\n  build() {\n    Column({ space: 2 }) {\n      WaterFlow({ footer: (): void => this.itemFoot() }) {\n        LazyForEach(this.datasource, (item: number) => {\n          FlowItem() {\n            ReusableFlowItem({ item: item })\n\n          }.onAppear(() => {\n            if (item + 20 == this.datasource.totalCount()) {\n              for (let i = 0; i < 100; i++) {\n                this.datasource.AddLastItem()\n              }\n            }\n          })\n\n          .width('100%')\n        }, (item: string) => item)\n      }\n      .columnsTemplate('1fr 1fr 1fr 1fr')\n      .columnsGap(10)\n      .rowsGap(5)\n      .width('100%')\n      .height('50%')\n    }\n  }\n\n  @Builder\n  itemFoot() {\n    //  这个作为footer的build的逻辑里有if逻辑，应该在外层加一个容器控制\n    if (this.showFooterStatus == 1) {\n      // Code to show try again\n    } else if (this.showFooterStatus == 2) {\n      // Code to show end\n    } else {\n      // Code to show footer loading\n    }\n  }\n}\n\n@Component\n@Reusable\nstruct ReusableFlowItem {\n  @State item: number = 0\n\n  aboutToReuse(params: Record<string, ESObject>) {\n    this.item = params.item;\n  }\n\n  build() {\n    Column() {\n      Text('N' + this.item)\n        .fontSize(12)\n        .height('16')\n      Image('res/waterFlowTest (' + this.item % 5 + ').jpg')\n        .objectFit(ImageFit.Fill)\n        .width('100%')\n        .layoutWeight(1)\n    }\n  }\n}
规则集
plugin:@performance/all
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
