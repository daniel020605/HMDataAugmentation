@performance/hp-arkui-use-reusable-component
建议复杂组件的定义，尽量使用组件复用。
滑动丢帧场景下，建议优先修改。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@performance/hp-arkui-use-reusable-component\": \"warn\",\n  }\n}
选项
该规则无需配置额外选项。
正例
// 源码文件，请以工程实际为准\nimport { MyDataSource } from './MyDataSource';\nimport { GoodItems } from './data/DataEntry';\n\n@Reusable\n@Component\nstruct GoodItemComponent {\n  @State introduce: string = ''\n  @State price: string = ''\n  @State numb: string = ''\n\n  aboutToReuse(params: Record<string, ESObject>) {\n    this.introduce = params.introduce\n    this.price = params.price\n    this.numb = params.numb\n  }\n\n  build() {\n    Column() {\n      Text(this.introduce)\n        .fontSize(14)\n        .padding({ left: 5, right: 5 })\n        .margin({ top: 5 })\n      Row() {\n        Text('￥')\n          .fontSize(10)\n          .fontColor(Color.Red)\n          .baselineOffset(-4)\n        Text(this.price)\n          .fontSize(16)\n          .fontColor(Color.Red)\n        Text(this.numb)\n          .fontSize(10)\n          .fontColor(Color.Gray)\n          .baselineOffset(-4)\n          .margin({ left: 5 })\n\n      }\n      .width('100%')\n      .justifyContent(FlexAlign.SpaceBetween)\n      .padding({ left: 5, right: 5 })\n      .margin({ top: 15 })\n    }\n  }\n}\n\n@Entry\n@Component\nstruct MyComponent{\n  private data: MyDataSource = new MyDataSource([]);\n\n  build() {\n    Column() {\n      LazyForEach(this.data, (item: GoodItems, index) => {\n        GridItem() {\n          GoodItemComponent({\n            introduce: item.data.introduce,\n            price: item.data.price,\n            numb: item.data.numb,\n          }).reuseId(item.numb)\n        }\n      }, (item: GoodItems) => item.index)\n    }\n  }\n}
反例
// 源码文件，请以工程实际为准\nimport { MyDataSource } from './MyDataSource';\nimport { GoodItems } from './data/DataEntry';\n\n@Entry\n@Component\nstruct MyComponent{\n  private data: MyDataSource = new MyDataSource([]);\n\n  build() {\n    Column() {\n      LazyForEach(this.data, (item: GoodItems) => {\n        GridItem() {\n          Column() {\n            Text(item.introduce)\n              .fontSize(14)\n              .padding({ left: 5, right: 5 })\n              .margin({ top: 5 })\n            Row() {\n              Text('￥')\n                .fontSize(10)\n                .fontColor(Color.Red)\n                .baselineOffset(-4)\n              Text(item.price)\n                .fontSize(16)\n                .fontColor(Color.Red)\n              Text(item.numb)\n                .fontSize(10)\n                .fontColor(Color.Gray)\n                .baselineOffset(-4)\n                .margin({ left: 5 })\n\n            }\n            .width('100%')\n            .justifyContent(FlexAlign.SpaceBetween)\n            .padding({ left: 5, right: 5 })\n            .margin({ top: 15 })\n          }\n          .borderRadius(10)\n          .backgroundColor(Color.White)\n          .clip(true)\n          .width('100%')\n          .height(290)\n        }\n      }, (item: GoodItems) => item.index)\n    }\n  }\n}
规则集
plugin:@performance/recommended
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
