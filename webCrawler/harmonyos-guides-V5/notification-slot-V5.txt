管理通知渠道
系统支持多种通知渠道，不同通知渠道对应的通知提醒方式不同，可以根据应用的实际场景选择适合的通知渠道，并对通知渠道进行管理（支持创建、查询、删除等操作）。
通知渠道类型说明
不同类型的通知渠道对应的通知提醒方式不同，详见下表。其中，Y代表支持，N代表不支持。
接口说明
通知渠道主要接口如下。其他接口介绍详情参见API参考。
除了可以使用addslot()创建通知渠道，还可以在发布通知的NotificationRequest中携带notificationSlotType字段，如果对应渠道不存在，会自动创建。
开发步骤
 导入notificationManager模块。 import { notificationManager } from '@kit.NotificationKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\n\nconst TAG: string = '[PublishOperation]';\nconst DOMAIN_NUMBER: number = 0xFF00; 创建指定类型的通知渠道。 // addslot回调\nlet addSlotCallBack = (err: BusinessError): void => {\n  if (err) {\n    hilog.error(DOMAIN_NUMBER, TAG, `addSlot failed, code is ${err.code}, message is ${err.message}`);\n  } else {\n    hilog.info(DOMAIN_NUMBER, TAG, `addSlot success`);\n  }\n}\nnotificationManager.addSlot(notificationManager.SlotType.SOCIAL_COMMUNICATION, addSlotCallBack); 查询指定类型的通知渠道。 获取对应渠道是否创建以及该渠道支持的通知提醒方式，比如是否有声音提示，是否有震动，锁屏是否可见等。 // getSlot回调\nlet getSlotCallback = (err: BusinessError, data: notificationManager.NotificationSlot): void => {\n  if (err) {\n    hilog.error(DOMAIN_NUMBER, TAG, `Failed to get slot. Code is ${err.code}, message is ${err.message}`);\n  } else {\n    hilog.info(DOMAIN_NUMBER, TAG, `Succeeded in getting slot.`);\n    if (data != null) {\n      hilog.info(DOMAIN_NUMBER, TAG, `slot enable status is ${JSON.stringify(data.enabled)}`);\n      hilog.info(DOMAIN_NUMBER, TAG, `slot level is ${JSON.stringify(data.level)}`);\n      hilog.info(DOMAIN_NUMBER, TAG, `vibrationEnabled status is ${JSON.stringify(data.vibrationEnabled)}`);\n      hilog.info(DOMAIN_NUMBER, TAG, `lightEnabled status is ${JSON.stringify(data.lightEnabled)}`);\n    }\n  }\n}\nlet slotType: notificationManager.SlotType = notificationManager.SlotType.SOCIAL_COMMUNICATION;\nnotificationManager.getSlot(slotType, getSlotCallback); 删除指定类型的通知渠道。 // removeSlot回调\nlet removeSlotCallback = (err: BusinessError): void => {\n  if (err) {\n    hilog.error(DOMAIN_NUMBER, TAG, `removeSlot failed, code is ${JSON.stringify(err.code)}, message is ${JSON.stringify(err.message)}`);\n  } else {\n    hilog.info(DOMAIN_NUMBER, TAG, \"removeSlot success\");\n  }\n}\nlet slotType: notificationManager.SlotType = notificationManager.SlotType.SOCIAL_COMMUNICATION;\nnotificationManager.removeSlot(slotType, removeSlotCallback); 
