@performance/hp-arkui-use-attributeUpdater-control-refresh-scope
建议使用attributeUpdater精准控制组件属性的刷新。
通用丢帧场景下，建议优先修改。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@performance/hp-arkui-use-attributeUpdater-control-refresh-scope\": \"suggestion\",\n  }\n}
选项
该规则无需配置额外选项。
正例
import { AttributeUpdater } from '@ohos.arkui.modifier';\n// 源码文件，请以工程实际为准\nimport { MyDataSource } from './MyDataSource';\nimport { FriendMoment } from './data/DataEntry'\n\nexport class MyTextUpdater extends AttributeUpdater<TextAttribute> {\n  private color: string | number | Resource = \"\";\n\n  constructor(color: string | number | Resource) {\n    super();\n    this.color = color\n  }\n\n  initializeModifier(instance: TextAttribute): void {\n    instance.fontColor(this.color)\n  }\n}\n\n@Component\nexport struct UpdaterComponent {\n  private momentData: MyDataSource = new MyDataSource();\n\n  build() {\n    Column() {\n      Text('use MyTextUpdater')\n      List({ space: 5 }) {\n        LazyForEach(this.momentData, (moment: FriendMoment) => {\n          ListItem() {\n            OneMomentNoModifier({ color: moment.color })\n              .onClick(() => {\n                console.log(`my id is ${moment.id}`)\n              })\n          }\n        }, (moment: FriendMoment) => moment.id)\n      }.width('100%')\n      .height('100%')\n      .cachedCount(5)\n    }\n  }\n}\n\n@Reusable\n@Component\nexport struct OneMomentNoModifier {\n  color: string | number | Resource = \"\";\n  textUpdater: MyTextUpdater | null = null;\n\n  aboutToAppear(): void {\n    this.textUpdater = new MyTextUpdater(this.color);\n  }\n\n  aboutToReuse(params: Record<string, Object>): void {\n    this.color = params.color as string;\n    this.textUpdater?.attribute?.fontColor(this.color);\n  }\n\n  build() {\n    Column() {\n      Text('This is the title')\n      Text('This is the internal text')\n        .attributeModifier(this.textUpdater)\n        .textAlign(TextAlign.Center)\n        .fontStyle(FontStyle.Normal)\n        .fontSize(13)\n        .lineHeight(30)\n        .opacity(0.6)\n        .margin({ top: 10 })\n        .fontWeight(30)\n        .clip(false)\n        .backgroundBlurStyle(BlurStyle.NONE)\n        .foregroundBlurStyle(BlurStyle.NONE)\n        .borderWidth(1)\n        .borderColor(Color.Pink)\n        .borderStyle(BorderStyle.Solid)\n        .alignRules({\n          'top': { 'anchor': '__container__', 'align': VerticalAlign.Top },\n          'left': { 'anchor': 'image', 'align': HorizontalAlign.End }\n        })\n    }\n  }\n}
反例
// 源码文件，请以工程实际为准\nimport { MyDataSource } from './MyDataSource';\nimport { FriendMoment } from './data/DataEntry'\n\n@Component\nexport struct UpdaterComponent {\n  private momentData: MyDataSource = new MyDataSource();\n\n  build() {\n    Column() {\n      Text('use nothing')\n      List({ space: 5 }) {\n        LazyForEach(this.momentData, (moment: FriendMoment) => {\n          ListItem() {\n            OneMomentNoModifier({ color: moment.color })\n              .onClick(() => {\n                console.log(`my id is ${moment.id}`)\n              })\n          }\n        }, (moment: FriendMoment) => moment.id)\n      }\n      .width(\"100%\")\n      .height(\"100%\")\n      .cachedCount(5)\n    }\n  }\n}\n\n@Reusable\n@Component\nexport struct OneMomentNoModifier {\n  @State color: string | number | Resource = \"\";\n\n  aboutToReuse(params: Record<string, Object>): void {\n    this.color = params.color as number;\n  }\n\n  build() {\n    Column() {\n      Text('This is the title')\n      Text('This is the internal text')\n        .fontColor(this.color)\n        .textAlign(TextAlign.Center)\n        .fontStyle(FontStyle.Normal)\n        .fontSize(13)\n        .lineHeight(30)\n        .opacity(0.6)\n        .margin({ top: 10 })\n        .fontWeight(30)\n        .clip(false)\n        .backgroundBlurStyle(BlurStyle.NONE)\n        .foregroundBlurStyle(BlurStyle.NONE)\n        .borderWidth(1)\n        .borderColor(Color.Pink)\n        .borderStyle(BorderStyle.Solid)\n        .alignRules({\n          'top': { 'anchor': '__container__', 'align': VerticalAlign.Top },\n          'left': { 'anchor': 'image', 'align': HorizontalAlign.End }\n        })\n    }\n  }\n}
规则集
plugin:@performance/all
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
