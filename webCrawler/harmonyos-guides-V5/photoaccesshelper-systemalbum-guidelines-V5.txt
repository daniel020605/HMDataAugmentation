系统相册资源使用指导
photoAccessHelper仅提供开发者对收藏夹、视频相册、截屏和录屏相册进行相关操作。
在进行功能开发前，请开发者查阅开发准备，了解如何获取相册管理模块实例和如何申请相册管理模块功能开发相关权限。
文档中使用到PhotoAccessHelper的地方默认为使用开发准备中获取的对象，如未添加此段代码报PhotoAccessHelper未定义的错误请自行添加。
为了保证应用的运行效率，大部分photoAccessHelper的接口调用都是异步的。以下异步调用的API示例均采用Promise函数，更多方式可以查阅API参考。
如无特别说明，文档中涉及的待获取的资源均视为已经预置且在数据库中存在相应数据。如出现按照示例代码执行出现获取资源为空的情况请确认文件是否已预置，数据库中是否存在该文件的数据。
收藏夹
收藏夹属于系统相册，对图片或视频设置收藏时会自动将其加入到收藏夹中，取消收藏则会从收藏夹中移除。
[h2]获取收藏夹对象
通过PhotoAccessHelper.getAlbums接口获取收藏夹对象。
前提条件
 获取相册管理模块photoAccessHelper实例。 申请相册管理模块权限'ohos.permission.READ_IMAGEVIDEO'。 
开发步骤
 设置获取收藏夹的参数为photoAccessHelper.AlbumType.SYSTEM和photoAccessHelper.AlbumSubtype.FAVORITE。 调用PhotoAccessHelper.getAlbums接口获取收藏夹对象。 
import { photoAccessHelper } from '@kit.MediaLibraryKit';\nconst context = getContext(this);\nlet phAccessHelper = photoAccessHelper.getPhotoAccessHelper(context);\n\nasync function example() {\n  try {\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = await phAccessHelper.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.FAVORITE);\n    let album: photoAccessHelper.Album = await fetchResult.getFirstObject();\n    console.info('get favorite album successfully, albumUri: ' + album.albumUri);\n    fetchResult.close();\n  } catch (err) {\n    console.error('get favorite album failed with err: ' + err);\n  }\n}
[h2]获取收藏夹中的图片和视频
先获取收藏夹对象。然后调用Album.getAssets接口获取收藏夹中的资源。
前提条件
 获取相册管理模块photoAccessHelper实例。 申请相册管理模块权限'ohos.permission.READ_IMAGEVIDEO'。 
下面以获取收藏夹中的一张图片为例。
开发步骤
 获取收藏夹对象。 建立图片检索条件，用于获取图片。 调用Album.getAssets接口获取图片资源。 调用FetchResult.getFirstObject接口获取第一张图片。 
import { dataSharePredicates } from '@kit.ArkData';\nimport { photoAccessHelper } from '@kit.MediaLibraryKit';\nconst context = getContext(this);\nlet phAccessHelper = photoAccessHelper.getPhotoAccessHelper(context);\n\nasync function example() {\n  let predicates: dataSharePredicates.DataSharePredicates = new dataSharePredicates.DataSharePredicates();\n  let fetchOptions: photoAccessHelper.FetchOptions = {\n    fetchColumns: [],\n    predicates: predicates\n  };\n\n  try {\n    let albumFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = await phAccessHelper.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.FAVORITE);\n    let album: photoAccessHelper.Album = await albumFetchResult.getFirstObject();\n    console.info('get favorite album successfully, albumUri: ' + album.albumUri);\n\n    let photoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = await album.getAssets(fetchOptions);\n    let photoAsset: photoAccessHelper.PhotoAsset = await photoFetchResult.getFirstObject();\n    console.info('favorite album getAssets successfully, photoAsset displayName: ' + photoAsset.displayName);\n    photoFetchResult.close();\n    albumFetchResult.close();\n  } catch (err) {\n    console.error('favorite failed with err: ' + err);\n  }\n}
视频相册
视频相册属于系统相册，用户文件中属于视频类型的媒体文件会自动加入到视频相册中。
[h2]获取视频相册对象
通过PhotoAccessHelper.getAlbums接口获取视频相册对象。
前提条件
 获取相册管理模块photoAccessHelper实例。 申请相册管理模块权限'ohos.permission.READ_IMAGEVIDEO'。 
开发步骤
 设置获取视频相册的参数为photoAccessHelper.AlbumType.SYSTEM和photoAccessHelper.AlbumSubtype.VIDEO。 调用PhotoAccessHelper.getAlbums接口获取视频相册。 
import { photoAccessHelper } from '@kit.MediaLibraryKit';\nconst context = getContext(this);\nlet phAccessHelper = photoAccessHelper.getPhotoAccessHelper(context);\n\nasync function example() {\n  try {\n    let fetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = await phAccessHelper.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.VIDEO);\n    let album: photoAccessHelper.Album = await fetchResult.getFirstObject();\n    console.info('get video album successfully, albumUri: ' + album.albumUri);\n    fetchResult.close();\n  } catch (err) {\n    console.error('get video album failed with err: ' + err);\n  }\n}
[h2]获取视频相册中的视频
先获取视频相册对象。然后调用Album.getAssets接口获取视频相册对象中的视频资源。
前提条件
 获取相册管理模块photoAccessHelper实例。 申请相册管理模块权限'ohos.permission.READ_IMAGEVIDEO'。 
下面以获取视频相册中的一个视频为例。
开发步骤
 先获取视频相册对象。 建立视频检索条件，用于获取视频。 调用Album.getAssets接口获取视频资源。 调用FetchResult.getFirstObject接口获取第一个视频。 
import { dataSharePredicates } from '@kit.ArkData';\nimport { photoAccessHelper } from '@kit.MediaLibraryKit';\nconst context = getContext(this);\nlet phAccessHelper = photoAccessHelper.getPhotoAccessHelper(context);\n\nasync function example() {\n  let predicates: dataSharePredicates.DataSharePredicates = new dataSharePredicates.DataSharePredicates();\n  let fetchOptions: photoAccessHelper.FetchOptions = {\n    fetchColumns: [],\n    predicates: predicates\n  };\n\n  try {\n    let albumFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.Album> = await phAccessHelper.getAlbums(photoAccessHelper.AlbumType.SYSTEM, photoAccessHelper.AlbumSubtype.VIDEO);\n    let album: photoAccessHelper.Album = await albumFetchResult.getFirstObject();\n    console.info('get video album successfully, albumUri: ' + album.albumUri);\n\n    let videoFetchResult: photoAccessHelper.FetchResult<photoAccessHelper.PhotoAsset> = await album.getAssets(fetchOptions);\n    let photoAsset: photoAccessHelper.PhotoAsset = await videoFetchResult.getFirstObject();\n    console.info('video album getAssets successfully, photoAsset displayName: ' + photoAsset.displayName);\n    videoFetchResult.close();\n    albumFetchResult.close();\n  } catch (err) {\n    console.error('video failed with err: ' + err);\n  }\n}
