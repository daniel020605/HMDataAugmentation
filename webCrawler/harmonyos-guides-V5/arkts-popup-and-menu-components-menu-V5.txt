菜单控制（Menu）
Menu是菜单接口，一般用于鼠标右键弹窗、点击弹窗等。具体用法请参考菜单控制。
使用bindContextMenu并设置预览图，菜单弹出时有蒙层，此时为模态。
使用bindMenu或bindContextMenu未设置预览图时，菜单弹出无蒙层，此时为非模态。
生命周期
创建默认样式的菜单
菜单需要调用bindMenu接口来实现。bindMenu响应绑定组件的点击事件，绑定组件后手势点击对应组件后即可弹出。
Button('click for Menu')\n  .bindMenu([\n    {\n      value: 'Menu1',\n      action: () => {\n        console.info('handle Menu1 select')\n      }\n    }\n  ])
创建自定义样式的菜单
当默认样式不满足开发需求时，可使用@Builder自定义菜单内容，通过bindMenu接口进行菜单的自定义。
[h2]@Builder开发菜单内的内容
class Tmp {\n  iconStr2: ResourceStr = $r(\"app.media.view_list_filled\")\n\n  set(val: Resource) {\n    this.iconStr2 = val\n  }\n}\n\n@Entry\n@Component\nstruct menuExample {\n  @State select: boolean = true\n  private iconStr: ResourceStr = $r(\"app.media.view_list_filled\")\n  private iconStr2: ResourceStr = $r(\"app.media.view_list_filled\")\n\n  @Builder\n  SubMenu() {\n    Menu() {\n      MenuItem({ content: \"复制\", labelInfo: \"Ctrl+C\" })\n      MenuItem({ content: \"粘贴\", labelInfo: \"Ctrl+V\" })\n    }\n  }\n\n  @Builder\n  MyMenu() {\n    Menu() {\n      MenuItem({ startIcon: $r(\"app.media.icon\"), content: \"菜单选项\" })\n      MenuItem({ startIcon: $r(\"app.media.icon\"), content: \"菜单选项\" }).enabled(false)\n      MenuItem({\n        startIcon: this.iconStr,\n        content: \"菜单选项\",\n        endIcon: $r(\"app.media.arrow_right_filled\"),\n        // 当builder参数进行配置时，表示与menuItem项绑定了子菜单。鼠标hover在该菜单项时，会显示子菜单。\n        builder: this.SubMenu\n      })\n      MenuItemGroup({ header: '小标题' }) {\n        MenuItem({ content: \"菜单选项\" })\n          .selectIcon(true)\n          .selected(this.select)\n          .onChange((selected) => {\n            console.info(\"menuItem select\" + selected);\n            let Str: Tmp = new Tmp()\n            Str.set($r(\"app.media.icon\"))\n          })\n        MenuItem({\n          startIcon: $r(\"app.media.view_list_filled\"),\n          content: \"菜单选项\",\n          endIcon: $r(\"app.media.arrow_right_filled\"),\n          builder: this.SubMenu\n        })\n      }\n\n      MenuItem({\n        startIcon: this.iconStr2,\n        content: \"菜单选项\",\n        endIcon: $r(\"app.media.arrow_right_filled\")\n      })\n    }\n  }\n\n  build() {\n    // ...\n  }\n}
[h2]bindMenu属性绑定组件
Button('click for Menu')\n  .bindMenu(this.MyMenu)
创建支持右键或长按的菜单
通过bindContextMenu接口自定义菜单，设置菜单弹出的触发方式，触发方式为右键或长按。使用bindContextMenu弹出的菜单项是在独立子窗口内的，可显示在应用窗口外部。
 @Builder开发菜单内的内容与上文写法相同。 确认菜单的弹出方式，使用bindContextMenu属性绑定组件。示例中为右键弹出菜单。 Button('click for Menu')\n  .bindContextMenu(this.MyMenu, ResponseType.RightClick) 
