text开发指导
text是文本组件，用于呈现一段文本信息。具体用法请参考text API。
创建text组件
在pages/index目录下的hml文件中创建一个text组件。
<!-- xxx.hml -->\n<div class=\"container\" style=\"text-align: center;justify-content: center; align-items: center;\">\n  <text>Hello World</text>\n</div>
/* xxx.css */\n.container {\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #F1F3F5;\n}
设置text组件样式和属性
 添加文本样式 设置color、font-size、allow-scale、word-spacing、text-align属性分别为文本添加颜色、大小、缩放、文本之间的间距和文本在水平方向的对齐方式。 <!-- xxx.hml -->\n<div class=\"container\" style=\"background-color:#F1F3F5;flex-direction: column;justify-content: center; align-items: center;\">   \n  <text style=\"color: blueviolet; font-size: 40px; allow-scale:true\"> \n    This is a passage\n  </text>\n  <text style=\"color: blueviolet; font-size: 40px; margin-top: 20px; allow-scale:true;word-spacing: 20px;text-align: center\">\n    This is a passage\n  </text>\n</div>  /* xxx.css */\n.container {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #F1F3F5;\n}  添加划线 设置text-decoration和text-decoration-color属性为文本添加划线和划线颜色，text-decoration枚举值请参考 text自有样式。 <!-- xxx.hml -->\n<div class=\"container\" style=\"background-color:#F1F3F5;\">\n  <text style=\"text-decoration:underline\">\n    This is a passage\n  </text>\n  <text style=\"text-decoration:line-through;text-decoration-color: red\">\n    This is a passage\n   </text>\n</div> /* xxx.css */\n.container {\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\ntext{\n  font-size: 50px;\n}  隐藏文本内容 当文本内容过多而显示不全时，添加text-overflow属性将隐藏内容以省略号的形式展现。 <!-- xxx.hml -->\n<div class=\"container\">\n  <text class=\"text\">\n    This is a passage\n  </text>\n</div> /* xxx.css */\n.container {\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  background-color: #F1F3F5;\n  justify-content: center; \n}\n.text{\n  width: 200px;\n  max-lines: 1;\n  text-overflow:ellipsis;\n}      text-overflow样式需要与max-lines样式配套使用，设置了最大行数的情况下生效。 max-lines属性设置文本最多可以展示的行数。    ​  设置文本断行 设置word-break属性对文本内容做断行处理，word-break枚举值请参考text自有样式。 <!-- xxx.hml -->\n<div class=\"container\">\n  <div class=\"content\">\n    <text class=\"text1\">\n      Welcome to the world\n    </text>\n      <text class=\"text2\">\n        Welcome to the world\n      </text>\n  </div>\n</div> /* xxx.css */\n.container {\n  width: 100%;\n  height: 100%;\n  background-color: #F1F3F5;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.content{\n  width: 50%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.text1{\n  width: 100%;\n  height: 200px;\n  border:1px solid #1a1919;\n  margin-bottom: 50px;\n  text-align: center;\n  word-break: break-word;\n  font-size: 40px;\n}\n.text2{\n  width: 100%;\n  height: 200px;\n  border:1px solid #0931e8;\n  text-align: center;\n  word-break: break-all;\n  font-size: 40px;\n} ​  text组件支持Span子组件 <!-- xxx.hml -->\n<div class=\"container\" style=\"justify-content: center; align-items: center;flex-direction: column;background-color: #F1F3F5;  width: 100%;height: 100%;\">\n  <text style=\"font-size: 45px;\">\n    This is a passage\n  </text>\n  <text style=\"font-size: 45px;\">\n    <span style=\"color: aqua;\">This </span><span style=\"color: #F1F3F5;\">      1       \n    </span>   \n    <span style=\"color: blue;\"> is a </span>    <span style=\"color: #F1F3F5;\">      1    </span>    \n    <span style=\"color: red;\">  passage </span>\n  </text>\n</div>       当使用Span子组件组成文本段落时，如果Span属性样式异常（例如：font-weight设置为1000），将导致文本段落显示异常。 在使用Span子组件时，注意text组件内不能存在文本内容，如果存在文本内容也只会显示子组件Span里的内容。    
场景示例
text组件通过数据绑定展示文本内容，Span组件通过设置show属性来实现文本内容的隐藏和显示。
<!-- xxx.hml -->\n<div class=\"container\">\n  <div style=\"align-items: center;justify-content: center;\">\n    <text class=\"title\">\n      {{ content }}\n    </text>\n    <switch checked=\"true\" onchange=\"test\"></switch>\n  </div>\n  <text class=\"span-container\" style=\"color: #ff00ff;\">\n    <span show=\"{{isShow}}\">  {{ content  }}  </span>\n    <span style=\"color: white;\">\n        1\n    </span>\n    <span style=\"color: #f76160\">Hide clip </span>\n  </text>\n</div>
/* xxx.css */\n.container {\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  background-color: #F1F3F5;\n}\n.title {\n  font-size: 26px;\n  text-align:center;\n  width: 200px;\n  height: 200px;\n}
// xxx.js\nexport default {   \n  data: {    \n    isShow:true,    \n    content: 'Hello World'\n  },   \n  onInit(){    },  \n  test(e) {    \n    this.isShow = e.checked  \n  }\n}
