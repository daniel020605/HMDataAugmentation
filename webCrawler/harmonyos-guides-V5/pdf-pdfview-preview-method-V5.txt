设置PDF文档预览效果
pdfViewManager为PDF文档提供了丰富的预览特定特性。
 单双页布局，是否连续滚动和页面适配方式。 页面跳转，如上一页，下一页，跳转到指定页。 页面放大、缩小。 
图1：提供了双页预览布局，页面宽度适配和连续滚动的预览方式
接口说明
接口名
描述
setPageLayout(columnCount: PageLayout): void
设置页面布局模式。其中“columnCount”取值如下：
 1：单页面 2：双页面 
setPageContinuous(isContinuous: boolean): void
设置页面滚动是否连续排列。
setPageFit(pageFit: PageFit): void
设置页面的适配模式。
goToPage(pageIndex: number): void
跳转到指定页。
setPageZoom(zoom: number): void
设置视图的缩放比例。
示例代码
 先加载PDF文档。 调用PdfView预览组件，渲染显示。 在按钮【setPreviewMode】里，调用setPageLayout、setPageContinuous等方法，设置文档预览效果。 在按钮【goTopage】里，调用goToPage方法，设置页面跳转。 在按钮【zoomPage2】里，调用setPageZoom方法，将页面放大2倍。 
import { pdfService, PdfView, pdfViewManager } from '@kit.PDFKit';\nimport { common } from '@kit.AbilityKit';\n\n@Entry\n@Component\nstruct PdfPage {\n  private controller: pdfViewManager.PdfController = new pdfViewManager.PdfController();\n  private context = getContext() as common.UIAbilityContext;\n  private loadResult: pdfService.ParseResult = pdfService.ParseResult.PARSE_ERROR_FORMAT;\n\n  aboutToAppear(): void {\n    // 确保沙箱目录有input.pdf文档\n    let filePath = this.context.filesDir + '/input.pdf';\n    (async () => {\n      this.loadResult = await this.controller.loadDocument(filePath);\n      // 注意：这里刚加载文档，请不要在这里立即设置PDF文档的预览方法。\n    })()\n  }\n\n  build() {\n    Column() {\n      Row() {\n        // 设置预览方式\n        Button('setPreviewMode').onClick(() => {\n          if (this.loadResult === pdfService.ParseResult.PARSE_SUCCESS) {\n            // 单页布局\n            this.controller.setPageLayout(pdfService.PageLayout.LAYOUT_SINGLE);\n            // 是否连续滚动预览\n            this.controller.setPageContinuous(true);\n            // 适配页的预览方式\n            this.controller.setPageFit(pdfService.PageFit.FIT_PAGE);\n          }\n        })\n        // 跳转到第11页\n        Button('goTopage').onClick(() => {\n          if (this.loadResult === pdfService.ParseResult.PARSE_SUCCESS) {\n            this.controller.goToPage(10);\n          }\n        })\n        // 页面放大2倍\n        Button('zoomPage2').onClick(() => {\n          if (this.loadResult === pdfService.ParseResult.PARSE_SUCCESS) {\n            this.controller.setPageZoom(2);\n          }\n        })\n      }\n\n      PdfView({\n        controller: this.controller,\n        pageFit: pdfService.PageFit.FIT_WIDTH,\n        showScroll: true\n      })\n        .id('pdfview_app_view')\n        .layoutWeight(1);\n    }\n  }\n}
