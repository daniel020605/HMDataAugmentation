几何形状绘制（ArkTS）
场景介绍
当前支持绘制的几何形状，主要包括以下几种：
 点 圆弧 圆 路径 区域 矩形 圆角矩形 
大部分的几何形状均可以选择使用画笔或者使用画刷来实现绘制，其中点的绘制只能使用画笔。
接口说明
几何形状绘制的常用接口如下表所示，详细的使用和参数说明请见drawing.Canvas。
绘制点
点只能基于画笔在画布上进行绘制，通过使用drawPoint()接口绘制点。绘制点需要接受两个参数，分别为需要绘制的点的x坐标和y坐标。
简单示例如下：
// 设置画笔\nlet pen = new drawing.Pen();\n// 设置颜色\npen.setColor(0xFF, 0xFF, 0x00, 0x00);\n// 设置线宽\npen.setStrokeWidth(40);\n// 设置画笔描边效果\ncanvas.attachPen(pen);\n// 绘制5个点\ncanvas.drawPoint(200, 200);\ncanvas.drawPoint(400, 400);\ncanvas.drawPoint(600, 600);\ncanvas.drawPoint(800, 800);\ncanvas.drawPoint(1000, 1000);\n// 去除描边效果\ncanvas.detachPen();
绘制圆弧
可以使用画笔或画刷在画布上进行圆弧的绘制，通过使用drawArc()接口绘制圆弧。
绘制圆弧需要一个矩形（common2D.Rect），以矩形的边为轮廓进行绘制，还需要两个参数，分别表示弧形的起始角度（startAngle）和扫描角度（sweepAngle）。
此处以使用画笔绘制圆弧为例，简单示例如下：
// 创建画笔\nlet pen = new drawing.Pen();\n// 设置颜色\npen.setColor({ alpha: 0xFF, red: 0xFF, green: 0x00, blue: 0x00 });\n// 设置线宽\npen.setStrokeWidth(20);\n// 设置画笔描边效果\ncanvas.attachPen(pen);\n// 创建矩形对象\nconst rect: common2D.Rect = {left:100, top:200, right:1000, bottom:600};\n// 绘制矩形\ncanvas.drawArc(rect, 0, 180);\n// 去除描边效果\ncanvas.detachPen();
绘制圆
可以使用画笔或画刷在画布上进行圆的绘制，通过使用drawCircle()接口绘制圆。
绘制圆需要圆心点的x坐标和y坐标，以及圆半径（radius）。
此处以使用画笔绘制圆为例，简单示例如下：
// 创建画笔\nlet pen = new drawing.Pen();\n// 设置颜色\npen.setColor({ alpha: 0xFF, red: 0xFF, green: 0x00, blue: 0x00 });\n// 设置线宽\npen.setStrokeWidth(20);\n// 设置画笔描边效果\ncanvas.attachPen(pen);\n// 绘制圆\ncanvas.drawCircle(630, 630, 500);\n// 去除描边效果\ncanvas.detachPen();
绘制路径
可以使用画笔或画刷在画布上进行路径的绘制，路径具体可以用于绘制直线、弧线、贝塞尔曲线等，也可以通过路径组合的方式组成其他复杂的形状。
绘制路径的相关接口和实现如下，详细的使用和参数说明请见Path。常用的接口如下：
 使用new drawing.Path()可以创建一个路径对象。 使用moveTo()接口可以设置自定义路径的起始点位置。 使用lineTo()接口可以添加一条从起始点或路径的最后点位置（若路径没有内容则默认为(0,0)）到目标点位置的线段。 
此处以使用画笔和画刷绘制五角星为例，简单示例如下：
let height_ = 1800;\nlet width_ = 1800;\nlet len = height_ / 4;\nlet aX = width_ / 3;\nlet aY = height_ / 6;\nlet dX = aX - len * Math.sin(18.0);\nlet dY = aY + len * Math.cos(18.0);\nlet cX = aX + len * Math.sin(18.0);\nlet cY = dY;\nlet bX = aX + (len / 2.0);\nlet bY = aY + Math.sqrt((cX - dX) * (cX - dX) + (len / 2.0) * (len / 2.0));\nlet eX = aX - (len / 2.0);\nlet eY = bY;\n\n// 创建一个path对象，然后使用接口连接成一个五角星形状\nlet path = new drawing.Path();\n// 指定path的起始位置\npath.moveTo(aX, aY);\n// 用直线连接到目标点\npath.lineTo(bX, bY);\npath.lineTo(cX, cY);\npath.lineTo(dX, dY);\npath.lineTo(eX, eY);\n// 闭合形状，path绘制完毕\npath.close()\n\n// 创建画笔对象\nlet pen = new drawing.Pen();\n// 设置抗锯齿\npen.setAntiAlias(true);\n// 设置描边颜色\npen.setColor(0xFF, 0xFF, 0x00, 0x00);\n// 设置线宽\npen.setStrokeWidth(10.0);\n// 设置画笔描边效果\ncanvas.attachPen(pen);\n// 创建画刷\nlet brush = new drawing.Brush();\n// 设置填充颜色\nbrush.setColor(0xFF, 0x00, 0xFF, 0x00);\n// 设置画刷填充效果\ncanvas.attachBrush(brush);\n// 绘制路径\ncanvas.drawPath(path);\n// 去除填充效果\ncanvas.detachBrush();\n// 去除描边效果\ncanvas.detachPen();
绘制区域
区域不是一个特定的形状，可以设置为指定的矩形或路径，也可以对两个区域进行组合操作。可以使用画笔或画刷对区域进行绘制。详细的API说明请参考Region。
目前支持设置矩形区域和路径区域，分别通过setRect()接口和setPath()接口来设置。
此处以使用画刷绘制矩形的组合区域为例，示例如下：
// 创建画刷\nlet brush = new drawing.Brush();\n// 设置颜色\nbrush.setColor(0xFF, 0xFF,  0x00, 0x00);\n// 设置画刷填充效果\ncanvas.attachBrush(brush);\n// 创建左上角的region1\nlet region1 = new drawing.Region();\nregion1.setRect(100, 100, 600, 600);\n// 创建右下角的region2\nlet region2 = new drawing.Region();\nregion2.setRect(300, 300, 900, 900);\n// 将两个区域以XOR的方式组合\nregion1.op(region2, drawing.RegionOp.XOR);\n// 绘制区域\ncanvas.drawRegion(region1);\n// 去除填充效果\ncanvas.detachBrush();
绘制矩形
可以使用画笔或画刷在画布上进行矩形的绘制。使用drawRect()接口绘制矩形。接口需要传入四个浮点数，分别表示矩形的左、上、右、下四个位置的坐标，连接这4个坐标形成一个矩形。
此处以使用画刷绘制矩形为例，简单示例如下：
// 创建画刷\nlet brush = new drawing.Brush();\n// 设置颜色\nbrush.setColor(0xFF, 0xFF,  0x00, 0x00);\n// 设置画刷填充效果\ncanvas.attachBrush(brush);\n// 绘制矩形\ncanvas.drawRect(200, 200, 1000, 700);\n// 去除填充效果\ncanvas.detachBrush();
绘制圆角矩形
可以使用画笔或画刷在画布上进行圆角矩形的绘制。使用drawRoundRect()接口绘制圆角矩形。接口接受1个入参roundRect，对应为圆角矩形对象。
圆角矩形对象通过new drawing.RoundRect()接口构造，构造函数接受3个参数，分别为：
 common2D.Rect（矩形对象），圆角矩形是在该矩形的基础上切圆角形成。 x轴上的圆角半径。 y轴上的圆角半径。 
此处以使用画刷绘制圆角矩形为例，简单示例代码如下：
// 创建画刷\nlet brush = new drawing.Brush();\n// 设置颜色\nbrush.setColor(0xFF, 0xFF, 0x00, 0x00);\n// 设置画刷填充效果\ncanvas.attachBrush(brush);\n// 创建矩形对象\nlet rect: common2D.Rect = { left: 200, top: 200, right: 1000, bottom: 700 };\n// 创建圆角矩形对象\nlet rrect = new drawing.RoundRect(rect, 30, 30);\n// 绘制圆角矩形\ncanvas.drawRoundRect(rrect);\n// 去除填充效果\ncanvas.detachBrush();
