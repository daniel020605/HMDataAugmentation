顶点标记
超帧提供两种运动估计模式供开发者选择：分别为基础模式和增强模式。其中增强模式需要对绘制顶点的Draw Call命令进行额外的标记，在相机和物体快速运动的游戏场景超帧效果较基础模式更优，能够有效改善拖影问题。本章主要介绍增强模式的运动估计原理及顶点标记方法。
Draw Call：指图形驱动库（OpenGL ES）中进行绘制的命令，例如glDrawElements、glDrawArrays、glDrawElementsInstanced等。
运动估计模式
描述
基础模式
利用历史帧颜色信息、深度信息及相机矩阵信息进行运动估计。
增强模式
利用历史帧中的几何顶点信息进行更精准的运动估计，绘制的预测帧质量更高。 但该模式需要开发者对绘制顶点的Draw Call命令进行额外的标记， 且仅支持Mate60、Mate60 Pro、Mate X5系列华为手机，在不支持的平台上会切换成默认模式。
增强模式运动估计原理开发阶段，您需要使用系统的图形驱动库提供的OpenGL ES接口，在期望被标记的物体绘制前后添加上开始标记指令和结束标记指令。运行阶段，基于OpenGL ES的Transform Feedback（变换反馈）特性，被标记的所有Draw Call处理的顶点数据将被缓存，再通过顶点匹配、运动估计、屏幕空间投影等过程，得到高精度运动向量，最终绘制出预测帧。运行阶段流程如下图所示：  顶点标记原则被标记的物体能在运动估计阶段得到更高精度的运动向量图（MV），但需要付出额外的性能代价，开发者需要在这之间做出平衡。我们建议只标记画面中相对场景运动的物体，因为它们的顶点数量较少，但运动预测却最为困难，这样的标记方式能以少量的性能代价换取较明显的超帧画质收益。  请在对深度图有贡献的Pass中标记相应的Draw Call。比如对于延迟管线，建议在gbuffer pass中标记；对于有pre depth的前向管线，建议在pre depth pass标记；对于无pre depth的前向管线，在base pass（forward pass）中进行标记。并且注意，不要在生成shadowmap pass中的动态物体Draw Call进行标记。  标记代码示例// 引用头文件\n#include <GLES3/gl32.h>\n// 定义glHint的拓展宏\n#define GL_DRAWCALL_HINT 0x8193\n#define GL_START 0x8194\n#define GL_END 0x8195\n\n// 声明动态物体的顶点数量\nGLsizei vertices;\n\n// Render Loop\nvoid UpdateAndRenderOpaqueScene()\n{\n    /* Do something prepare ... */\n    glHint(GL_DRAWCALL_HINT, GL_START);       // 绘制动态物体前，开始记录顶点数据\n    glDrawArrays(GL_TRIANGLES, 0, vertices);  // 被记录的动态物体顶点绘制\n    glHint(GL_DRAWCALL_HINT, GL_END);         // 绘制动态物体后，结束记录顶点数据\n    /* Do something post process... */\n}  宏名 GL_DRAWCALL_HINT 、GL_START 、GL_END均为HarmonyOS NEXT/5.0.x独有的拓展宏，仅在Mate60、Mate60 Pro，Mate X5系列华为手机上被HarmonyOS的系统实现和定义，在其他芯片平台上运行时标记无效，但不会影响应用的正常运行。超帧增强模式仅支持OpenGL ES图形API平台，Vulkan平台暂不支持。  
