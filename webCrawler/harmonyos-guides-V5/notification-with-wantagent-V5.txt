为通知添加行为意图
当发布通知时，如果期望用户可以通过点击通知栏拉起目标应用组件或发布公共事件，可以通过Ability Kit申请WantAgent封装至通知消息中。
图1 携带行为意图的通知运行机制
接口说明
具体接口描述，详见WantAgent接口文档。
开发步骤
 导入模块。 import { notificationManager } from '@kit.NotificationKit';\nimport { wantAgent, WantAgent } from '@kit.AbilityKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\n\nconst TAG: string = '[PublishOperation]';\nconst DOMAIN_NUMBER: number = 0xFF00; 创建WantAgentInfo信息。 场景一：创建拉起UIAbility的WantAgent的WantAgentInfo信息。 let wantAgentObj:WantAgent; // 用于保存创建成功的wantAgent对象，后续使用其完成触发的动作。\n\n// 通过WantAgentInfo的operationType设置动作类型\nlet wantAgentInfo:wantAgent.WantAgentInfo = {\n  wants: [\n    {\n      deviceId: '',\n      bundleName: 'com.samples.notification',\n      abilityName: 'SecondAbility',\n      action: '',\n      entities: [],\n      uri: '',\n      parameters: {}\n    }\n  ],\n  actionType: wantAgent.OperationType.START_ABILITY,\n  requestCode: 0,\n  wantAgentFlags:[wantAgent.WantAgentFlags.CONSTANT_FLAG]\n}; 场景二：创建发布公共事件的WantAgent的WantAgentInfo信息。 let wantAgentObj:WantAgent; // 用于保存创建成功的WantAgent对象，后续使用其完成触发的动作。\n\n// 通过WantAgentInfo的operationType设置动作类型\nlet wantAgentInfo:wantAgent.WantAgentInfo = {\n  wants: [\n    {\n      action: 'event_name', // 设置事件名\n      parameters: {},\n    }\n  ],\n  actionType: wantAgent.OperationType.SEND_COMMON_EVENT,\n  requestCode: 0,\n  wantAgentFlags: [wantAgent.WantAgentFlags.CONSTANT_FLAG],\n}; 调用getWantAgent()方法进行创建WantAgent。 // 创建WantAgent\nwantAgent.getWantAgent(wantAgentInfo, (err: BusinessError, data:WantAgent) => {\n  if (err) {\n    hilog.error(DOMAIN_NUMBER, TAG, `Failed to get want agent. Code is ${err.code}, message is ${err.message}`);\n    return;\n  }\n  hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in getting want agent.');\n  wantAgentObj = data;\n}); 构造NotificationRequest对象，并发布WantAgent通知。 // 构造NotificationRequest对象\nlet notificationRequest: notificationManager.NotificationRequest = {\n  content: {\n    notificationContentType: notificationManager.ContentType.NOTIFICATION_CONTENT_BASIC_TEXT,\n    normal: {\n      title: 'Test_Title',\n      text: 'Test_Text',\n      additionalText: 'Test_AdditionalText',\n    },\n  },\n  id: 6,\n  label: 'TEST',\n  // wantAgentObj使用前需要保证已被赋值（即步骤3执行完成）\n  wantAgent: wantAgentObj,\n}\n\nnotificationManager.publish(notificationRequest, (err: BusinessError) => {\n  if (err) {\n    hilog.error(DOMAIN_NUMBER, TAG, `Failed to publish notification. Code is ${err.code}, message is ${err.message}`);\n    return;\n  }\n  hilog.info(DOMAIN_NUMBER, TAG, 'Succeeded in publishing notification.');\n}); 用户通过点击通知栏上的通知，系统会自动触发WantAgent的动作。 
