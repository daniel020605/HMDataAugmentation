批量算路
场景介绍
多个起点到多个终点的批量算路功能，在驾车、步行、骑行模式下，快速批量计算多个起点分别到多个终点的路线距离和耗时。
接口说明
以下是路径规划功能相关接口，主要由navi命名空间下的方法提供，更多接口及使用方法请参见接口文档。
接口名
描述
getDrivingMatrix(params: DrivingMatrixParams): Promise<MatrixResult>
驾车批量算路。
getDrivingMatrix(context: common.Context, params: DrivingMatrixParams): Promise<MatrixResult>
驾车批量算路。支持传入Context上下文。
getWalkingMatrix(params: MatrixParams): Promise<MatrixResult>
步行批量算路。
getWalkingMatrix(context: common.Context, params: MatrixParams): Promise<MatrixResult>
步行批量算路。支持传入Context上下文。
getCyclingMatrix(params: MatrixParams): Promise<MatrixResult>
骑行批量算路。
getCyclingMatrix(context: common.Context, params: MatrixParams): Promise<MatrixResult>
骑行批量算路。支持传入Context上下文。
DrivingMatrixParams
驾车批量算路的参数。
MatrixParams
步行、骑行批量算路的参数。
MatrixResult
批量算路的结果。
开发步骤
import { navi } from '@kit.MapKit';
[h2]驾车批量算路
根据多组起终点坐标批量检索符合条件的驾车路径规划方案。支持以下功能：
 支持未来出行规划。 支持根据实时路况进行合理路线规划。 支持多种路线偏好选择，如时间最短、避免经过收费的公路、避开高速公路、距离优先等。 
限制：起点数乘以终点数需小于100。
async testDrivingMatrix() {\n  let params: navi.DrivingMatrixParams = {\n    // 起点的经纬度\n    \"origins\": [\n      { \"latitude\": 31.9844, \"longitude\": 118.766253 },\n      { \"latitude\": 31.9644, \"longitude\": 118.746253 }\n    ],\n    // 终点的经纬度\n    \"destinations\": [\n      { \"latitude\": 31.9344, \"longitude\": 118.706253 }\n    ],\n    // 时间预估模型\n    \"trafficMode\": 2,\n    \"language\": \"zh_CN\"\n  };\n  const result = await navi.getDrivingMatrix(params);\n  console.info(\"Succeeded in getting driving matrix.\");\n}
[h2]步行批量算路
根据多组起终点坐标批量检索符合条件的步行路径规划方案。支持以下功能：
 支持150km以内的步行路径规划能力。 融入出行策略（时间最短、避免轮渡）。 
限制：起点数乘以终点数需小于100。
async testWalkingMatrix() {\n  let params: navi.MatrixParams = {\n    // 起点的经纬度\n    \"origins\": [\n      { \"latitude\": 31.9844, \"longitude\": 118.766253 },\n      { \"latitude\": 31.9644, \"longitude\": 118.746253 }\n    ],\n    // 终点的经纬度\n    \"destinations\": [{ \"latitude\": 31.9344, \"longitude\": 118.706253 }],\n    \"language\": \"zh_CN\"\n  };\n  const result = await navi.getWalkingMatrix(params);\n  console.info(\"Succeeded in getting walking matrix.\");\n}
[h2]骑行批量算路
根据多组起终点坐标批量检索符合条件的骑行路径规划方案。支持以下功能：
 支持500km以内的骑行路径规划能力。 融入出行策略（时间最短、避免轮渡）。 
限制：起点数乘以终点数需小于100。
async testCyclingMatrix() {\n  let params: navi.MatrixParams = {\n    // 起点的经纬度\n    \"origins\": [\n      { \"latitude\": 31.9844, \"longitude\": 118.766253 },\n      { \"latitude\": 31.9644, \"longitude\": 118.746253 }\n    ],\n    // 终点的经纬度\n    \"destinations\": [{ \"latitude\": 31.9344, \"longitude\": 118.706253 }],\n    \"language\": \"zh_CN\"\n  };\n  const result = await navi.getCyclingMatrix(params);\n  console.info(\"Succeeded in getting cycling matrix.\");\n}
