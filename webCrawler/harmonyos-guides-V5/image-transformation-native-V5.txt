使用Image完成图像变换
开发者可以通过本指导了解如何使用Native Image的接口。
开发步骤
添加依赖
在进行应用开发之前，开发者需要打开native工程的src/main/cpp/CMakeLists.txt，在target_link_libraries依赖中添加image的libace_napi.z.so、libpixelmap_ndk.z.so以及日志依赖libhilog_ndk.z.so。
target_link_libraries(entry PUBLIC libace_napi.z.so libhilog_ndk.z.so libpixelmap_ndk.z.so)
添加接口映射
打开src/main/cpp/hello.cpp文件，在Init函数中添加接口映射如下：
EXTERN_C_START\nstatic napi_value Init(napi_env env, napi_value exports)\n{\n    napi_property_descriptor desc[] = {\n        { \"testGetImageInfo\", nullptr, TestGetImageInfo, nullptr, nullptr, nullptr, napi_default, nullptr },\n        { \"testAccessPixels\", nullptr, TestAccessPixels, nullptr, nullptr, nullptr, napi_default, nullptr },\n        { \"testUnAccessPixels\", nullptr, TestUnAccessPixels, nullptr, nullptr, nullptr, napi_default, nullptr },\n    };\n\n    napi_define_properties(env, exports, sizeof(desc) / sizeof(desc[0]), desc);\n    return exports;\n}\nEXTERN_C_END
Native接口调用
具体接口说明请参考API文档。
在hello.cpp文件中获取JS的资源对象，并转为Native的资源对象，即可调用Native接口，调用方式示例代码如下：
打开src/main/cpp/hello.cpp，添加引用文件。
#include<multimedia/image_framework/image_pixel_map_napi.h>
 获取PixelMap的信息，并记录信息到OhosPixelMapInfo结构中。 static napi_value TestGetImageInfo(napi_env env, napi_callback_info info)\n {\n     napi_value result = nullptr;\n     napi_get_undefined(env, &result);\n\n     napi_value thisVar = nullptr;\n     napi_value argValue[1] = {0};\n     size_t argCount = 1;\n\n     napi_get_cb_info(env, info, &argCount, argValue, &thisVar, nullptr);\n     \n     OHOS::Media::OhosPixelMapInfo pixelMapInfo;\n     OHOS::Media::OH_GetImageInfo(env, argValue[0], &pixelMapInfo);\n     return result;\n } 获取PixelMap对象数据的内存地址，并锁定该内存。 static napi_value TestAccessPixels(napi_env env, napi_callback_info info)\n{\n    napi_value result = nullptr;\n    napi_get_undefined(env, &result);\n\n    napi_value thisVar = nullptr;\n    napi_value argValue[1] = {0};\n    size_t argCount = 1;\n\n    napi_get_cb_info(env, info, &argCount, argValue, &thisVar, nullptr);\n\n    void* addrPtr = nullptr;\n    OHOS::Media::OH_AccessPixels(env, argValue[0], &addrPtr);\n    return result;\n} 释放PixelMap对象数据的内存锁。 static napi_value TestUnAccessPixels(napi_env env, napi_callback_info info)\n{\n    napi_value result = nullptr;\n    napi_get_undefined(env, &result);\n\n    napi_value thisVar = nullptr;\n    napi_value argValue[1] = {0};\n    size_t argCount = 1;\n\n    napi_get_cb_info(env, info, &argCount, argValue, &thisVar, nullptr);\n\n    OHOS::Media::OH_UnAccessPixels(env, argValue[0]);\n    return result;\n} 
JS侧调用
 打开src\\main\\cpp\\types\\libentry\\index.d.ts(其中libentry根据工程名生成)，导入如下引用文件: import { image } from '@kit.ImageKit';\nexport const add:(a: number, b: number) => image.PixelMap;\nexport const transform: (a: image.PixelMap) => image.PixelMap;\nexport const testGetImageInfo: (a: image.PixelMap) => image.PixelMap;\nexport const testAccessPixels: (a: image.PixelMap) => image.PixelMap;\nexport const testUnAccessPixels: (a: image.PixelMap) => image.PixelMap; 打开src\\main\\ets\\pages\\index.ets, 导入\"libentry.so\"(根据工程名生成)；调用Native接口，传入JS的资源对象。示例如下: import testNapi from 'libentry.so'\nimport { image } from '@kit.ImageKit';\n\n@Entry\n@Component\nstruct Index {\n@State message: string = 'IMAGE'\n@State _PixelMap : image.PixelMap | undefined = undefined;\n\nbuild() {\n    Row() {\n    Column() {\n        Button(this.message)\n        .fontSize(50)\n        .fontWeight(FontWeight.Bold)\n        .onClick(() => {\n            const color : ArrayBuffer = new ArrayBuffer(96);\n            let opts: image.InitializationOptions = { alphaType: 0, editable: true, pixelFormat: 4, scaleMode: 1, size: { height: 4, width: 6 } }\n            image.createPixelMap(color, opts)\n            .then( (pixelmap : image.PixelMap) => {\n                this._PixelMap = pixelmap;\n                testNapi.testGetImageInfo(this._PixelMap);\n                console.info(\"Test GetImageInfo success\");\n\n                testNapi.testAccessPixels(this._PixelMap);\n                console.info(\"Test AccessPixels success\");\n\n                testNapi.testUnAccessPixels(this._PixelMap);\n                console.info(\"Test UnAccessPixels success\");\n            })\n        })\n    }\n    .width('100%')\n    }\n    .height('100%')\n}\n} 
