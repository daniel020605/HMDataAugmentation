使用MovingPhotoView播放动态照片
系统提供了MovingPhotoView组件，在一些社交类、图库类应用中，可用于播放动态照片文件。
约束与限制
针对MovingPhotoView组件的使用，有以下约束与限制：
 当前不支持动态属性设置。 当前不支持设置ArkUI通用属性expandSafeArea。 该组件长按触发播放时组件区域放大为1.1倍。 该组件使用AVPlayer进行播放，同时开启的AVPlayer个数不建议超过3个，超过3个可能会出现视频播放卡顿现象。 
开发步骤
 导入动态照片模块。 import { MovingPhotoView, MovingPhotoViewController, MovingPhotoViewAttribute } from '@kit.MediaLibraryKit'; 获取动态照片对象（MovingPhoto）。 MovingPhoto对象需要通过photoAccessHelper接口创建或获取，MovingPhotoView只接收构造完成的MovingPhoto对象。 创建、获取的方式可参考访问和管理动态照片资源。 src: photoAccessHelper.MovingPhoto | undefined = undefined; 创建动态照片控制器（MovingPhotoViewController），用于控制动态照片的播放状态（如播放、停止）。 controller: MovingPhotoViewController = new MovingPhotoViewController(); 创建动态照片组件。 以下参数取值仅为举例，具体每个属性的取值范围，可参考API文档：@ohos.multimedia.movingphotoview。  import { photoAccessHelper, MovingPhotoView, MovingPhotoViewController, MovingPhotoViewAttribute } from '@kit.MediaLibraryKit';\n\n @Entry\n @Component\n struct Index {\n   @State src: photoAccessHelper.MovingPhoto | undefined = undefined\n   @State isMuted: boolean = false\n   controller: MovingPhotoViewController = new MovingPhotoViewController();\n   build() {\n     Column() {\n       MovingPhotoView({\n         movingPhoto: this.src,\n         controller: this.controller\n       })\n         // 是否静音播放，此处由按钮控制，默认值为false非静音播放。\n         .muted(this.isMuted)\n         // 视频显示模式，默认值为Cover。\n         .objectFit(ImageFit.Cover)\n         // 播放时触发\n         .onStart(() => {\n           console.log('onStart');\n         })\n         // 播放结束触发\n         .onFinish(() => {\n           console.log('onFinish');\n         })\n         // 播放停止触发\n         .onStop(() => {\n           console.log('onStop')\n         })\n         // 出现错误触发\n         .onError(() => {\n           console.log('onError');\n         })\n \n       Row() {\n         // 按钮：开始播放\n         Button('start')\n           .onClick(() => {\n             this.controller.startPlayback()\n           })\n           .margin(5)\n         // 按钮：停止播放\n         Button('stop')\n           .onClick(() => {\n             this.controller.stopPlayback()\n           })\n           .margin(5)\n         // 按钮：是否静音播放\n         Button('mute')\n           .onClick(() => {\n             this.isMuted = !this.isMuted\n           })\n           .margin(5)\n       }\n       .alignItems(VerticalAlign.Center)\n       .justifyContent(FlexAlign.Center)\n       .height('15%')\n     }\n   }\n } 
效果展示
