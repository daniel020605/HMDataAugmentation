@performance/hp-arkui-avoid-update-auto-state-var-in-aboutToReuse
避免在aboutToReuse中对自动更新值的状态变量进行更新。
通用丢帧场景下，建议优先修改。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@performance/hp-arkui-avoid-update-auto-state-var-in-aboutToReuse\": \"suggestion\",\n  }\n}
选项
该规则无需配置额外选项。
正例
// 源码文件，请以工程实际为准\nimport { MyDataSource } from './MyDataSource';\n\n// 此处为复用的自定义组件\n@Reusable\n@Component\nstruct ItemComponent {\n  @State desc: string = '';\n  @State sum: number = 0;\n  @State avg: number = 0;\n\n  aboutToReuse(params: Record<string, Object>): void {\n    this.desc = params.desc as string;\n    this.sum = params.sum as number;\n    this.avg = params.avg as number;\n  }\n\n  build() {\n    Column() {\n      Text('子组件' + this.desc)\n        .fontSize(30)\n        .fontWeight(30)\n      Text('结果' + this.sum)\n        .fontSize(30)\n        .fontWeight(30)\n      Text('平均值' + this.avg)\n        .fontSize(30)\n        .fontWeight(30)\n    }\n  }\n}\n\n@Entry\n@Component\nstruct MyComponent {\n  private data: MyDataSource = new MyDataSource();\n\n  aboutToAppear(): void {\n    for (let index = 0; index < 20; index++) {\n      this.data.pushData(index.toString())\n    }\n  }\n\n  build() {\n    Column() {\n      List() {\n        LazyForEach(this.data, (item: string) => {\n          ListItem() {\n            ItemComponent({ desc: item, sum: 0, avg: 0 })\n          }\n          .width('100%')\n          .height(100)\n        }, (item: string) => item)\n      }\n      .width('100%')\n      .height('100%')\n    }\n    .width('100%')\n    .height('100%')\n  }\n}
反例
// 源码文件，请以工程实际为准\nimport { MyDataSource } from './MyDataSource';\n\n// 此处为复用的自定义组件\n@Reusable\n@Component\nstruct ItemComponent {\n  @State desc: string = '';\n  @State sum: number = 0;\n  @Link avg: number;\n\n  aboutToReuse(params: Record<string, Object>): void {\n    this.desc = params.desc as string;\n    this.sum = params.sum as number;\n    this.avg = params.avg as number;\n  }\n\n  build() {\n    Column() {\n      Text('子组件' + this.desc)\n        .fontSize(30)\n        .fontWeight(30)\n      Text('结果' + this.sum)\n        .fontSize(30)\n        .fontWeight(30)\n      Text('平均值' + this.avg)\n        .fontSize(30)\n        .fontWeight(30)\n    }\n  }\n}\n\n@Entry\n@Component\nstruct MyComponent {\n  private data: MyDataSource = new MyDataSource();\n\n  aboutToAppear(): void {\n    for (let index = 0; index < 20; index++) {\n      this.data.pushData(index.toString())\n    }\n  }\n\n  build() {\n    Column() {\n      List() {\n        LazyForEach(this.data, (item: string) => {\n          ListItem() {\n            ItemComponent({ desc: item, sum: 0, avg: 0 })\n          }\n          .width('100%')\n          .height(100)\n        }, (item: string) => item)\n      }\n      .width('100%')\n      .height('100%')\n    }\n    .width('100%')\n    .height('100%')\n  }\n}
规则集
plugin:@performance/recommended
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
