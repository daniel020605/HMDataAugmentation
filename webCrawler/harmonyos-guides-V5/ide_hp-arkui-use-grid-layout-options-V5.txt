@performance/hp-arkui-use-grid-layout-options
建议在指定位置时使用GridLayoutOptions提升Grid性能。
通用丢帧场景下，建议优先修改。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@performance/hp-arkui-use-grid-layout-options\": \"warn\",\n  }\n}
选项
该规则无需配置额外选项。
正例
// 源码文件，请以工程实际为准\nimport { MyDataSource } from './MyDataSource';\n\n@Reusable\n@Component\nstruct TextItem {\n  @State item: string = \"\";\n\n  build() {\n    Text(this.item)\n      .fontSize(16)\n      .backgroundColor(0xF9CF93)\n      .width('100%')\n      .height(80)\n      .textAlign(TextAlign.Center)\n      .onClick(() => {\n        this.item = 'click';\n      })\n  }\n}\n\n@Entry\n@Component\nexport struct MyComponent{\n  private datasource: MyDataSource = new MyDataSource();\n  scroller: Scroller = new Scroller();\n  private irregularData: number[] = [];\n  layoutOptions: GridLayoutOptions = {\n    regularSize: [1, 1],\n    irregularIndexes: this.irregularData,\n  };\n\n  aboutToAppear() {\n    for (let i = 1; i <= 2000; i++) {\n      this.datasource.pushData(i + '');\n      if ((i - 1) % 4 === 0) {\n        this.irregularData.push(i - 1);\n      }\n    }\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Text('Set GridItem size using GridLayoutOptions').fontColor(0xCCCCCC).fontSize(9).width('90%')\n      Grid(this.scroller, this.layoutOptions) {\n        LazyForEach(this.datasource, (item: string, index: number) => {\n          GridItem() {\n            TextItem({ item: item })\n          }\n        }, (item: string) => item)\n      }\n      .cachedCount(1)\n      .columnsTemplate('1fr 1fr 1fr')\n      .columnsGap(10)\n      .rowsGap(10)\n      .width('90%')\n      .height('40%')\n\n      Button(\"scrollToIndex:1900\").onClick(() => {\n        this.scroller.scrollToIndex(1900);\n      })\n    }.width('100%')\n    .margin({ top: 5 })\n  }\n}
反例
// 源码文件，请以工程实际为准\nimport { MyDataSource } from './MyDataSource';\n\n@Reusable\n@Component\nstruct TextItem {\n  @State item: string = \"\";\n\n  build() {\n    Text(this.item)\n      .fontSize(16)\n      .backgroundColor(0xF9CF93)\n      .width('100%')\n      .height(80)\n      .textAlign(TextAlign.Center)\n      .onClick(() => {\n        this.item = 'click';\n      })\n  }\n}\n\n@Entry\n@Component\nstruct MyComponent{\n  private datasource: MyDataSource = new MyDataSource();\n  scroller: Scroller = new Scroller();\n\n  aboutToAppear() {\n    for (let i = 1; i <= 2000; i++) {\n      this.datasource.pushData(i + '');\n    }\n  }\n\n  build() {\n    Column({ space: 5 }) {\n      Text('Use columnStart and columnEnd to set the GridItem size').fontColor(0xCCCCCC).fontSize(9).width('90%')\n      Grid(this.scroller) {\n        LazyForEach(this.datasource, (item: string, index: number) => {\n          if ((index % 4) === 0) {\n            GridItem() {\n              TextItem({ item: item })\n            }\n            .columnStart(0).columnEnd(2)\n          } else {\n            GridItem() {\n              TextItem({ item: item })\n            }\n          }\n        }, (item: string) => item)\n      }\n      .cachedCount(1)\n      .columnsTemplate('1fr 1fr 1fr')\n      .columnsGap(10)\n      .rowsGap(10)\n      .width('90%')\n      .height('40%')\n\n      Button(\"scrollToIndex:1900\").onClick(() => {\n        this.scroller.scrollToIndex(1900);\n      })\n    }.width('100%')\n    .margin({ top: 5 })\n  }\n}
规则集
plugin:@performance/recommended
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
