@performance/constant-property-referencing-check-in-loops
在循环如需频繁访问某个常量，且该属性引用常量在循环中不会改变，建议提取到循环外部，减少属性访问的次数。
根据ArkTS高性能编程实践，建议修改。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@performance/constant-property-referencing-check-in-loops\": \"suggestion\",\n  }\n}
选项
该规则无需配置额外选项。
正例
class Time {\n  static start: number = 0;\n  static info: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n}\nfunction getNum(num: number): number {\n  /* Year has (12 * 29 =) 348 days at least */\n  let total: number = 348;\n  const info = Time.info[num- Time.start];  \n  for (let index: number = 0x8000; index > 0x8; index >>= 1) {\n    if ((info & index) != 0) {\n      total++;\n    }\n  }\n  return total;\n}
反例
class Time {\n  static start: number = 0;\n  static info: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n}\nfunction getNum(num: number): number {\n  /* Year has (12 * 29 =) 348 days at least */\n  let total: number = 348;\n  for (let index: number = 0x8000; index > 0x8; index >>= 1) {\n    // warning\n    total += ((Time.info[num - Time.start] & index) !== 0) ? 1 : 0;\n  }\n  return total;\n}
规则集
plugin:@performance/all
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
