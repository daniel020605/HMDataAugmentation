折线
场景介绍
本章节将向您介绍如何在地图上绘制折线、设置折线分段颜色、设置折线可渐变、绘制纹理。
接口说明
添加折线功能主要由MapPolylineOptions、addPolyline和MapPolyline提供，更多接口及使用方法请参见接口文档。
接口名
描述
MapPolylineOptions
折线参数。
addPolyline(options: mapCommon.MapPolylineOptions): Promise<MapPolyline>
在地图上添加一条折线。
MapPolyline
折线，支持更新和查询相关属性。
开发步骤
[h2]添加折线
 导入相关模块。import { MapComponent, mapCommon, map } from '@kit.MapKit';\nimport { AsyncCallback } from '@kit.BasicServicesKit'; 添加折线，在Callback方法中创建初始化参数并新建MapPolyline。@Entry\n@Component\nstruct MapPolylineDemo {\n  private mapOptions?: mapCommon.MapOptions;\n  private mapController?: map.MapComponentController;\n  private callback?: AsyncCallback<map.MapComponentController>;\n  private mapPolyline?: map.MapPolyline;\n\n  aboutToAppear(): void {\n    // 地图初始化参数\n    this.mapOptions = {\n      position: {\n        target: {\n          latitude: 31.98,\n          longitude: 118.78\n        },\n        zoom: 14\n      }\n    };\n    this.callback = async (err, mapController) => {\n      if (!err) {\n        this.mapController = mapController;\n\n        // polyline初始化参数\n        let polylineOption: mapCommon.MapPolylineOptions = {\n          points: [{longitude:118.78,latitude:31.975}, {longitude:118.78,latitude:31.982}, {longitude:118.79,latitude:31.985}],\n          clickable: true,\n          startCap: mapCommon.CapStyle.BUTT,\n          endCap: mapCommon.CapStyle.BUTT,\n          geodesic: false,\n          jointType: mapCommon.JointType.BEVEL,\n          visible: true,\n          width: 10,\n          zIndex: 10,\n          gradient: false\n        }\n        // 创建polyline\n        this.mapPolyline = await this.mapController.addPolyline(polylineOption);\n      }\n    };\n  }\n\n  build() {\n    Stack() {\n      Column() {\n        MapComponent({ mapOptions: this.mapOptions, mapCallback: this.callback });\n      }.width('100%')\n    }.height('100%')\n  }\n}  
[h2]设置折线分段颜色
方法一：新建折线时在MapPolylineOptions的colors属性中设置折线分段颜色值。
let polylineOption: mapCommon.MapPolylineOptions = {\n  ...\n  colors: [0xffffff00, 0xff000000]\n};
方法二：调用MapPolyline的setColors()方法。
let colors = [0xffffff00, 0xff000000];\nthis.mapPolyline.setColors(colors);
[h2]设置折线可渐变
方法一：MapPolylineOptions的gradient属性设置为true。
let polylineOption: mapCommon.MapPolylineOptions = {\n  ...\n  gradient: true\n};
方法二：调用MapPolyline的setGradient()方法。
this.mapPolyline.setGradient(true);
[h2]绘制纹理
方法一：新建折线时在MapPolylineOptions的customTexture属性设置折线纹理。
let polylineOption: mapCommon.MapPolylineOptions = {\n  points: [\n    { latitude: 32.220750, longitude: 118.788765 },\n    { latitude: 32.120750, longitude: 118.788765 },\n    { latitude: 32.020750, longitude: 118.788765 },\n    { latitude: 31.920750, longitude: 118.788765 },\n    { latitude: 31.820750, longitude: 118.788765 },\n  ],\n  clickable: true,\n  jointType: mapCommon.JointType.DEFAULT,\n  width: 20,\n  customTexture: \"icon/naviline_arrow.png\"\n}
方法二：调用MapPolyline的setCustomTexture方法。
await this.mapPolyline.setCustomTexture(\"icon/naviline_arrow.png\");
