SharedArrayBuffer对象
SharedArrayBuffer内部包含一块Native内存，其JS对象壳被分配在虚拟机本地堆（LocalHeap）。支持跨并发实例间共享，但是访问及修改需要采用Atomics类，防止数据竞争。SharedArrayBuffer可以用于多个并发实例间的状态共享或者数据共享。通信过程如下图所示：
使用示例
这里提供了一个简单示例，使用TaskPool传递一个Int32Array对象，具体实现如下：
import { taskpool } from '@kit.ArkTS';\n\n@Concurrent\nfunction transferAtomics(arg1: Int32Array) {\n  console.info(\"wait begin::\");\n  // 使用Atomics进行操作\n  let res = Atomics.wait(arg1, 0, 0, 3000);\n  return res;\n}\n\n// 定义可共享对象\nlet sab: SharedArrayBuffer = new SharedArrayBuffer(20);\nlet int32 = new Int32Array(sab);\nlet task: taskpool.Task = new taskpool.Task(transferAtomics, int32);\ntaskpool.execute(task).then((res) => {\n  console.info(\"this res is: \" + res);\n});\nsetTimeout(() => {\n  Atomics.notify(int32, 0, 1);\n}, 1000);
