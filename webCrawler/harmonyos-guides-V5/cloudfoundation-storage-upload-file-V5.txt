上传指定文件至云侧
您可以快速将本地设备上的文件上传至云侧，上传完后，可以前往AppGallery Connect的“云存储”页面，查看上传的文档内容。
前提条件
您已初始化存储实例。
操作步骤
 选择待上传的文件，下方示例代码中使用photoAccessHelper.PhotoViewPicker指定需要上传的文件。 将待上传的文件复制到context.cacheDir目录下。           由于StorageBucket.uploadFile接口传入参数localPath只能设置为context.cacheDir目录下的文件路径，所以上传前需要先将文件复制到context.cacheDir目录下。   调用StorageBucket.uploadFile接口创建上传任务，监听上传任务的progress、completed、failed等事件。 启动上传任务。 
完整的示例代码如下：
import { cloudStorage } from '@kit.CloudFoundationKit';\nimport { BusinessError, request } from '@kit.BasicServicesKit';\nimport { photoAccessHelper } from '@kit.MediaLibraryKit';\nimport { fileIo as fs } from '@kit.CoreFileKit';\n\nlet storageBucket: cloudStorage.StorageBucket = cloudStorage.bucket();\n\n@Component\nexport struct testPage {\n  build() {\n  }\n\n  // 上传指定文件至云侧\n  upload() {\n    // 使用photoAccessHelper选择指定的文件\n    let photoSelectOptions = new photoAccessHelper.PhotoSelectOptions();\n    photoSelectOptions.MIMEType = photoAccessHelper.PhotoViewMIMETypes.IMAGE_TYPE; // 过滤选择媒体文件类型为IMAGE\n    photoSelectOptions.maxSelectNumber = 1; // 选择媒体文件的最大数目\n    let photoViewPicker = new photoAccessHelper.PhotoViewPicker();\n    photoViewPicker.select(photoSelectOptions).then((photoSelectResult: photoAccessHelper.PhotoSelectResult) => {\n      let fileUri = photoSelectResult.photoUris[0];\n      console.info(`pick file ${fileUri}`);\n      let fileName = fileUri.split('/').pop() as string;\n      console.info(`file name ${fileName}`);\n      let cacheFile = `${Date.now()}_${fileName}`;\n      console.info(`cacheFile ${cacheFile}`);\n      let cacheFilePath = getContext().cacheDir + '/' + cacheFile;\n\n      // 将选中文件copy至cache目录下，文件名为cacheFile\n      try {\n        let srcFile = fs.openSync(fileUri);\n        let dstFile = fs.openSync(cacheFilePath, fs.OpenMode.READ_WRITE | fs.OpenMode.CREATE);\n        fs.copyFileSync(srcFile.fd, dstFile.fd);\n        fs.closeSync(srcFile);\n        fs.closeSync(dstFile);\n      } catch (e) {\n        console.info(`copy file failed ${e.message}`);\n        return;\n      }\n\n      // 上传至云存储默认实例\n      storageBucket.uploadFile(getContext(this), {\n        localPath: cacheFile, // 本地文件路径，context.cacheDir目录下的文件\n        cloudPath: fileName    // 云侧路径\n      }).then((task: request.agent.Task) => {\n        task.on('progress', (progress) => {\n          console.info(`on progress ${JSON.stringify(progress)}`);\n        });\n        task.on('completed', (progress) => {\n          console.info(`on completed ${JSON.stringify(progress)}`);\n        });\n        task.on('failed', (progress) => {\n          console.error(`on failed ${JSON.stringify(progress)}`);\n        });\n        task.on('response', (response) => {\n          console.info(`on response ${JSON.stringify(response)}`);\n        });\n\n        // start task\n        task.start((err: BusinessError) => {\n          if (err) {\n            console.error(`Failed to start the uploadFile task, Code: ${err.code}, message: ${err.message}`);\n          } else {\n            console.info(`Succeeded in starting a uploadFile task.`);\n          }\n        });\n      }).catch((err: BusinessError) => {\n        console.error(`uploadFile failed, Code: ${err.code}, message: ${err.message}`);\n      });\n    });\n  }\n}
上传完成，可以登录AppGallery Connect，选择项目，进入“云存储”界面查看文件列表。
