@typescript-eslint/no-inferrable-types
不允许对初始化为数字、字符串或布尔值的变量或参数进行显式类型声明。
变量或者参数如果在初始化时定义为布尔、数字或者字符串类型，Typescript可以推断出其类型，不用显式声明其类型。
该规则仅支持对.js/.ts文件进行检查。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@typescript-eslint/no-inferrable-types\": \"error\"\n  }\n}
选项
详情请参考@typescript-eslint/no-inferrable-types选项。
正例
const num = 10;\nexport const a1 = 10n;\nexport const a2 = BigInt(num);\nexport const a3 = !num;\nexport const a4 = Boolean(null);\nexport const a5 = true;\nexport const a6 = null;\n\nexport class Foo {\n  public prop = num;\n}\n\nexport function fn(a = num, b = true): void {\n  console.info(`${a}${b}`);\n}
反例
const num: number = 10;\nexport const a1: bigint = 10n;\nexport const a2: bigint = BigInt(num);\nexport const a3: boolean = !num;\nexport const a4: boolean = Boolean(null);\nexport const a5: boolean = true;\nexport const a6: null = null;\n\nexport class Foo {\n  public prop: number = num;\n}\n\nexport function fn(a: number = num, b: boolean = true): void {\n  console.info(`${a}${b}`);\n}
规则集
plugin:@typescript-eslint/all
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
