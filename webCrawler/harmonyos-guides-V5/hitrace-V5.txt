hitrace
HiTrace为开发者提供业务流程调用链跟踪的维测接口。通过使用该接口所提供的功能，帮助开发者迅速获取指定业务流程调用链的运行日志，定位跨设备、跨进程、跨线程的故障问题。
环境要求
根据hdc命令行工具指导，完成环境准备。 正常连接设备。 
命令行说明
快照模式定义为固定trace标签的trace采集服务，默认情况不落盘，开发者可通过 --dump_bgsrv 命令触发当前时刻的trace转储，trace为二进制格式，文件默认生成在 /data/log/hitrace 目录下，文件命名格式为trace-YYMMDDHHmmSS@[BOOT_TIME].sys。可通过smpartperf在线工具进行查看。
常用命令
在hdc shell执行如下命令：
查看hitrace包含的tag。 hitrace -l 使用样例： $ hitrace -l\n2024/11/14 11:43:00 hitrace enter, running_state is SHOW_LIST_CATEGORY\n        tagName:   description:\n         ability - Ability Manager\n   accesscontrol - Access Control Module\n         account - Account Manager\n             ace - ACE development framework\n       animation - Animation\n             app - APP Module\n             ark - ARK Module\n       bluetooth - communicatio bluetooth\n           cloud - Cloud subsystem tag\n       cloudfile - Cloud file system\n      commercial - Commercial version tag\n   commonlibrary - commonlibrary subsystem\n          daudio - Distributed Audio\n         dcamera - Distributed Camera\n      deviceauth - Device Auth\n   devicemanager - Device Manager\n   deviceprofile - Device Profile\n           dhfwk - Distributed Hardware FWK\n          dinput - Distributed Input\n            disk - Disk I/O\nistributeddatamgr - Distributed Data Manager\n          dlpcre - Dlp Credential Service\n             drm - Digital Rights Management\n          dsched - Distributed Schedule\n         dscreen - Distributed Screen\n            dslm - device security level\n        dsoftbus - Distributed Softbus\n            ffrt - ffrt tasks\n  filemanagement - filemanagement\n            freq - CPU Frequency\n         graphic - Graphic Module\n       gresource - Global Resource Manager\n            hdcd - hdcd\n             hdf - hdf subsystem\n            huks - Universal KeyStore\n             i2c - I2C Events\n            idle - CPU Idle\n       interconn - Interconnection subsystem\n             ipa - thermal power allocator\n             irq - IRQ Events\n          irqoff - IRQ-disabled code section tracing\n            load - CPU Load\n            mdfs - Mobile Distributed File System\n          membus - Memory Bus Utilization\n          memory - Memory\n      memreclaim - Kernel Memory Reclaim\n            misc - Misc Module\n             mmc - eMMC commands\n            msdp - Multimodal Sensor Data Platform\n multimodalinput - HITRACE_TAG_MULTIMODALINPUT\n             net - net\n    notification - Notification Module\n            nweb - NWEB Module\n            ohos - HarmonyOS\n       pagecache - Page cache\n           power - Power Manager\n      preemptoff - Preempt-disabled code section tracing\n            push - Push subsystem\n      regulators - Voltage and Current Regulators\n             rpc - RPC and IPC\n           samgr - samgr\n           sched - CPU Scheduling\n        security - Security subsystem\n         sensors - Sensors Module\n            sync - Synchronization\n             ufs - UFS commands\n             usb - usb subsystem\n         useriam - useriam\n           virse - Virtualization Service\n          window - Window Manager\n           workq - Kernel Workqueues\n          zaudio - HarmonyOS Audio Module\n         zcamera - HarmonyOS Camera Module\n          zimage - HarmonyOS Image Module\n          zmedia - HarmonyOS Media Module 开始抓指定tag的trace。 hitrace --trace_begin --record app 使用样例： $ hitrace --trace_begin --record app\n2024/11/14 11:48:45 hitrace enter, running_state is RECORDING_LONG_BEGIN_RECORD\n2024/11/14 11:48:45 args: tags:app bufferSize:18432 overwrite:1\n2024/11/14 11:48:45 OpenRecording done. 结束抓trace。 hitrace --trace_finish --record，默认将trace信息打印在命令行窗口。 使用样例1： $ hitrace --trace_finish --record\n2024/11/14 11:50:33 hitrace enter, running_state is RECORDING_LONG_FINISH_RECORD\n2024/11/14 11:50:33 capture done, output files:\n    /data/log/hitrace/record_trace_20241114115033@3010728-656499531.sys hitrace --trace_finish -o /data/local/tmp/test.ftrace，添加输出路径，trace信息将导出至对应的文件中。 使用样例2： $ hitrace --trace_finish -o /data/local/tmp/test.ftrace\n2024/11/14 11:50:33 start to read trace.\n2024/11/14 11:50:33 trace read done, output: /data/local/tmp/test.ftrace 设置抓trace的一些信息：hitrace -b 10240 -t 10 -o /data/local/tmp/test2.ftrace app ability。 hitrace -b 10240 -t 10 -o /data/local/tmp/test2.ftrace app ability。 使用样例： $ hitrace -b 10240 -t 10 -o /data/local/tmp/test2.ftrace app ability\n2024/11/14 11:52:13 start capture, please wait 10s ...\n2024/11/14 11:52:23 capture done, start to read trace.\n2024/11/14 11:52:23 trace read done, output: /data/local/tmp/test2.ftrace 设置缓冲区大小为10240KB；设置抓trace时间为10s；设置抓完trace后文件存储在/data/local/tmp/test1.htrace中；抓取app/ability两个tag的trace； 导出trace信息。 hitrace --trace_dump，默认将信息显示在命令行窗口。 使用样例1： $ hitrace --trace_dump\n2024/11/14 11:54:23 start to read trace.\n# tracer: nop\n#\n# entries-in-buffer/entries-written: 2/2   #P:4\n#\n#                                          _-----=> irqs-off\n#                                         / _----=> need-resched\n#                                        | / _---=> hardirq/softirq\n#                                        || / _--=> preempt-depth\n#                                        ||| /     delay\n#           TASK-PID       TGID    CPU#  ||||   TIMESTAMP  FUNCTION\n#              | |           |       |   ||||      |         |\n         <...>-21829   (  19280) [003] .... 3011033.731844: tracing_mark_write: trace_event_clock_sync: realtime_ts=1732002022239\n         <...>-21829   (  19280) [003] .... 3011033.731865: tracing_mark_write: trace_event_clock_sync: parent_ts=3011033.750000\n# hitrace --trace_dump -o /data/local/tmp/test3.ftrace，添加输出路径，trace信息将导出至对应的文件中。 使用样例2： $ hitrace -b 10240 -t 10 -o /data/local/tmp/test2.ftrace app ability\n2024/11/14 11:54:23 start to read trace.\n2024/11/14 11:54:23 trace read done, output: /data/local/tmp/test3 也可根据关键词打印trace信息，使用命令`hitrace --trace_dump |grep \\*\\*\\*`即可。 开启快照模式trace采集服务。 hitrace --start_bgsrv。 使用样例： $ `hitrace --start_bgsrv\n2024/11/14 11:55:53 hitrace enter, running_state is SNAPSHOT_START\n2024/11/14 11:55:54 OpenSnapshot done. 快照模式导出trace。 默认将trace信息保存至/data/log/hitrace/文件夹下，文件命名格式为trace-YYMMDDHHmmSS@[BOOT_TIME].sys，抓到的是二进制trace。可通过smpartperf在线工具进行查看。 hitrace --dump_bgsrv。 使用样例： $ hitrace --dump_bgsrv\n2024/11/14 12:12:56 hitrace enter, running_state is SNAPSHOT_DUMP\n2024/11/14 12:12:57 DumpSnapshot done, output:\n    /data/log/hitrace/record_trace_20241114121257@2566589-103807063.sys 关闭快照模式trace采集服务。 hitrace --stop_bgsrv。 使用样例： $ hitrace --stop_bgsrv\n2024/11/14 11:59:43 hitrace enter, running_state is SNAPSHOT_STOP\n2024/11/14 11:59:43 CloseSnapshot done. 抓取trace后进行压缩。 hitrace -z -b 102400 -t 10 sched freq idle disk -o /data/local/tmp/test.ftrace。 使用样例： $ hitrace -z -b 102400 -t 10 sched freq idle disk -o /data/local/tmp/test.ftrace\n2024/11/14 12:00:18 start capture, please wait 10s ...\n2024/11/14 12:00:28 capture done, start to read trace.\n2024/11/14 12:00:29 trace read done, output: /data/local/tmp/test.ftrace 设置trace的输出时钟为boot(设备系统时间)。 
hitrace --trace_clock boot -b 102400 -t 10 sched freq idle disk -o /data/local/tmp/test.ftrace。
 使用样例：
$ hitrace --trace_clock boot -b 102400 -t 10 sched freq idle disk -o /data/local/tmp/test.ftrace\n2024/11/14 12:01:42 start capture, please wait 10s ...\n2024/11/14 12:01:52 capture done, start to read trace.\n2024/11/14 12:01:52 trace read done, output: /data/local/tmp/test.ftrace
结束抓trace，取消trace信息打印在命令行窗口。
hitrace --trace_finish_nodump，默认将trace信息保存至/data/log/hitrace/文件夹下。
 使用样例：
$ hitrace --trace_finish_nodump\n2024/11/14 12:03:07 hitrace enter, running_state is RECORDING_LONG_FINISH_NODUMP\n2024/11/14 12:03:07 end capture trace.
