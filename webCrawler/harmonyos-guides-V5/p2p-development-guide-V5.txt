P2P模式开发指导
简介
P2P模式，主要提供了wlan设备的一种点对点连接技术，它可以在两台 STA 之间直接建立 TCP/IP 链接，并不需要AP的参与。
场景介绍
主要场景有：
 创建/删除P2P群组 建立P2P连接 
接口说明
完整的 JS API 说明以及实例代码请参考：P2P 接口。
具体接口说明如下表。
主要场景开发步骤
[h2]创建/删除P2P群组
 import需要的WI-FI模块。 开启设备的WI-FI。 需要SystemCapability.Communication.WiFi.P2P系统能力。 创建/删除P2P群组。 示例代码： 
import { wifiManager } from '@kit.ConnectivityKit';\n\n// 创建群组，将当前设备当做GO使用时，需要该步骤\n// netId：-1表示创建临时组，下次和已连接过的设备连接，需要重新进行GO协商，以及wps秘钥协商;\n//        -2表示创建永久组，下次和已连接过的设备连接，不需要重新进行GO和wps秘钥协商;\n\nlet recvP2pPersistentGroupChangeFunc = () => {\n    console.info(\"p2p persistent group change receive event\");\n  \n    // 永久组创建好后需要处理的业务\n}\n// 创建永久组，需要注册永久组状态改变事件回调\nwifiManager.on(\"p2pPersistentGroupChange\", recvP2pPersistentGroupChangeFunc);\ntry {\n    let config:wifiManager.WifiP2PConfig = {\n        deviceAddress: \"00:11:22:33:44:55\",\n        deviceAddressType: 1,\n        netId: -2,\n        passphrase: \"12345678\",\n        groupName: \"testGroup\",\n        goBand: 0\n    }\n    wifiManager.createGroup(config);\t\n}catch(error){\n    console.error(\"failed:\" + JSON.stringify(error));\n}\n    \n// 删除群组\ntry {\n    wifiManager.removeGroup();\t\n}catch(error){\n    console.error(\"failed:\" + JSON.stringify(error));\n}
 错误码请参见WIFI错误码。 
[h2]建立P2P连接
 import需要的WI-FI模块。 开启设备的WI-FI。 需要SystemCapability.Communication.WiFi.P2P系统能力。 注册\"p2pPeerDeviceChange\"事件回调，并在回调实现中执行P2P连接。 开始P2P设备发现。 示例代码： 
import { wifiManager } from '@kit.ConnectivityKit';\n  \nlet recvP2pConnectionChangeFunc = (result:wifiManager.WifiP2pLinkedInfo) => {\n    console.info(\"p2p connection change receive event: \" + JSON.stringify(result));\n    wifiManager.getP2pLinkedInfo((err, data) => {\n        if (err) {\n            console.error('failed to get getP2pLinkedInfo: ' + JSON.stringify(err));\n            return;\n        }\n        console.info(\"get getP2pLinkedInfo: \" + JSON.stringify(data));\n        // 添加P2P连接成功或者失败场景的业务处理\n    });\n}\n// P2P连接完成，会调用\"p2pConnectionChange\"事件回调\nwifiManager.on(\"p2pConnectionChange\", recvP2pConnectionChangeFunc);\n  \nlet recvP2pPeerDeviceChangeFunc = (result:wifiManager.WifiP2pDevice[]) => {\n    console.info(\"p2p peer device change receive event: \" + JSON.stringify(result));\n    wifiManager.getP2pPeerDevices((err, data) => {\n        if (err) {\n            console.error('failed to get peer devices: ' + JSON.stringify(err));\n            return;\n        }\n        console.info(\"get peer devices: \" + JSON.stringify(data));\n        let len = data.length;\n        for (let i = 0; i < len; ++i) {\n            // 选择符合条件的对端P2P设备\n            if (data[i].deviceName === \"my_test_device\") {\n                console.info(\"p2p connect to test device: \" + data[i].deviceAddress);\n                let config:wifiManager.WifiP2PConfig = {\n                    deviceAddress:data[i].deviceAddress,\n                    deviceAddressType: 1,\n                    netId:-2,\n                    passphrase:\"\",\n                    groupName:\"\",\n                    goBand:0,\n                }\n                // 执行P2P连接，作为GO时不能主动发起连接\n                wifiManager.p2pConnect(config);\n            }\n        }\n    });\n}\n// P2P扫描结果上报时会调用\"p2pPeerDeviceChange\"事件回调\nwifiManager.on(\"p2pPeerDeviceChange\", recvP2pPeerDeviceChangeFunc);\n  \nsetTimeout(() => {wifiManager.off(\"p2pConnectionChange\", recvP2pConnectionChangeFunc);}, 125 * 1000);\nsetTimeout(() =>  {wifiManager.off(\"p2pPeerDeviceChange\", recvP2pPeerDeviceChangeFunc);}, 125 * 1000);\n// 开始发现P2P设备，即，开始P2P扫描\nconsole.info(\"start discover devices -> \" + wifiManager.startDiscoverDevices());
 错误码请参见WIFI错误码。 
