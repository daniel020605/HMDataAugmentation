Contacts Kit开发概述
Contacts Kit可以帮助开发者轻松实现联系人的增删改查等功能。该Kit提供了一系列API，可以让开发者在应用中快速集成联系人管理功能。
详情请参考@ohos.contact API。
能力范围
通过Contacts Kit，开发者可以对联系人进行管理，包括增加、删除、修改、查询联系人信息。开发者还可以通过Picker的方式，拉起联系人列表。
面向所有应用开放如下能力：
 使用Picker选择联系人 
面向三方应用受限开放如下能力：
当前能力受限开放，需要申请受限开放权限ohos.permission.READ_CONTACTS或ohos.permission.WRITE_CONTACTS。该权限通常不允许三方应用申请，仅符合指定场景的应用可申请该权限。
申请方式请参考：申请使用受限权限。
 联系人管理 选择联系人 
使用Picker选择联系人
当用户选择联系人的时候，通过Picker的方式，拉起联系人列表，引导用户完成界面操作，接口本身无需申请权限。
 导入相关的联系人模块。 import { contact } from '@kit.ContactsKit';\nimport { BusinessError } from '@kit.BasicServicesKit'; 调用联系人接口，拉起联系人列表，用户点击对应的联系人后返回。 contact.selectContacts({\n  isMultiSelect:false\n},(err: BusinessError, data) => {\n    if (err) {\n      console.error(`selectContact callback: err->${JSON.stringify(err)}`);\n        return;\n    }\n    console.log(`selectContact callback: success data->${JSON.stringify(data)}`);\n}); 完成操作，返回想要的data数据。 
选择联系人（受限开放）
 声明接口调用所需要的权限。 当前能力受限开放，需要申请受限开放权限ohos.permission.WRITE_CONTACTS。该权限通常不允许三方应用申请，仅符合指定场景的应用可申请该权限。申请方式请参考：申请使用受限权限。 设置一个需要的Permissions数组变量。 执行对应联系人的权限操作。 
import { common, abilityAccessCtrl, Permissions } from '@kit.AbilityKit';\nimport { contact } from '@kit.ContactsKit';\n\nlet context = getContext(this) as common.UIAbilityContext;\nconst permissions: Array<Permissions> = ['ohos.permission.WRITE_CONTACTS'];\n\nabilityAccessCtrl.createAtManager().requestPermissionsFromUser(context, permissions).then(() => {\n    try {\n        contact.selectContacts();\n    } catch(err) {\n        console.error('errCode: ' + err.code + ', errMessage: ' + err.message);\n    }\n})
联系人管理（受限开放）
若需要在应用内实现管理联系人的功能，可以使用permissions接口获取应用对联系人的编辑权限。
 声明接口调用所需要的权限。 当前能力受限开放，需要申请受限开放权限ohos.permission.WRITE_CONTACTS。该权限通常不允许三方应用申请，仅符合指定场景的应用可申请该权限。申请方式请参考：申请使用受限权限。 设置一个需要的Permissions数组变量。 执行对应联系人的权限操作。 
// 示例代码\nimport { common, abilityAccessCtrl, Permissions } from '@kit.AbilityKit';\nimport { contact } from '@kit.ContactsKit';\n\n@Entry\n@Component\nstruct Contact {\n  addContactByPermissions() {\n    let context = getContext(this) as common.UIAbilityContext;\n    const permissions: Array<Permissions> = ['ohos.permission.WRITE_CONTACTS'];\n    const contactInfo: contact.Contact = {\n      name: { fullName: '王小明' },\n      phoneNumbers: [{ phoneNumber: '13912345678' }]\n    }\n    abilityAccessCtrl.createAtManager().requestPermissionsFromUser(context, permissions).then(() => {\n      try {\n        contact.addContact(context, contactInfo, (err, data) => {\n          if (err) {\n            console.log('addContact callback: err->' + JSON.stringify(err));\n            return;\n          }\n          console.log('addContact callback: data->' + JSON.stringify(data));\n        })\n      } catch (err) {\n        console.error('errCode: ' + err.code + ', errMessage: ' + err.message);\n      }\n    })\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Button('添加联系人')\n          .onClick(() => {\n            this.addContactByPermissions();\n          })\n      }\n      .width('100%')\n    }\n    .height('100%')\n  }\n}
