启动ServiceAbility
ServiceAbility的启动与其他Ability并无区别，应用开发者可以在PageAbility中通过featureAbility的startAbility接口拉起ServiceAbility，在ServiceAbility中通过particleAbility的startAbility接口拉起ServiceAbility。ServiceAbility的启动规则详见组件启动规则章节。
如下示例展示了在PageAbility中通过startAbility启动bundleName为\"com.example.myapplication\"，abilityName为\"ServiceAbility\"的ServiceAbility的方法。启动FA模型的ServiceAbility时，需要在abilityName前拼接bundleName字符串。
import featureAbility from '@ohos.ability.featureAbility';\nimport Want from '@ohos.app.ability.Want';\nimport promptAction from '@ohos.promptAction';\nimport hilog from '@ohos.hilog';\n\nconst TAG: string = 'PageServiceAbility';\nconst domain: number = 0xFF00;\n\n@Entry\n@Component\nstruct PageServiceAbility {\n  async startServiceAbility(): Promise<void> {\n    try {\n      hilog.info(domain, TAG, 'Begin to start ability');\n      let want: Want = {\n        bundleName: 'com.samples.famodelabilitydevelop',\n        abilityName: 'com.samples.famodelabilitydevelop.ServiceAbility'\n      };\n      await featureAbility.startAbility({ want });\n      promptAction.showToast({\n        message: 'start_service_success_toast'\n      });\n      hilog.info(domain, TAG, `Start ability succeed`);\n    } catch (error) {\n      hilog.error(domain, TAG, 'Start ability failed with ' + error);\n    }\n  }\n  build() {\n    // ...\n  }\n}
执行上述代码后，Ability将通过startAbility()方法来启动ServiceAbility。
 如果ServiceAbility尚未运行，则系统会先调用onStart()来初始化ServiceAbility，再回调Service的onCommand()方法来启动ServiceAbility。 如果ServiceAbility正在运行，则系统会直接回调ServiceAbility的onCommand()方法来启动ServiceAbility。 
