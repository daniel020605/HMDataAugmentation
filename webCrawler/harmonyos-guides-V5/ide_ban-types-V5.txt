@typescript-eslint/ban-types
不允许使用某些类型。
规则配置
// code-linter.json5\n{\n  \"rules\": {\n    \"@typescript-eslint/ban-types\": \"error\"\n  }\n}
选项
详情请参考@typescript-eslint/ban-types选项。
正例
// 类型小写保持一致\nconst str: string = 'foo';\nconst bool: boolean = true;\nconst num: number = 1;\nconst bigInt: bigint = 1n;\n\n// 使用正确的函数类型\nconst func: () => string = () => 'hello';\n\nexport { str, bool, num, bigInt, func };
反例
// 类型小写保持一致\nconst str: String = 'foo';\nconst bool: Boolean = true;\nconst num: Number = 1;\nconst bigInt: BigInt = 1n;\n\n// 使用正确的函数类型\nconst func: Function = () => 'hello';\n\nexport { str, bool, num, bigInt, func };
规则集
plugin:@typescript-eslint/all
Code Linter代码检查规则的配置指导请参考代码Code Linter检查。
