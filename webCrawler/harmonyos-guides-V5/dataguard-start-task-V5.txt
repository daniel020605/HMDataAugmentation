启动公共目录文件扫描任务
场景介绍
Enterprise Data Guard Kit为应用提供对公共路径文件扫描的能力，获取目标路径下的文件列表。
接口说明
详细接口说明可参考接口文档。
接口名
描述
startFileScanTask(type: CommonDirScanType, callback: ScanFileCallback, batchNum?: number): void
通过Callback的方式，扫描公共目录并返回结果。
startFileScanTask(path: string, callback: ScanFileCallback, batchNum?: number): void
通过Callback的方式，扫描指定目录并返回结果。
开发步骤
 导入模块。import { fileGuard } from '@kit.EnterpriseDataGuardKit'; 初始化FileGuard对象guard，并且声明扫描结果回调函数。        按照文件类型扫描公共空间文件，查看打印结果。  function startFileScanTaskUnderCommonDir() {\n  let guard: fileGuard.FileGuard = new fileGuard.FileGuard();\n  let onReceiveFileList: (files: string[]) => void = (files: Array<string>) => {\n    files.forEach((value: string, index: number) => {\n      console.info(`Succeeded in getting file: ${value}.`);\n    })\n  };\n  let onCompleteScanTask: (count: number) => void = (count: number) => {\n    console.info(`Succeeded in getting count: ${count}.`);\n  };\n  let scanFileCallback: fileGuard.ScanFileCallback = {\n    onReceiveFileList: onReceiveFileList,\n    onTaskCompleted: onCompleteScanTask\n  };\n  guard.startFileScanTask(fileGuard.CommonDirScanType.MEDIA_ONLY, scanFileCallback);\n}  扫描公共空间指定路径下的文件，查看打印结果。  function startFileScanTaskUnderSpecifiedDir() {\n  let guard: fileGuard.FileGuard = new fileGuard.FileGuard();\n  let path: string = '/data/service/el2/test';\n  let onReceiveFileList: (files: string[]) => void = (files: Array<string>) => {\n    files.forEach((value: string, index: number) => {\n      console.info(`Succeeded in getting file: ${value}.`);\n    })\n  };\n  let onCompleteScanTask: (count: number) => void = (count: number) => {\n    console.info(`Succeeded in getting count: ${count}.`);\n  };\n  let scanFileCallback: fileGuard.ScanFileCallback = {\n    onReceiveFileList: onReceiveFileList,\n    onTaskCompleted: onCompleteScanTask\n  };\n  guard.startFileScanTask(path, scanFileCallback);\n} 
