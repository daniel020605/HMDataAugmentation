添加、删除PDF页
在PDF文档中添加或删除页面，包括：
 添加单个、多个空白页到PDF文档。 删除PDF文档中单个、多个指定页。 将其他PDF文档页添加到本PDF文档。 
接口说明
接口名
描述
insertBlankPage(index: number, width: number, height: number): PdfPage
在指定位置插入空白PDF页。
getPage(index: number): PdfPage
获取指定页的对象。
insertPageFromDocument(document: PdfDocument, fromIndex: number, pageCount: number, index: number): PdfPage
将其他文档的页添加到当前文档。
deletePage(index: number, count: number): void
删除指定的PDF页。
示例代码
 调用loadDocument方法，加载PDF文档。 调用getPage方法获取当前页，用于获取页面宽高。 调用insertBlankPage和insertPageFromDocument方法实现如下功能。        插入单个空白页。 插入多个空白页。 将input2.pdf文档的索引1、2、3页插入到input.pdf索引0的位置，并另存文档。  调用deletePage方法删除单个或多个索引页。 
import { pdfService } from '@kit.PDFKit';\nimport { common } from '@kit.AbilityKit';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\n\n@Entry\n@Component\nstruct PdfPage {\n  private pdfDocument: pdfService.PdfDocument = new pdfService.PdfDocument();\n  private context = getContext() as common.UIAbilityContext;\n\n  aboutToAppear(): void {\n    // 确保沙箱目录有input.pdf文档\n    let filePath = this.context.filesDir + '/input.pdf';\n    this.pdfDocument.loadDocument(filePath);\n  }\n\n  build() {\n    Column() {\n      // 插入单个空白页\n      Button('insertBankPage').onClick(async () => {\n        let page: pdfService.PdfPage = this.pdfDocument.getPage(0);\n        let page2: pdfService.PdfPage = this.pdfDocument.insertBlankPage(2, page.getWidth(), page.getHeight());\n        let outPdfPath = this.context.filesDir + '/testInsertBankPage.pdf';\n        let result = this.pdfDocument.saveDocument(outPdfPath);\n        hilog.info(0x0000, 'PdfPage', 'insertBankPage %{public}s!', result ? 'success' : 'fail');\n      })\n      // 插入多个空白页\n      Button('insertSomeBankPage').onClick(async () => {\n        let page: pdfService.PdfPage = this.pdfDocument.getPage(0);\n        for (let i = 0; i < 3; i++) {\n          this.pdfDocument.insertBlankPage(2, page.getWidth(), page.getHeight());\n        }\n        let outPdfPath = this.context.filesDir + '/testInsertSomeBankPage.pdf';\n        let result = this.pdfDocument.saveDocument(outPdfPath);\n        hilog.info(0x0000, 'PdfPage', 'insertSomeBankPage %{public}s!', result ? 'success' : 'fail');\n      })\n      // 将input2.pdf文档的索引1,2,3页插入到input.pdf索引0的位置，并另存文档\n      Button('insertPageFromDocument').onClick(async () => {\n        let pdfDoc: pdfService.PdfDocument = new pdfService.PdfDocument();\n        // 确保该沙箱目录下有 input2.pdf文档\n        pdfDoc.loadDocument(this.context.filesDir + '/input2.pdf');\n        this.pdfDocument.insertPageFromDocument(pdfDoc, 1, 3, 0);\n        let outPdfPath = this.context.filesDir + '/testInsertPageFromDocument.pdf';\n        let result = this.pdfDocument.saveDocument(outPdfPath);\n        hilog.info(0x0000, 'PdfPage', 'insertPageFromDocument %{public}s!', result ? 'success' : 'fail');\n      })\n      // 删除单个或多个索引页\n      Button('deletePage').onClick(async () => {\n        this.pdfDocument.deletePage(2, 2);\n        let outPdfPath = this.context.filesDir + '/testDeletePage.pdf';\n        let result = this.pdfDocument.saveDocument(outPdfPath);\n        hilog.info(0x0000, 'PdfPage', 'deletePage %{public}s!', result ? 'success' : 'fail');\n      })      \n    }\n  }\n}
